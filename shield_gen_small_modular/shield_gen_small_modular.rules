OVERCLOCK : <./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/OVERCLOCK
{
	EXTENDED : ^/0/EXTENDED
	{
		LINE_RADIUS_FACTOR = (&LINE_RADIUS) / (&../LINE_RADIUS)
		LINE_FACTOR = (&LINE_ARC) / (&../LINE_ARC)
		
		// Auxiliary calculations
		DISTANCE_FACTOR = (&ARC_DISTANCE) / (&../ARC_DISTANCE)
		LINE_DISTANCE = (&../LINE_DISTANCE) * (&DISTANCE_FACTOR)
		LINE_RADIUS = (&LINE_DISTANCE) + (&~/STATS/LINE_FRONT_LOCATION/1)
		
		ARC_RADIUS = (&../ARC_RADIUS) * (&^/0/ARC_RADIUS_FACTOR)
		ARC_DISTANCE = (&ARC_RADIUS) - (&~/STATS/ARC_LOCATION/1)
		ARC_ARC = (&../ARC_ARC) * (&^/0/ARC_FACTOR)
		ARC_CHORD = 2 * (&ARC_RADIUS) * sin( rad(&ARC_ARC) /2)
		CHORD_FACTOR = (&ARC_CHORD) / (&../ARC_CHORD)
		LINE_CHORD = (&../LINE_CHORD) * (&CHORD_FACTOR)
		LINE_ARC = deg( asin( (&LINE_CHORD) /2 / (&../LINE_RADIUS) ) *2 )		
	}
	REINFORCED : ^/0/REINFORCED
	{
		LINE_FACTOR = (&LINE_ARC) / (&../LINE_ARC)
		
		// Auxiliary calculations
		ARC_ARC = (&../ARC_ARC) * (&^/0/ARC_FACTOR)
		ARC_CHORD = 2 * (&../ARC_RADIUS) * sin( rad(&ARC_ARC) /2)
		CHORD_FACTOR = (&ARC_CHORD) / (&../ARC_CHORD)
		LINE_CHORD = (&../LINE_CHORD) * (&CHORD_FACTOR)
		LINE_ARC = deg( asin( (&LINE_CHORD) /2 / (&../LINE_RADIUS) ) *2 )
	}
	
	// Auxiliary calculations
	ARC_CHORD = 2 * (&ARC_RADIUS) * sin( rad( (&ARC_ARC) ) /2)
	LINE_CHORD = 2 * (&LINE_RADIUS) * sin( rad( (&LINE_ARC) ) /2)
	ARC_DISTANCE = (&ARC_RADIUS) - (&~/STATS/ARC_LOCATION/1)
	LINE_DISTANCE = (&LINE_RADIUS) - (&~/STATS/LINE_FRONT_LOCATION/1)
	
	// Auxiliary references
	ARC_RADIUS = (&~/Part/Components/ArcShield/Radius/BaseValue)
	ARC_ARC = deg(&~/Part/Components/ArcShield/Arc/BaseValue)
	LINE_RADIUS = (&~/Part/Components/LineShield/Radius/BaseValue)
	LINE_ARC = deg(&~/Part/Components/LineShield/Arc/BaseValue)
}

STATS
{
	ROTATION_SPEED = 50	// degrees per second
	
	ARC_LEFT_ROTATION = -117.5d
	ARC_FRONT_ROTATION = -90d
	ARC_RIGHT_ROTATION = -62.5d
	
	LINE_LEFT_ROTATION = -109.7d
	LINE_FRONT_ROTATION = -90d
	LINE_RIGHT_ROTATION = -70.3d
	
	ARC_LOCATION = [1, 1.5]

	LINE_LEFT_LOCATION = [27, 75]
	LINE_FRONT_LOCATION = [1, 80]
	LINE_RIGHT_LOCATION = [-25, 75]
}

Part : <./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part
{
/*
	NameKey = "Parts/KebechetGenSmallModularShield"
	DescriptionKey = "Parts/KebechetGenSmallModularShieldDesc"
	ID = swefpifh.Kebechet_GenSmall_ModularShield
	IconNameKey = "Parts/KebechetGenSmallModularShieldIcon"
*/
	ID = cosmoteer.shield_gen_small
	OtherIDs = [shield_generator, swefpifh.Kebechet_GenSmall_ModularShield]
	IsBuildable = true
	ReceivableBuffs : ^/0/ReceivableBuffs [ ShieldOverclockExtendedLineRadius, ShieldOverclockExtendedLineArc, ShieldOverclockReinforcedLineArc ]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	
	Components : ^/0/Components, <purple/purple.rules>/Components, <blue/blue.rules>/Components, <green/green.rules>/Components, <orange/orange.rules>/Components, <red/red.rules>/Components, <yellow/yellow.rules>/Components
	{
		// --------------------------------- START TOGGLES
		
		// -----------------------------------------------
		// COLOURS TOGGLES -------------------------------
		// -----------------------------------------------

		ToggleColour
		{
			Type = UIToggle
			ToggleID = "Kebechet_ToggleID_Colours"
			Default = 0
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}
				
		ToggleColour_Purple
		{
			Type = ModeToggle
			Mode = ToggleColour
			OnMode = 0
		}
		ToggleColour_Blue :		ToggleColour_Purple	{ OnMode = 1 }
		ToggleColour_Orange :	ToggleColour_Purple	{ OnMode = 2 }
		ToggleColour_Red :		ToggleColour_Purple	{ OnMode = 3 }
		ToggleColour_Yellow :	ToggleColour_Purple	{ OnMode = 4 }
		ToggleColour_Green :	ToggleColour_Purple	{ OnMode = 5 }

		// -----------------------------------------------
		// ANGLE TOGGLES ---------------------------------
		// -----------------------------------------------

		ToggleAngle
		{
			Type = UIToggle
			ToggleID = "Kebechet_ToggleID_GENS_Angle"
			Default = 1
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}

		ToggleAngle_Arc_Front
		{
			Type = ModeToggle
			Mode = ToggleAngle
			OnMode = 1
		}
		ToggleAngle_Arc_Left :		ToggleAngle_Arc_Front	{ OnMode = 0 }		
		ToggleAngle_Arc_Right :		ToggleAngle_Arc_Front	{ OnMode = 2 }
		ToggleAngle_Line_Left :		ToggleAngle_Arc_Front	{ OnMode = 3 }
		ToggleAngle_Line_Front :	ToggleAngle_Arc_Front	{ OnMode = 4 }
		ToggleAngle_Line_Right :	ToggleAngle_Arc_Front	{ OnMode = 5 }
		
		// -----------------------------------------------
		// DISPLAY TOGGLES -------------------------------
		// -----------------------------------------------
		
		ToggleDisplay
		{
			Type = UIToggle
			ToggleID = "Kebechet_ToggleID_Display"
			Default = 0
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}

		ToggleDisplay_On
		{
			Type = ModeToggle
			Mode = ToggleDisplay
			OnMode = 0
		}

		ToggleDisplay_Off : ToggleDisplay_On	{ OnMode = 1 }
		
		// -----------------------------------------------
		// PROXY -----------------------------------------
		// -----------------------------------------------
		
		Kebechet_GEN_Small_ColoursProxy
		{
			Type = ToggleProxy
			ComponentID = Kebechet_GEN_Small_ColoursSet
		}
			Kebechet_GEN_Small_ColoursSet
			{
				Type = MultiToggle
				Toggles = [ToggleColour_Purple, ToggleColour_Blue, ToggleColour_Orange, ToggleColour_Red, ToggleColour_Yellow, ToggleColour_Green]
				Mode = Any
			}
		
		Kebechet_GEN_Small_AngleProxy
		{
			Type = ToggleProxy
			ComponentID = Kebechet_GEN_Small_AngleSet
		}
			Kebechet_GEN_Small_AngleSet
			{
				Type = MultiToggle
				Toggles = [ToggleAngle_Arc_Front, ToggleAngle_Line_Front, ToggleAngle_Line_Left, ToggleAngle_Line_Right, ToggleAngle_Arc_Left, ToggleAngle_Arc_Right]
				Mode = Any
			}
		
		Kebechet_GEN_Small_DisplayProxy
		{
			Type = ToggleProxy
			ComponentID = Kebechet_GEN_Small_DisplaySet
		}
			Kebechet_GEN_Small_DisplaySet
			{
				Type = MultiToggle
				Toggles = [ToggleDisplay_Off, ToggleDisplay_On]
				Mode = Any
			}
		
		// --------------------------------- END TOGGLES
		
		ProgressBar // borrar o cambiar colores
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = BatteryStorage
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}

		IsOperationalProxy
		{
			Type = MultiToggle
			Toggles = [ProxyBatteryStorage]
			Mode = All
		}
		
		ProxyBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 0
			ToggleOnResources = 1
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		
		// Starts Rotation for Arcs
		
		RotationTween_Arc_LeftToFront
		{
			Type = ValueTween
			OnTweenDuration = 0.55
			OffTweenDuration = &OnTweenDuration
			IsOnToggle = RotationToggle_Arc_Front
		}
		RotationTween_Arc_FrontToRight : RotationTween_Arc_LeftToFront	{ IsOnToggle = RotationToggle_Arc_Right }
		
		RotationToggle_Arc_IsNotRight
		{
			Type = ThresholdToggle
			AmountFrom = RotationTween_Arc_FrontToRight
			MaxAmount = 0
		}
		RotationToggle_Arc_UIFront
		{
			Type = MultiToggle
			Toggles = [ ToggleAngle_Arc_Front, ToggleAngle_Arc_Right, { Toggle=ToggleAngle_Arc_Left; Invert=true} ]
			Mode = Any
		}
		RotationToggle_Arc_Front
		{
			Type = MultiToggle
			Toggles = [ RotationToggle_Arc_UIFront, { Toggle=RotationToggle_Arc_IsNotRight; Invert=true } ]
			Mode = Any
		}
		
		RotationToggle_Arc_IsFront
		{
			Type = ThresholdToggle
			AmountFrom = RotationTween_Arc_LeftToFront
			MinAmount = 1
		}
		RotationToggle_Arc_Right
		{
			Type = MultiToggle
			Toggles = [ RotationToggle_Arc_IsFront, ToggleAngle_Arc_Right ]
			Mode = All
		}

		Transform_Arc_Rotation_LeftToFront
		{
			Type = TransformLerp
			ValueFrom = RotationTween_Arc_LeftToFront
			Location = &~/STATS/ARC_LOCATION
			StartRotation = &~/STATS/ARC_LEFT_ROTATION
			EndRotation = &~/STATS/ARC_FRONT_ROTATION
		}
		Transform_Arc_Rotation_FrontToRight
		{
			Type = TransformLerp
			ValueFrom = RotationTween_Arc_FrontToRight
			ChainedTo = Transform_Arc_Rotation_LeftToFront
			StartRotation = 0
			EndRotation = (&~/STATS/ARC_RIGHT_ROTATION) - (&~/STATS/ARC_FRONT_ROTATION)
		}
		
		// Start Buffs for Arcs
		
		ToggleAngle_Arc
		{
			Type = MultiToggle
			Toggles = [ ToggleAngle_Arc_Left, ToggleAngle_Arc_Front, ToggleAngle_Arc_Right ]
			Mode = Any
		}
		
		Overclock_ExtendedModeToggle_Arc
		{
			Type = MultiToggle
			Toggles = [Overclock_ExtendedModeToggle, ToggleAngle_Arc]
			Mode = All
		}
		Overclock_ReinforcedModeToggle_Arc :	Overclock_ExtendedModeToggle_Arc	{ Toggles = [Overclock_ReinforcedModeToggle, ToggleAngle_Arc] }
		
		Overclock_ExtendedModeRawValue_Arc
		{
			Type = ValueTween
			IsOnToggle = Overclock_ExtendedModeToggle_Arc
			OnTweenDuration = &~/OVERCLOCK/MODE_SWITCH_TIME
			OffTweenDuration = &OnTweenDuration
		}
		Overclock_ReinforcedModeRawValue_Arc : Overclock_ExtendedModeRawValue_Arc	{ IsOnToggle = Overclock_ReinforcedModeToggle_Arc }
		
		Overclock_ExtendedModeValue_Arc
		{
			Type = MultiValue
			Values = [ Overclock_ExtendedModeRawValue_Arc, OverclockStateValue ]
			Mode = Min
		}
		Overclock_ReinforcedModeValue_Arc : Overclock_ExtendedModeValue_Arc
		{
			Values = [ Overclock_ReinforcedModeRawValue_Arc, OverclockStateValue ]
		}
		
		Overclock_ExtendedModeBuff : ^/0/Overclock_ExtendedModeBuff
		{
			BuffMultiplier = Overclock_ExtendedModeValue_Arc
		}
		Overclock_ReinforcedModeBuff : Overclock_ExtendedModeBuff
		{
			BuffType = ShieldOverclockReinforced
			BuffMultiplier = Overclock_ReinforcedModeValue_Arc
		}
		
		// Starts Rotation for Lines
		
		RotationTween_Line_LeftToFront
		{
			Type = ValueTween
			OnTweenDuration = 0.394
			OffTweenDuration = &OnTweenDuration
			IsOnToggle = RotationToggle_Line_Front
		}
		RotationTween_Line_FrontToRight : RotationTween_Line_LeftToFront	{ IsOnToggle = RotationToggle_Line_Right }
		
		RotationToggle_Line_IsNotRight
		{
			Type = ThresholdToggle
			AmountFrom = RotationTween_Line_FrontToRight
			MaxAmount = 0
		}
		RotationToggle_Line_UIFront
		{
			Type = MultiToggle
			Toggles = [ ToggleAngle_Line_Front, { Toggle=ToggleAngle_Line_Left; Invert=true } ]
			Mode = Any
		}
		RotationToggle_Line_Front
		{
			Type = MultiToggle
			Toggles = [ RotationToggle_Line_UIFront, { Toggle=RotationToggle_Line_IsNotRight; Invert=true } ]
			Mode = Any
		}
		
		RotationToggle_IsFront
		{
			Type = ThresholdToggle
			AmountFrom = RotationTween_Line_LeftToFront
			MinAmount = 1
		}
		RotationToggle_Line_Right
		{
			Type = MultiToggle
			Toggles = [ RotationToggle_IsFront, ToggleAngle_Line_Right ]
			Mode = All
		}

		Transform_Line_Rotation_LeftToFront
		{
			Type = TransformLerp
			ValueFrom = RotationTween_Line_LeftToFront
			StartLocation = &~/STATS/LINE_LEFT_LOCATION
			StartRotation = &~/STATS/LINE_LEFT_ROTATION
			EndLocation = &~/STATS/LINE_FRONT_LOCATION
			EndRotation = &~/STATS/LINE_FRONT_ROTATION
		}
		Transform_Line_Rotation_FrontToRight
		{
			Type = TransformLerp
			ValueFrom = RotationTween_Line_FrontToRight
			ChainedTo = Transform_Line_Rotation_LeftToFront
			StartLocation = [0, 0]
			StartRotation = 0d
			EndLocation = [(&~/STATS/LINE_FRONT_LOCATION/1) - (&~/STATS/LINE_RIGHT_LOCATION/1), (&~/STATS/LINE_RIGHT_LOCATION/0) - (&~/STATS/LINE_FRONT_LOCATION/0)] // It is rotated to the right. Therefore X and Y are switched, and also Y is also reflected
			EndRotation = (&~/STATS/LINE_RIGHT_ROTATION) - (&~/STATS/LINE_FRONT_ROTATION)
		}
		
		// Start Buffs for Lines
		
		ToggleAngle_Line
		{
			Type = MultiToggle
			Toggles = [ ToggleAngle_Line_Left, ToggleAngle_Line_Front, ToggleAngle_Line_Right ]
			Mode = Any
		}
		
		Overclock_ExtendedModeToggle_Line
		{
			Type = MultiToggle
			Toggles = [Overclock_ExtendedModeToggle, ToggleAngle_Line]
			Mode = All
		}
		Overclock_ExtendedModeRawValue_Line
		{
			Type = ValueTween
			IsOnToggle = Overclock_ExtendedModeToggle_Line
			OnTweenDuration = &~/OVERCLOCK/MODE_SWITCH_TIME
			OffTweenDuration = &OnTweenDuration
		}
		
		Overclock_ReinforcedModeToggle_Line :	Overclock_ExtendedModeToggle_Line
		{
			Toggles = [Overclock_ReinforcedModeToggle, ToggleAngle_Line]
		}
		Overclock_ReinforcedModeRawValue_Line : Overclock_ExtendedModeRawValue
		{
			IsOnToggle = Overclock_ReinforcedModeToggle_Line
		}
		
		Overclock_ExtendedModeValue_Line
		{
			Type = MultiValue
			Values = [ Overclock_ExtendedModeRawValue_Line, OverclockStateValue ]
			Mode = Min
		}
		Overclock_ReinforcedModeValue_Line : Overclock_ExtendedModeValue
		{
			Values = [ Overclock_ReinforcedModeRawValue_Line, OverclockStateValue ]
		}
		Overclock_ExtendedModeBuff_Line_Radius
		{
			Type = SelfBuffProvider
			OperationalToggle = IsOverclocked
			BuffType = ShieldOverclockExtendedLineRadius
			BuffMultiplier = Overclock_ExtendedModeValue_Line
		}
		Overclock_ExtendedModeBuff_Line_Arc
		{
			Type = SelfBuffProvider
			OperationalToggle = IsOverclocked
			BuffType = ShieldOverclockExtendedLineArc
			BuffMultiplier = Overclock_ExtendedModeValue_Line
		}
		Overclock_ReinforcedModeBuff_Line : Overclock_ExtendedModeBuff_Line_Arc
		{
			BuffType = ShieldOverclockReinforcedLineArc
			BuffMultiplier = Overclock_ReinforcedModeValue_Line
		}
		
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// ARCSHIELD ORIGINAL - START //////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		ArcShield : ^/0/ArcShield	// Just here to make colors inherite from it
		{
			OperationalToggle = IsOperationalProxy
			Location = [0, 0]	// Takes from Transform_Arc_Rotation_FrontToRight
			Rotation = 0d	// Takes from Transform_Arc_Rotation_FrontToRight
			ChainedTo = Transform_Arc_Rotation_FrontToRight
			BlueprintArcSprite	{}
		}
		
		LineShield : ArcShield	// Just here to make colors inherite from it
		{
			ChainedTo = Transform_Line_Rotation_FrontToRight
			Radius
			{
				BaseValue = 85
				Modifiers
				[
					{
						Type = BuffRemap
						BuffType = ShieldOverclockExtendedLineRadius
						ModificationMode = Multiply
						RemapFrom = [0, 1]
			 			RemapTo = [1, &~/OVERCLOCK/EXTENDED/LINE_RADIUS_FACTOR]
					}
				]
			}
			Arc
			{
				BaseValue = 7.15d
				Modifiers
				[
					{
						Type = BuffRemap
						BuffType = ShieldOverclockExtendedLineArc
						ModificationMode = Multiply
						RemapFrom = [0, 1]
						RemapTo = [1, &~/OVERCLOCK/EXTENDED/LINE_FACTOR ]
					}
					{
						Type = BuffRemap
						BuffType = ShieldOverclockReinforcedLineArc
						ModificationMode = Multiply
						RemapFrom = [0, 1]
						RemapTo = [1, &~/OVERCLOCK/REINFORCED/LINE_FACTOR ]
					}
				]
			}
						
			ShieldMediaEffects
			[
				: &../^/0/ShieldMediaEffects/0
				{
					Radius = &../../Radius
					Arc = &../../Arc
				}
				: &../^/0/ShieldMediaEffects/1 {}
			]
			HitMediaEffects
			[
				: &../^/0/HitMediaEffects/0
				{
					Radius = &../../Radius
					Arc = 2d
				}
				: &../^/0/HitMediaEffects/1 {}
			]
		}

		Toggle_BlueprintArc_Arc_Front
		{
			Type = MultiToggle
			Toggles = [ToggleAngle_Arc_Front, {Toggle=OverclockModeToggle, Invert=true}]
			Mode = All
		}
		Toggle_BlueprintArc_Arc_Right :		Toggle_BlueprintArc_Arc_Front	{ Toggles = [ToggleAngle_Arc_Right, {Toggle=OverclockModeToggle, Invert=true}] }
		Toggle_BlueprintArc_Arc_Left :		Toggle_BlueprintArc_Arc_Front	{ Toggles = [ToggleAngle_Arc_Left, {Toggle=OverclockModeToggle, Invert=true}] }
		Toggle_BlueprintArc_Line_Front :	Toggle_BlueprintArc_Arc_Front	{ Toggles = [ToggleAngle_Line_Front, {Toggle=OverclockModeToggle, Invert=true}] }
		Toggle_BlueprintArc_Line_Right :	Toggle_BlueprintArc_Arc_Front	{ Toggles = [ToggleAngle_Line_Right, {Toggle=OverclockModeToggle, Invert=true}] }
		Toggle_BlueprintArc_Line_Left :		Toggle_BlueprintArc_Arc_Front	{ Toggles = [ToggleAngle_Line_Left, {Toggle=OverclockModeToggle, Invert=true}] }

		BlueprintArc_Arc_Front
		{
			Type = ArcSprite
			VisibilityToggle = Toggle_BlueprintArc_Arc_Front
			Location = &~/STATS/ARC_LOCATION
			Rotation = &~/STATS/ARC_FRONT_ROTATION
			Radius = &../ArcShield/Radius/BaseValue
			Arc = &../ArcShield/Arc/BaseValue
			SpriteSegments = &../ArcShield/BlueprintArcSpriteSegments
			Sprite : &../ArcShield/^/0/BlueprintArcSprite	{}
		}
		BlueprintArc_Arc_Right :	BlueprintArc_Arc_Front
		{
			VisibilityToggle = Toggle_BlueprintArc_Arc_Right
			Rotation = &~/STATS/ARC_RIGHT_ROTATION
		}
		BlueprintArc_Arc_Left :		BlueprintArc_Arc_Front
		{
			VisibilityToggle = Toggle_BlueprintArc_Arc_Left
			Rotation = &~/STATS/ARC_LEFT_ROTATION
		}
		BlueprintArc_Line_Front :	BlueprintArc_Arc_Front
		{
			VisibilityToggle = Toggle_BlueprintArc_Line_Front
			Rotation = &~/STATS/LINE_FRONT_ROTATION
			Location = &~/STATS/LINE_FRONT_LOCATION
			Radius = &../LineShield/Radius/BaseValue
			Arc = &../LineShield/Arc/BaseValue
		}
		BlueprintArc_Line_Right :	BlueprintArc_Line_Front
		{
			VisibilityToggle = Toggle_BlueprintArc_Line_Right
			Rotation = &~/STATS/LINE_RIGHT_ROTATION
			Location = &~/STATS/LINE_RIGHT_LOCATION
		}
		BlueprintArc_Line_Left :	BlueprintArc_Line_Front
		{
			VisibilityToggle = Toggle_BlueprintArc_Line_Left
			Rotation = &~/STATS/LINE_LEFT_ROTATION
			Location = &~/STATS/LINE_LEFT_LOCATION
		}

		Toggle_Overclock_ExtendedBlueprintArc_Front
		{
			Type = MultiToggle
			Toggles = [ToggleAngle_Arc_Front, Overclock_ExtendedAndOverclockedModeToggle]
			Mode = All
		}
		Toggle_Overclock_ExtendedBlueprintArc_Right :	Toggle_Overclock_ExtendedBlueprintArc_Front	{ Toggles = [ToggleAngle_Arc_Right, Overclock_ExtendedAndOverclockedModeToggle] }
		Toggle_Overclock_ExtendedBlueprintArc_Left :	Toggle_Overclock_ExtendedBlueprintArc_Front	{ Toggles = [ToggleAngle_Arc_Left, Overclock_ExtendedAndOverclockedModeToggle] }
		Toggle_Overclock_ExtendedBlueprintLine_Front :	Toggle_Overclock_ExtendedBlueprintArc_Front	{ Toggles = [ToggleAngle_Line_Front, Overclock_ExtendedAndOverclockedModeToggle] }
		Toggle_Overclock_ExtendedBlueprintLine_Right :	Toggle_Overclock_ExtendedBlueprintArc_Front	{ Toggles = [ToggleAngle_Line_Right, Overclock_ExtendedAndOverclockedModeToggle] }
		Toggle_Overclock_ExtendedBlueprintLine_Left :	Toggle_Overclock_ExtendedBlueprintArc_Front	{ Toggles = [ToggleAngle_Line_Left, Overclock_ExtendedAndOverclockedModeToggle] }

		Overclock_ExtendedBlueprintArc :	BlueprintArc_Arc_Front	// Named like this to override the original
		{
			VisibilityToggle = Toggle_Overclock_ExtendedBlueprintArc_Front
			Location = &~/STATS/ARC_LOCATION
			Rotation = &~/STATS/ARC_FRONT_ROTATION
			Radius = (&../ArcShield/Radius/BaseValue) * (&~/OVERCLOCK/EXTENDED/ARC_RADIUS_FACTOR)
			Arc = (&../ArcShield/Arc/BaseValue) * (&~/OVERCLOCK/EXTENDED/ARC_FACTOR)
			Sprite : &<./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/Overclock_ExtendedBlueprintArc/Sprite	{}
		}
		Overclock_ExtendedBlueprintArc_Arc_Right :	Overclock_ExtendedBlueprintArc
		{
			VisibilityToggle = Toggle_Overclock_ExtendedBlueprintArc_Right
			Rotation = &~/STATS/ARC_RIGHT_ROTATION
		}
		Overclock_ExtendedBlueprintArc_Arc_Left :	Overclock_ExtendedBlueprintArc
		{
			VisibilityToggle = Toggle_Overclock_ExtendedBlueprintArc_Left
			Rotation = &~/STATS/ARC_LEFT_ROTATION
		}
		Overclock_ExtendedBlueprintArc_Line_Front :	Overclock_ExtendedBlueprintArc
		{
			VisibilityToggle = Toggle_Overclock_ExtendedBlueprintLine_Front
			Rotation = &~/STATS/LINE_FRONT_ROTATION
			Location = &~/STATS/LINE_FRONT_LOCATION
			Radius = (&../LineShield/Radius/BaseValue) * (&~/OVERCLOCK/EXTENDED/LINE_RADIUS_FACTOR)
			Arc = (&../LineShield/Arc/BaseValue) * (&~/OVERCLOCK/EXTENDED/LINE_FACTOR)
		}
		Overclock_ExtendedBlueprintArc_Line_Right :	Overclock_ExtendedBlueprintArc_Line_Front
		{
			VisibilityToggle = Toggle_Overclock_ExtendedBlueprintLine_Right
			Rotation = &~/STATS/LINE_RIGHT_ROTATION
			Location = &~/STATS/LINE_RIGHT_LOCATION
		}
		Overclock_ExtendedBlueprintArc_Line_Left :	Overclock_ExtendedBlueprintArc_Line_Front
		{
			VisibilityToggle = Toggle_Overclock_ExtendedBlueprintLine_Left
			Rotation = &~/STATS/LINE_LEFT_ROTATION
			Location = &~/STATS/LINE_LEFT_LOCATION
		}

		Toggle_Overclock_ReinforcedBlueprintArc_Front
		{
			Type = MultiToggle
			Toggles = [ToggleAngle_Arc_Front, Overclock_ReinforcedAndOverclockedModeToggle]
			Mode = All
		}
		Toggle_Overclock_ReinforcedBlueprintArc_Right :		Toggle_Overclock_ReinforcedBlueprintArc_Front	{ Toggles = [ToggleAngle_Arc_Right, Overclock_ReinforcedAndOverclockedModeToggle] }
		Toggle_Overclock_ReinforcedBlueprintArc_Left :		Toggle_Overclock_ReinforcedBlueprintArc_Front	{ Toggles = [ToggleAngle_Arc_Left, Overclock_ReinforcedAndOverclockedModeToggle] }
		Toggle_Overclock_ReinforcedBlueprintLine_Front :	Toggle_Overclock_ReinforcedBlueprintArc_Front	{ Toggles = [ToggleAngle_Line_Front, Overclock_ReinforcedAndOverclockedModeToggle] }
		Toggle_Overclock_ReinforcedBlueprintLine_Right :	Toggle_Overclock_ReinforcedBlueprintArc_Front	{ Toggles = [ToggleAngle_Line_Right, Overclock_ReinforcedAndOverclockedModeToggle] }
		Toggle_Overclock_ReinforcedBlueprintLine_Left :		Toggle_Overclock_ReinforcedBlueprintArc_Front	{ Toggles = [ToggleAngle_Line_Left, Overclock_ReinforcedAndOverclockedModeToggle] }

		Overclock_ReinforcedBlueprintArc :	Overclock_ExtendedBlueprintArc	// Named like this to override the original
		{
			VisibilityToggle = Toggle_Overclock_ReinforcedBlueprintArc_Front
			Arc = (&../ArcShield/Arc/BaseValue) * (&~/OVERCLOCK/REINFORCED/ARC_FACTOR)
			Sprite : &<./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/Overclock_ReinforcedBlueprintArc/Sprite	{}
		}
		Overclock_ReinforcedBlueprintArc_Arc_Right :	Overclock_ReinforcedBlueprintArc
		{
			VisibilityToggle = Toggle_Overclock_ReinforcedBlueprintArc_Right
			Rotation = &~/STATS/ARC_RIGHT_ROTATION
		}
		Overclock_ReinforcedBlueprintArc_Arc_Left :	Overclock_ReinforcedBlueprintArc
		{
			VisibilityToggle = Toggle_Overclock_ReinforcedBlueprintArc_Left
			Rotation = &~/STATS/ARC_LEFT_ROTATION
		}
		Overclock_ReinforcedBlueprintArc_Line_Front :	Overclock_ReinforcedBlueprintArc
		{
			VisibilityToggle = Toggle_Overclock_ReinforcedBlueprintLine_Front
			Rotation = &~/STATS/LINE_FRONT_ROTATION
			Location = &~/STATS/LINE_FRONT_LOCATION
			Radius = &../LineShield/Radius/BaseValue
			Arc = (&../LineShield/Arc/BaseValue) * (&~/OVERCLOCK/REINFORCED/LINE_FACTOR)
		}
		Overclock_ReinforcedBlueprintArc_Line_Right :	Overclock_ReinforcedBlueprintArc_Line_Front
		{
			VisibilityToggle = Toggle_Overclock_ReinforcedBlueprintLine_Right
			Rotation = &~/STATS/LINE_RIGHT_ROTATION
			Location = &~/STATS/LINE_RIGHT_LOCATION
		}
		Overclock_ReinforcedBlueprintArc_Line_Left :	Overclock_ReinforcedBlueprintArc_Line_Front
		{
			VisibilityToggle = Toggle_Overclock_ReinforcedBlueprintLine_Left
			Rotation = &~/STATS/LINE_LEFT_ROTATION
			Location = &~/STATS/LINE_LEFT_LOCATION
		}

		BaseEmitterEffect : ^/0/BaseEmitterEffect	// Just here to make colors inherite from it
		{
			OperationalToggle = IsOperationalProxy
			Location = [&../../^/0/ArcShield/Location/0 , (&../../^/0/ArcShield/Location/1) - (&../^/0/Location/0)]	// The location is switched cause it is rotated
			Rotation = &../^/0/ArcShield/Rotation
			ChainedTo	// Normally chained to ArcShield, but we don't want it to rotate
		}

		ArcShield_ChainProxy	// No idea if this is actually needed. Chaining it instead to ArcShield with IsOperationalProxy seems to also work normally.
		{
			Type = ChainableProxy
			ComponentID = GENS_ArcShield
		}
		EmitterSoundEffects : BaseEmitterEffect, <./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/EmitterSoundEffects
		{
			ChainedTo = ArcShield_ChainProxy
			OperationalToggle = &^/1/OperationalToggle	// IsOperationalNonOverclocked
			MediaEffects :	&^/1/MediaEffects	[]
		}
		Overclock_EmitterSoundEffects : BaseEmitterEffect, <./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/Overclock_EmitterSoundEffects
		{
			ChainedTo = ArcShield_ChainProxy
			OperationalToggle = &^/1/OperationalToggle	// IsOperationalOverclocked
			MediaEffects :	&^/1/MediaEffects	[]
		}

		ShieldOperationEffects :	<./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/ShieldOperationEffects
		{
			ChainedTo = ArcShield_ChainProxy
			Location = [&~/Part/Components/ArcShield/Radius/BaseValue, 0]
		}

		Overclock_StartEffects :	ShieldOperationEffects, <./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/Overclock_ShieldReinforcedEffects
		{
			Toggle = &^/1/Toggle	// IsOperationalOverclocked
			ToggledOffMediaEffects
			ToggledOnMediaEffects : &^/1/ToggledOnMediaEffects	[]
		}

		Overclock_ArcShieldProxy
		{
			Type = TriggerProxy
			ComponentID = GENS_ArcShield
			ProxyToggle = IsOperationalOverclocked
		}
		
		OverloadEffect :	^/0/OverloadEffect
		{
			OperationalToggle = IsOperationalProxy
			ContinuousEffects
			[
				: ../^/0/ContinuousEffects/0
				{
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
				}
			]
		}
		Overclock_ExtendedEffect :	^/0/Overclock_ExtendedEffect
		{
			OperationalToggle = IsOperationalProxy
			ContinuousEffects
			[
				: ../^/0/ContinuousEffects/0
				{
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
				}
			]
		}
		Overclock_OverloadEffect_Extended :	^/0/Overclock_OverloadEffect_Extended
		{
			OperationalToggle = IsOperationalProxy
			ContinuousEffects
			[
				: ../^/0/ContinuousEffects/0
				{
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
				}
			]
		}
		Overclock_ReinforcedEffect :	^/0/Overclock_ReinforcedEffect
		{
			OperationalToggle = IsOperationalProxy
			ContinuousEffects
			[
				: ../^/0/ContinuousEffects/0
				{
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
				}
			]
		}
		Overclock_OverloadEffect_Reinforced :	^/0/Overclock_OverloadEffect_Reinforced
		{
			OperationalToggle = IsOperationalProxy
			ContinuousEffects
			[
				: ../^/0/ContinuousEffects/0
				{
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
				}
			]
		}
		
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// ARCSHIELD ORIGINAL - END ////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	}

	Stats 	// Make it inherit? Exactly same as Small Shield
	{
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&../StatsByCategory/0/Stats/PowerUsageContinuous) + 0.5
		RecCrew = (&RecPower) * 4
	}
	
	StatsByCategory
	[
		{
			NameKey = "StatCategories/ShieldSmall"
			Stats
			{
				ShieldHP = (&~/Part/Components/BatteryStorage/MaxResources) / (&~/Part/Components/ArcShield/ResourceDrainPerDamage/BaseValue)
				ShieldPenResist = &~/Part/Components/ArcShield/PenetrationResistance/0
				PowerUsageContinuous = (&~/Part/Components/PowerDrain/FromQuantity) / (&~/Part/Components/PowerDrain/Interval) / 1000
				ARC_ARC = deg(&~/Part/Components/ArcShield/Arc/BaseValue)
				ARC_DISTANCE = (&~/Part/Components/ArcShield/Radius/BaseValue) - (&~/Part/Components/Transform_Arc_Rotation_LeftToFront/Location/1)
				LINE_CHORD = &~/OVERCLOCK/LINE_CHORD
				LINE_DISTANCE = (&~/Part/Components/LineShield/Radius/BaseValue) - (&~/Part/Components/Transform_Line_Rotation_LeftToFront/EndLocation/1)
				ShieldDistanceDouble = [&../ARC_DISTANCE, &../LINE_DISTANCE]
				ShieldCoverageDouble = [&../ARC_ARC, &../LINE_CHORD]
				
//				DamageArea = (&~/OVERCLOCK/EXTENDED/ARC_CHORD) *100
//				DamageAreaFalloff = (&~/OVERCLOCK/REINFORCED/ARC_CHORD) *100
			}
		}
	]
	
	SecondaryToolTip
	{
		TitleKey = "StatCategories/Overclocked"
		DescriptionKey = "Parts/ShieldGenSmallOverclockDesc"
		Stats
		{
			HeatGeneration = (&~/OVERCLOCK/HEAT_PER_SECOND)
		}
		StatsByCategory
		[
			{
				NameKey = "StatCategories/ShieldExtended"
				Stats
				{
					HeatPerDamage = (&~/OVERCLOCK/EXTENDED/HEAT_PER_DAMAGE)
					ARC_ARC = deg(&~/Part/Components/ArcShield/Arc/BaseValue) * (&~/OVERCLOCK/EXTENDED/ARC_FACTOR)
					ARC_DISTANCE = (&~/Part/Components/ArcShield/Radius/BaseValue) * (&~/OVERCLOCK/EXTENDED/ARC_RADIUS_FACTOR) - (&~/Part/Components/Transform_Arc_Rotation_LeftToFront/Location/1)
					LINE_CHORD = &~/OVERCLOCK/EXTENDED/LINE_CHORD
					LINE_DISTANCE = (&~/Part/Components/LineShield/Radius/BaseValue) * (&~/OVERCLOCK/EXTENDED/LINE_RADIUS_FACTOR) - (&~/Part/Components/Transform_Line_Rotation_LeftToFront/EndLocation/1)
					ShieldDistanceDouble = [&../ARC_DISTANCE, &../LINE_DISTANCE]
					ShieldCoverageDouble = [&../ARC_ARC, &../LINE_CHORD]
				}
			}
			{
				NameKey = "StatCategories/ShieldReinforced"
				Stats
				{
					ShieldHP = (&~/Part/StatsByCategory/0/Stats/ShieldHP) / (&~/OVERCLOCK/REINFORCED/DAMAGE_DRAIN_FACTOR)
					EMPResistPercentage = (&~/OVERCLOCK/REINFORCED/EMP_RESIST) * 100
					HeatPerDamage = (&~/OVERCLOCK/REINFORCED/HEAT_PER_DAMAGE)
					ARC_ARC = deg(&~/Part/Components/ArcShield/Arc/BaseValue) * (&~/OVERCLOCK/REINFORCED/ARC_FACTOR)
					LINE_CHORD = &~/OVERCLOCK/REINFORCED/LINE_CHORD
					ShieldCoverageDouble = [&../ARC_ARC, &../LINE_CHORD]
				}
			}
		]
	}
	
}