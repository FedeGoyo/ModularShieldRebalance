Stats 
{
	// Inner
	ArcShield_InnerFront
	{
		Rotation = -90d
		OperationalToggle = InnerFrontIsOperational
		DrainResourcesFrom = CombinedInnerFrontBatteryStorage
	}
	ArcShield_InnerFrontRight
	{
		Rotation = -30d
		OperationalToggle = InnerFrontRightIsOperational
		DrainResourcesFrom = CombinedInnerFrontRightBatteryStorage
	}
	ArcShield_InnerBackRight
	{
		Rotation = 30d
		OperationalToggle = InnerBackRightIsOperational
		DrainResourcesFrom = CombinedInnerBackRightBatteryStorage
	}
	ArcShield_InnerBack
	{
		Rotation = 90d
		OperationalToggle = InnerBackIsOperational
		DrainResourcesFrom = CombinedInnerBackBatteryStorage
	}
	ArcShield_InnerBackLeft
	{
		Rotation = 150d
		OperationalToggle = InnerBackLeftIsOperational
		DrainResourcesFrom = CombinedInnerBackLeftBatteryStorage
	}
	ArcShield_InnerFrontLeft
	{
		Rotation = 210d
		OperationalToggle = InnerFrontLeftIsOperational
		DrainResourcesFrom = CombinedInnerFrontLeftBatteryStorage
	}
	
	BaseEffect_InnerFront
	{
		Shield = ArcShield_InnerFront
		ChainedTo = ArcShield_InnerFront
		FactorMediaEffectsIntensityWith = CombinedInnerFrontBatteryStorage
	}
	OverclockEffect_InnerFront : 			BaseEffect_InnerFront	{ OperationalToggle = InnerFrontOverclockEffect }
	OverloadEffect_InnerFront :				BaseEffect_InnerFront	{ OperationalToggle = InnerFrontOverloadEffect }
	OverclockOverloadEffect_InnerFront :	BaseEffect_InnerFront	{ OperationalToggle = InnerFrontOverclockOverloadEffect }
	
	BaseEffect_InnerFrontRight
	{
		Shield = ArcShield_InnerFrontRight
		ChainedTo = ArcShield_InnerFrontRight
		FactorMediaEffectsIntensityWith = CombinedInnerFrontRightBatteryStorage
	}
	OverclockEffect_InnerFrontRight : 			BaseEffect_InnerFrontRight	{ OperationalToggle = InnerFrontRightOverclockEffect }
	OverloadEffect_InnerFrontRight :			BaseEffect_InnerFrontRight	{ OperationalToggle = InnerFrontRightOverloadEffect }
	OverclockOverloadEffect_InnerFrontRight :	BaseEffect_InnerFrontRight	{ OperationalToggle = InnerFrontRightOverclockOverloadEffect }
	
	BaseEffect_InnerBackRight
	{
		Shield = ArcShield_InnerBackRight
		ChainedTo = ArcShield_InnerBackRight
		FactorMediaEffectsIntensityWith = CombinedInnerBackRightBatteryStorage
	}
	OverclockEffect_InnerBackRight : 			BaseEffect_InnerBackRight	{ OperationalToggle = InnerBackRightOverclockEffect }
	OverloadEffect_InnerBackRight :				BaseEffect_InnerBackRight	{ OperationalToggle = InnerBackRightOverloadEffect }
	OverclockOverloadEffect_InnerBackRight :	BaseEffect_InnerBackRight	{ OperationalToggle = InnerBackRightOverclockOverloadEffect }
	
	BaseEffect_InnerBack
	{
		Shield = ArcShield_InnerBack
		ChainedTo = ArcShield_InnerBack
		FactorMediaEffectsIntensityWith = CombinedInnerBackBatteryStorage
	}
	OverclockEffect_InnerBack : 		BaseEffect_InnerBack	{ OperationalToggle = InnerBackOverclockEffect }
	OverloadEffect_InnerBack :			BaseEffect_InnerBack	{ OperationalToggle = InnerBackOverloadEffect }
	OverclockOverloadEffect_InnerBack :	BaseEffect_InnerBack	{ OperationalToggle = InnerBackOverclockOverloadEffect }
	
	BaseEffect_InnerBackLeft
	{
		Shield = ArcShield_InnerBackLeft
		ChainedTo = ArcShield_InnerBackLeft
		FactorMediaEffectsIntensityWith = CombinedInnerBackLeftBatteryStorage
	}
	OverclockEffect_InnerBackLeft : 		BaseEffect_InnerBackLeft	{ OperationalToggle = InnerBackLeftOverclockEffect }
	OverloadEffect_InnerBackLeft :			BaseEffect_InnerBackLeft	{ OperationalToggle = InnerBackLeftOverloadEffect }
	OverclockOverloadEffect_InnerBackLeft :	BaseEffect_InnerBackLeft	{ OperationalToggle = InnerBackLeftOverclockOverloadEffect }
	
	BaseEffect_InnerFrontLeft
	{
		Shield = ArcShield_InnerFrontLeft
		ChainedTo = ArcShield_InnerFrontLeft
		FactorMediaEffectsIntensityWith = CombinedInnerFrontLeftBatteryStorage
	}
	OverclockEffect_InnerFrontLeft : 			BaseEffect_InnerFrontLeft	{ OperationalToggle = InnerFrontLeftOverclockEffect }
	OverloadEffect_InnerFrontLeft :				BaseEffect_InnerFrontLeft	{ OperationalToggle = InnerFrontLeftOverloadEffect }
	OverclockOverloadEffect_InnerFrontLeft :	BaseEffect_InnerFrontLeft	{ OperationalToggle = InnerFrontLeftOverclockOverloadEffect }


	// Outer (when overclocked)
	ArcShield_OuterFrontRight
	{
		Rotation = -60d
		OperationalToggle = OuterFrontRightIsOperational
		DrainResourcesFrom = CombinedOuterFrontRightBatteryStorage
	}
	ArcShield_OuterRight
	{
		Rotation = 0d
		OperationalToggle = OuterRightIsOperational
		DrainResourcesFrom = CombinedOuterRightBatteryStorage
	}
	ArcShield_OuterBackRight
	{
		Rotation = 60d
		OperationalToggle = OuterBackRightIsOperational
		DrainResourcesFrom = CombinedOuterBackRightBatteryStorage
	}
	ArcShield_OuterBackLeft
	{
		Rotation = 120d
		OperationalToggle = OuterBackLeftIsOperational
		DrainResourcesFrom = CombinedOuterBackLeftBatteryStorage
	}
	ArcShield_OuterLeft
	{
		Rotation = 180d	
		OperationalToggle = OuterLeftIsOperational
		DrainResourcesFrom = CombinedOuterLeftBatteryStorage
	}
	ArcShield_OuterFrontLeft
	{
		Rotation = 240d	
		OperationalToggle = OuterFrontLeftIsOperational
		DrainResourcesFrom = CombinedOuterFrontLeftBatteryStorage
	}
	
	BaseEffect_OuterFrontRight
	{
		Shield = ArcShield_OuterFrontRight
		ChainedTo = ArcShield_OuterFrontRight
		FactorMediaEffectsIntensityWith = CombinedOuterFrontRightBatteryStorage
	}
	OverclockEffect_OuterFrontRight : 			BaseEffect_OuterFrontRight	{ OperationalToggle = OuterFrontRightOverclockEffect }
	OverclockOverloadEffect_OuterFrontRight :	BaseEffect_OuterFrontRight	{ OperationalToggle = OuterFrontRightOverclockOverloadEffect }
	
	BaseEffect_OuterRight
	{
		Shield = ArcShield_OuterRight
		ChainedTo = ArcShield_OuterRight
		FactorMediaEffectsIntensityWith = CombinedOuterRightBatteryStorage
	}
	OverclockEffect_OuterRight : 			BaseEffect_OuterRight	{ OperationalToggle = OuterRightOverclockEffect }
	OverclockOverloadEffect_OuterRight :	BaseEffect_OuterRight	{ OperationalToggle = OuterRightOverclockOverloadEffect }
	
	BaseEffect_OuterBackRight
	{
		Shield = ArcShield_OuterBackRight
		ChainedTo = ArcShield_OuterBackRight
		FactorMediaEffectsIntensityWith = CombinedOuterBackRightBatteryStorage
	}
	OverclockEffect_OuterBackRight : 			BaseEffect_OuterBackRight	{ OperationalToggle = OuterBackRightOverclockEffect }
	OverclockOverloadEffect_OuterBackRight :	BaseEffect_OuterBackRight	{ OperationalToggle = OuterBackRightOverclockOverloadEffect }
	
	BaseEffect_OuterBackLeft
	{
		Shield = ArcShield_OuterBackLeft
		ChainedTo = ArcShield_OuterBackLeft
		FactorMediaEffectsIntensityWith = CombinedOuterBackLeftBatteryStorage
	}
	OverclockEffect_OuterBackLeft : 			BaseEffect_OuterBackLeft	{ OperationalToggle = OuterBackLeftOverclockEffect }
	OverclockOverloadEffect_OuterBackLeft :		BaseEffect_OuterBackLeft	{ OperationalToggle = OuterBackLeftOverclockOverloadEffect }
	
	BaseEffect_OuterLeft
	{
		Shield = ArcShield_OuterLeft
		ChainedTo = ArcShield_OuterLeft
		FactorMediaEffectsIntensityWith = CombinedOuterLeftBatteryStorage
	}
	OverclockEffect_OuterLeft : 			BaseEffect_OuterLeft	{ OperationalToggle = OuterLeftOverclockEffect }
	OverclockOverloadEffect_OuterLeft :		BaseEffect_OuterLeft	{ OperationalToggle = OuterLeftOverclockOverloadEffect }
	
	BaseEffect_OuterFrontLeft
	{
		Shield = ArcShield_OuterFrontLeft
		ChainedTo = ArcShield_OuterFrontLeft
		FactorMediaEffectsIntensityWith = CombinedOuterFrontLeftBatteryStorage
	}
	OverclockEffect_OuterFrontLeft : 			BaseEffect_OuterFrontLeft	{ OperationalToggle = OuterFrontLeftOverclockEffect }
	OverclockOverloadEffect_OuterFrontLeft :	BaseEffect_OuterFrontLeft	{ OperationalToggle = OuterFrontLeftOverclockOverloadEffect }
	
	Radius
	{
		BaseValue = 15
		Modifiers
		[
			{
				Type = ScaledBuff
				BuffType = BubbleRadiusBonus
				Scale = 1.5
				ModificationMode = Add
			}
		]
	}
	
	
	
	
	
	// When overclocked
	RadiusOverclocked = 2
//	RadiusOuter : &<shield_stl_modular.rules>/Part/Components/ArcShield/Radius	{ BaseValue = (&^/0/BaseValue) + (&../RadiusOverclocked) }
	RadiusOuter
	{
		BaseValue = (&../Radius/BaseValue) + (&../RadiusOverclocked)
		Modifiers
		[
			{
				Type = ScaledBuff
				BuffType = BubbleRadiusBonus
				Scale = 1.5
				ModificationMode = Add
			}
		]
	}
}

/*
		Heretion explanation:
			Purple Radius 0 On:
				ArcShield Front: inherits from Base (changes Rotation, Operational, Storage, Shield effects and Hit effects).
				EmitterEffect: inherit from Base (changes Operational and Media effects).
			Colors Radius 0 On: inherits from Purple On Components.
				ArcShield Front: from Purple On (changes Shield effects and Hit effects).
				EmitterEffect: from Purple On (changes Media effects).
			Everything Radius 0 Off:
				ArcShield Front: inherits from its On version Components (changes Shield effect and Hit effects).
			Everything Radius #: inherits from its Radius 0 version Components.
				ArchShield Front: inherits from its Radius 0 version Components (changes radius).
				
			ArcShield Others: inherits from their Front version (changes Rotation, Operational and Storage).
			ShieldOperationEffects works as normal even though it is chained to ArcShield instead of these new shields.
*/
	