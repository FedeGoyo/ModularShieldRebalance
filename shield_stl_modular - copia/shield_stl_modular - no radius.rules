Part : <./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/KebechetSTLmodularShield"
	IconNameKey = "Parts/KebechetSTLmodularShieldIcon"
	DescriptionKey = "Parts/KebechetSTLmodularShieldDesc"
	ID = swefpifh.Kebechet_STL_modularShield
	EditorGroup = "Defenses"
	Resources
	[
		[steel, 120]
		[diamond, 3]
		[processor, 4] 
	]
	AIValueFactor = 5
	Size = [4, 4]
	PhysicalRect = [0, 0, 4, 4] // For backwards compatibility with old shield generators.
	SaveRect = &PhysicalRect
	SelectionPriority = 1
	SelectionTypeID = "shield_gen_stl"
	SelectionTypeByRotation = false
	MaxHealth = 10000
	TypeCategories = [defense, uses_power]
	ReceivableBuffs : ^/0/ReceivableBuffs [ModularShieldBonus]
	PenetrationRectType = Normal
	AllowedDoorLocations
	[
		[1, -1] // Haut
		[2, -1]
		
		[1, 4] // Bas
		[2, 4]
		
		[-1, 1] // Gauche
		[-1, 2]
		
		[4, 1] // Droite
		[4, 2]
	]
	
	IsRotateable = false
	IgnoreRotationForMirroredSelection = true
	IsFlippable = false
	
	ForceManhattanPathInPart = true
	BlockedTravelCells
	[
		[1, 1]
		[1, 2]
		[2, 1]
		[2, 2]
	]

	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	Components : ^/0/Components
	{

		// --------------------------------- START TOGGLES
		
		// -----------------------------------------------
		// COLOURS TOGGLES -------------------------------
		// -----------------------------------------------

		Kebechet_STL_ToggleColours
		{
			Type = UIToggle
			ToggleID = "Kebechet_ToggleID_Colours"
			Default = 0
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}

		Kebechet_STL_ToggleColours_Purple
		{
			Type = ModeToggle
			Mode = Kebechet_STL_ToggleColours
			OnMode = 0
		}

		Kebechet_STL_ToggleColours_Blue : Kebechet_STL_ToggleColours_Purple		{ OnMode = 1 }
		Kebechet_STL_ToggleColours_Orange : Kebechet_STL_ToggleColours_Purple	{ OnMode = 2 }
		Kebechet_STL_ToggleColours_Red : Kebechet_STL_ToggleColours_Purple		{ OnMode = 3 }
		Kebechet_STL_ToggleColours_Yellow : Kebechet_STL_ToggleColours_Purple	{ OnMode = 4 }
		Kebechet_STL_ToggleColours_Green : Kebechet_STL_ToggleColours_Purple	{ OnMode = 5 }
		
		// -----------------------------------------------
		// DISPLAY TOGGLES -------------------------------
		// -----------------------------------------------
		
		Kebechet_STL_ToggleDisplay
		{
			Type = UIToggle
			ToggleID = "Kebechet_ToggleID_Display"
			Default = 0
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}

		Kebechet_STL_ToggleDisplay_On
		{
			Type = ModeToggle
			Mode = Kebechet_STL_ToggleDisplay
			OnMode = 0
		}

		Kebechet_STL_ToggleDisplay_Off : Kebechet_STL_ToggleDisplay_On	{ OnMode = 1 }
		
		// -----------------------------------------------
		// PROXY -----------------------------------------
		// -----------------------------------------------
		
		Kebechet_STL_ColoursProxy
		{
			Type = ToggleProxy
			ComponentID = Kebechet_STL_ColoursSet
		}
			Kebechet_STL_ColoursSet
			{
				Type = MultiToggle
				Toggles = [Kebechet_STL_ToggleColours_Purple, Kebechet_STL_ToggleColours_Blue, Kebechet_STL_ToggleColours_Orange, Kebechet_STL_ToggleColours_Red, Kebechet_STL_ToggleColours_Yellow, Kebechet_STL_ToggleColours_Green]
				Mode = Any
			}

		Kebechet_STL_DisplayProxy
		{
			Type = ToggleProxy
			ComponentID = Kebechet_STL_DisplaySet
		}
			Kebechet_STL_DisplaySet
			{
				Type = MultiToggle
				Toggles = [Kebechet_STL_ToggleDisplay_Off, Kebechet_STL_ToggleDisplay_On]
				Mode = Any
			}
		
		// -----------------------------------------------
		// MULTI TOGGLES --------------------------------- // Kebechet_STL_ColoursProxy, Kebechet_STL_DisplayProxy
		// -----------------------------------------------

		// ---------------- PURPLE -----------------------
		
		K_STL_Purple_360L_On
		{
			Type = MultiToggle
			Toggles = [Kebechet_STL_ToggleColours_Purple, Kebechet_STL_ToggleDisplay_On] 
			Mode = All
		}
		K_STL_Purple_360L_Off : K_STL_Purple_360L_On	{ Toggles = [Kebechet_STL_ToggleColours_Purple, Kebechet_STL_ToggleDisplay_Off, Kebechet_STL_ColoursProxy, Kebechet_STL_DisplayProxy] }
		// ---------------- BLUE ---------------------
		K_STL_Blue_360L_On : K_STL_Purple_360L_On		{ Toggles = [Kebechet_STL_ToggleColours_Blue, Kebechet_STL_ToggleDisplay_On, Kebechet_STL_ColoursProxy, Kebechet_STL_DisplayProxy]  }
		K_STL_Blue_360L_Off : K_STL_Purple_360L_On		{ Toggles = [Kebechet_STL_ToggleColours_Blue, Kebechet_STL_ToggleDisplay_Off, Kebechet_STL_ColoursProxy, Kebechet_STL_DisplayProxy] }
		// ---------------- Orange ---------------------
		K_STL_Orange_360L_On : K_STL_Purple_360L_On		{ Toggles = [Kebechet_STL_ToggleColours_Orange, Kebechet_STL_ToggleDisplay_On, Kebechet_STL_ColoursProxy, Kebechet_STL_DisplayProxy] }
		K_STL_Orange_360L_Off : K_STL_Purple_360L_On	{ Toggles = [Kebechet_STL_ToggleColours_Orange, Kebechet_STL_ToggleDisplay_Off, Kebechet_STL_ColoursProxy, Kebechet_STL_DisplayProxy] }
		// ---------------- Red ---------------------
		K_STL_Red_360L_On : K_STL_Purple_360L_On		{ Toggles = [Kebechet_STL_ToggleColours_Red, Kebechet_STL_ToggleDisplay_On, Kebechet_STL_ColoursProxy, Kebechet_STL_DisplayProxy]  }
		K_STL_Red_360L_Off : K_STL_Purple_360L_On		{ Toggles = [Kebechet_STL_ToggleColours_Red, Kebechet_STL_ToggleDisplay_Off, Kebechet_STL_ColoursProxy, Kebechet_STL_DisplayProxy] }
		// ---------------- Yellow ---------------------
		K_STL_Yellow_360L_On : K_STL_Purple_360L_On		{ Toggles = [Kebechet_STL_ToggleColours_Yellow, Kebechet_STL_ToggleDisplay_On, Kebechet_STL_ColoursProxy, Kebechet_STL_DisplayProxy]  }
		K_STL_Yellow_360L_Off : K_STL_Purple_360L_On	{ Toggles = [Kebechet_STL_ToggleColours_Yellow, Kebechet_STL_ToggleDisplay_Off, Kebechet_STL_ColoursProxy, Kebechet_STL_DisplayProxy] }
		// ---------------- Green ---------------------
		K_STL_Green_360L_On : K_STL_Purple_360L_On		{ Toggles = [Kebechet_STL_ToggleColours_Green, Kebechet_STL_ToggleDisplay_On, Kebechet_STL_ColoursProxy, Kebechet_STL_DisplayProxy]  }
		K_STL_Green_360L_Off : K_STL_Purple_360L_On		{ Toggles = [Kebechet_STL_ToggleColours_Green, Kebechet_STL_ToggleDisplay_Off, Kebechet_STL_ColoursProxy, Kebechet_STL_DisplayProxy] }

		// --------------------------------- END TOGGLES
		
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage] // ModularCombinedBatteryStorage // CombinedBatteryStorage
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 8
		}

		// Starts Normal Batteries

		ProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = CombinedBatteryStorage
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}
		CombinedBatteryStorage
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [FrontBatteryStorage, TopRightBatteryStorage, BottomRightBatteryStorage, BackBatteryStorage, BottomLeftBatteryStorage, TopLeftBatteryStorage]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = CombinedBatteryStorage
			DefaultPriority = &/PRIORITIES/Defense_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
		}

		FrontIsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, FrontBatteryStorage] //  CombinedFrontBatteryStorage
			Mode = All
		}
		FrontBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 4000
			ToggleOnResources = 3001
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		CombinedFrontBatteryStorage
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [FrontBatteryStorage, ModularBatteryStorageProxy]
			ToggleOnResources = 3001
			RemoveMode = InReverseOrder
			AddMode = InOrder
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		FrontPowerDrain
		{
			Type = ResourceConverter
			OperationalToggle = FrontIsOperational
			FromStorage = FrontBatteryStorage
			FromQuantity = 50
			MinFromQuantityForConversion = 1
			Interval = 1
		}

		TopRightIsOperational : FrontIsOperational			{ Toggles = [PowerToggle, TopRightBatteryStorage] }
		TopRightBatteryStorage : FrontBatteryStorage		{}
		CombinedTopRightBatteryStorage : CombinedFrontBatteryStorage	{ ResourceStorages = [TopRightBatteryStorage, ModularBatteryStorageProxy] }
		TopRightPowerDrain : FrontPowerDrain				{ FromStorage = TopRightBatteryStorage }

		BottomRightIsOperational : FrontIsOperational		{ Toggles = [PowerToggle, BottomRightBatteryStorage] }
		BottomRightBatteryStorage : FrontBatteryStorage		{}
		CombinedBottomRightBatteryStorage : CombinedFrontBatteryStorage	{ ResourceStorages = [BottomRightBatteryStorage, ModularBatteryStorageProxy] }
		BottomRightPowerDrain : FrontPowerDrain				{ FromStorage = BottomRightBatteryStorage }

		BackIsOperational : FrontIsOperational				{ Toggles = [PowerToggle, BackBatteryStorage] }
		BackBatteryStorage : FrontBatteryStorage			{}
		CombinedBackBatteryStorage : CombinedFrontBatteryStorage	{ ResourceStorages = [BackBatteryStorage, ModularBatteryStorageProxy] }
		BackPowerDrain : FrontPowerDrain					{ FromStorage = BackBatteryStorage }

		BottomLeftIsOperational : FrontIsOperational		{ Toggles = [PowerToggle, BottomLeftBatteryStorage] }
		BottomLeftBatteryStorage : FrontBatteryStorage		{}
		CombinedBottomLeftBatteryStorage : CombinedFrontBatteryStorage	{ ResourceStorages = [BottomLeftBatteryStorage, ModularBatteryStorageProxy] }
		BottomLeftPowerDrain : FrontPowerDrain				{ FromStorage = BottomLeftBatteryStorage }

		TopLeftIsOperational : FrontIsOperational			{ Toggles = [PowerToggle, TopLeftBatteryStorage] }
		TopLeftBatteryStorage : FrontBatteryStorage			{}
		CombinedTopLeftBatteryStorage : CombinedFrontBatteryStorage	{ ResourceStorages = [BottomLeftBatteryStorage, ModularBatteryStorageProxy] }
		TopLeftPowerDrain : FrontPowerDrain					{ FromStorage = TopLeftBatteryStorage }
		
		// Ends Normal Batteries

		// Start Modular Battery
		
/* Doesn't work		
		BuffProviderTop : BuffProviderTopLeft
		{
			Type = AreaBuffProvider
			BuffType = ModularShieldCapacity
			BuffArea = [1, -1, 2, 1]
			OperationalToggle = IsOperational
			Criteria
			{
				Right = 3
				Left = 1
			}
		}
		BuffProviderRight : BuffProviderTopLeft
		{
			BuffArea = [4, 1, 1, 2]
			Criteria
			{
				Rot = 1
				Left = 4
				Right = 5
//				Bottom = 3 // With this it also worked
//				Top = 1
			}
		}
		BuffProviderBottom : BuffProviderTopLeft
		{
			BuffArea = [1, 4, 2, 1]
			Criteria
			{
				Rot = 2
				Left = 1
				Right = 3
				Bottom = 5
//				Top = 4 // With this it also worked
			}
		}
		BuffProviderLeft : BuffProviderTopLeft
		{
			BuffArea = [-1, 1, 1, 2]
			Criteria
			{
				Rot = 3
				Right = 0
				Bottom = 3
				Top = 1
			}
		}		
*/
		
		BuffProviderTopLeft
		{
			Type = AreaBuffProvider
			BuffType = ModularShieldCapacity
			BuffArea = [0, -1, 2, 1]
			OperationalToggle = IsOperational
			Criteria
			{
				Right = 2
				Left = 0 // testing
			}
		}
		BuffProviderTopRight : BuffProviderTopLeft
		{
			BuffArea = [2, -1, 2, 1]
			Criteria
			{
				Left = 2
				Right = 4
			}
		}
		BuffProviderRightTop : BuffProviderTopLeft
		{
			BuffArea = [4, 0, 1, 2]
			Criteria
			{
				Rot = 1
				Left = 4
				Right = 5
				Bottom = 2 // With this it also worked
			}
		}
		BuffProviderRightBottom : BuffProviderTopLeft
		{
			BuffArea = [4, 2, 1, 2]
			Criteria
			{
				Rot = 1
				Left = 4
				Right = 5
				Bottom = 4
				Top = 2
			}
		}
		BuffProviderBottomRight : BuffProviderTopLeft
		{
			BuffArea = [2, 4, 2, 1]
			Criteria
			{
				Rot = 2
				Left = 2
				Right = 4
				Bottom = 5
//				Top = 4 // With this it also worked
			}
		}
		BuffProviderBottomLeft : BuffProviderTopLeft // works
		{
			BuffArea = [0, 4, 2, 1]
			Criteria
			{
				Rot = 2
				Right = 2
				Bottom = 5
			}
		}
		BuffProviderLeftBottom : BuffProviderTopLeft
		{
			BuffArea = [-1, 2, 1, 2]
			Criteria
			{
				Rot = 3
				Right = 0
				Bottom = 4
				Top = 2
			}
		}		
		BuffProviderLeftTop : BuffProviderTopLeft
		{
			BuffArea = [-1, 0, 1, 2]
			Criteria
			{
				Rot = 3
				Right = 0
				Bottom = 2
			}
		}
		
		CentralBatteryStorage // It isn't necesarely, but adding this makes the shield less buggy.
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 0
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		ModularBatteryStorageProxy
		{
			Type = MultiResourceStorage
			OperationalToggle = IsOperational
			ResourceType = battery
			ResourceStorages = [CentralBatteryStorage]
			ViaBuffs
			{
				OutgoingBuffProviders = [BuffProviderTopLeft, BuffProviderTopRight, BuffProviderRightTop, BuffProviderRightBottom, BuffProviderBottomRight, BuffProviderBottomLeft, BuffProviderLeftBottom, BuffProviderLeftTop]
				ComponentID = BatteryStorage
			}
			AddMode = PrioritizeLeastResources
			RemoveMode = PrioritizeLeastResources
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		IsModularToggle
		{
			Type = BuffToggle
			BuffType = ModularShieldBonus
		}
		IsModularOperational
		{
			Type = MultiToggle
			Toggles = [IsOperational, IsModularToggle]
			Mode = All
		}
		ProgressBarModular : ProgressBar
		{
			ShowProgressFor = ModularBatteryStorageProxy
			OperationalToggle = IsModularOperational
		}
		BatteryStorage // ModularCombinedBatteryStorage, named only BatteryStorage for easier compatibility with energy mods
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [FrontBatteryStorage, TopRightBatteryStorage, BottomRightBatteryStorage, BackBatteryStorage, BottomLeftBatteryStorage, TopLeftBatteryStorage, ModularBatteryStorageProxy]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
			ToggleOnResources = 23001
		}
		BatteryConsumer2 : BatteryConsumer	{ Storage = ModularBatteryStorageProxy }	// If I use ModularCombinedBatteryStorage so that all batteries (including ModularBatteryStorageProxy) are in the same consumer, the ModularBatteryStorageProxy never receives energy, no idea why.

		// Ends Modular Batteries
		
		
		
		
/*
		// Old Energy Distribution System		
		// Front-TopRight Distribution
		FrontTopRightCombinedBatteryStorage
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [FrontBatteryStorage, TopRightBatteryStorage]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
			AddMode = PrioritizeLeastResources
			RemoveMode = PrioritizeMostResources
		}
		FrontTopRightBatteryStorageRequest
		{
			Type = ResourceConverter
			FromStorage = FrontTopRightCombinedBatteryStorage
			ToStorage = FrontTopRightCombinedBatteryStorage
			FromQuantity = 20
			ToQuantity = 20
			Interval = .1
		}
		// TopRight-BottomRight Distribution
		TopRightBottomRightCombinedBatteryStorage : FrontTopRightCombinedBatteryStorage	{ ResourceStorages = [TopRightBatteryStorage, BottomRightBatteryStorage] }
		TopRightBottomRightBatteryStorageRequest : FrontTopRightBatteryStorageRequest
		{
			FromStorage = ToprightBottomRightCombinedBatteryStorage
			ToStorage = ToprightBottomRightCombinedBatteryStorage
		}
		// BottomRight-Back Distribution
		BottomRightBackCombinedBatteryStorage : FrontTopRightCombinedBatteryStorage	{ ResourceStorages = [BottomRightBatteryStorage, BackBatteryStorage] }
		BottomRightBackBatteryStorageRequest : FrontTopRightBatteryStorageRequest
		{
			FromStorage = BottomRightBackCombinedBatteryStorage
			ToStorage = BottomRightBackCombinedBatteryStorage
		}
		// Back-BottomLeft Distribution
		BackBottomLeftCombinedBatteryStorage : FrontTopRightCombinedBatteryStorage	{ ResourceStorages = [BackBatteryStorage, BottomLeftBatteryStorage] }
		BackBottomLeftBatteryStorageRequest : FrontTopRightBatteryStorageRequest
		{
			FromStorage = BackBottomLeftCombinedBatteryStorage
			ToStorage = BackBottomLeftCombinedBatteryStorage
		}
		// BottomLeft-TopLeft Distribution
		BottomLeftTopLeftCombinedBatteryStorage : FrontTopRightCombinedBatteryStorage	{ ResourceStorages = [BottomLeftBatteryStorage, TopLeftBatteryStorage] }
		BottomLeftTopLeftBatteryStorageRequest : FrontTopRightBatteryStorageRequest
		{
			FromStorage = BottomLeftTopLeftCombinedBatteryStorage
			ToStorage = BottomLeftTopLeftCombinedBatteryStorage
		}
		// TopLeft-Front Distribution
		TopLeftFrontCombinedBatteryStorage : FrontTopRightCombinedBatteryStorage	{ ResourceStorages = [TopLeftBatteryStorage, FrontBatteryStorage] }
		TopLeftFrontBatteryStorageRequest : FrontTopRightBatteryStorageRequest
		{
			FromStorage = TopLeftFrontCombinedBatteryStorage
			ToStorage = TopLeftFrontCombinedBatteryStorage
		}
*/

		IsOperationalProxy
		{
			Type = MultiToggle
			Toggles = [ProxyBatteryStorage]
			Mode = All
		}
		
		ProxyBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 0
			ToggleOnResources = 1
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// ARCSHIELD ORIGINAL - START //////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		ArcShield
		{
			Type = ArcShield
			Radius = 15
			Arc = 60d
			OperationalToggle = IsOperationalProxy
			PenetrationResistance = [ { BaseValue= 16.66; BuffType=ModularShieldBonus; BuffMode=Add; }, 0]
			DrainResourcesFrom = FrontBatteryStorage
			ResourceDrainPerDamage = .4
			Rotation = -90d
			Location = [2, 2]

//			BlueprintArcSprite : <./Data/ships/terran/shield_gen_large/shield_gen_large.rules>/Part/Components/ArcShield/BlueprintArcSprite	{}
//			BlueprintArcSpriteSegments = 128

			CoverageArcSprite : <./Data/ships/terran/shield_gen_large/shield_gen_large.rules>/Part/Components/ArcShield/CoverageArcSprite	{}
			CoverageArcSpriteSegments = 128

			ShieldMediaEffects
			[
				: <./Data/ships/terran/shield_gen_large/shield_gen_large.rules>/Part/Components/ArcShield/ShieldMediaEffects/0
				{
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
					ArcSpriteSegments = 128
				}
				: <./Data/ships/terran/shield_gen_large/shield_gen_large.rules>/Part/Components/ArcShield/ShieldMediaEffects/1	{}
			]

			HitMediaEffects = &<./Data/ships/terran/shield_gen_large/shield_gen_large.rules>/Part/Components/ArcShield/HitMediaEffects
		}

		EmitterEffect
		{
			Type = ContinuousEffects
			ChainedTo = ArcShield
			FactorMediaEffectsIntensityWith = CombinedBatteryStorage
			MaxMediaEffectsZoom = 12
			Location = [2.4, 0]
			OperationalToggle = IsOperationalProxy
			ParentToShip = true
			MediaEffects
			[
				: <./Data/ships/terran/shield_gen_large/shield_gen_large.rules>/Part/Components/EmitterEffect/MediaEffects/0
				{
					Radius = 2.4
					Arc = 360d
					ArcSprite : ^/0/ArcSprite	 { }
					Bucket = Upper1
				}
				: <./Data/ships/terran/shield_gen_large/shield_gen_large.rules>/Part/Components/EmitterEffect/MediaEffects/1	{}
			]
		}

		ShieldOperationEffects_Front : <./Data/ships/terran/shield_gen_large/shield_gen_large.rules>/Part/Components/ShieldOperationEffects
		{
			Location = [&~/Part/Components/ArcShield/Radius, 0]
			Toggle = FrontIsOperational
		}
		ShieldOperationEffects_TopRight : ShieldOperationEffects_Front		{ Toggle = TopRightIsOperational }
		ShieldOperationEffects_BottomRight : ShieldOperationEffects_Front	{ Toggle = BottomRightIsOperational }
		ShieldOperationEffects_Back : ShieldOperationEffects_Front			{ Toggle = BackIsOperational }
		ShieldOperationEffects_BottomLeft : ShieldOperationEffects_Front	{ Toggle = BottomLeftIsOperational }
		ShieldOperationEffects_TopLeft : ShieldOperationEffects_Front		{ Toggle = TopLeftIsOperational }
		
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// ARCSHIELD ORIGINAL - END ////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
/*
		Heretion explanation:
			Purple On:
				ArcShield Front: inherits from Base (changes Rotation, Operational, Storage, Shield effects and Hit effects).
				EmitterEffect: inherit from Base (changes Operational and Media effects).
			Colors On: inherits from Purple On Components.
				ArcShield Front: from Purple On (changes Shield effects and Hit effects).
				EmitterEffect: from Purple On (changes Media effects).
			Everything Off:
				ArcShield Front: inherits from its On version Components (changes Shield effect and Hit effects).
				
			ArcShield Others: inherits from their Front version (changes Rotation, Operational and Storage).
			ShieldOperationEffects works as normal even though it is chained to ArcShield instead of these new shields.
*/
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD PURPLE START --------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------

		K_STL_ToggleComponents_Purple_360L_On
		{
			Type = ToggledComponents
			Toggle = K_STL_Purple_360L_On
			IncludeInBlueprints = true
			Components = 
			{
				STL_ArcShield_B360_Front :~/Stats/ArcShield_Front, &~/Part/Components/ArcShield
				{
					BlueprintArcSprite : <./Data/ships/terran/shield_gen_large/shield_gen_large.rules>/Part/Components/ArcShield/BlueprintArcSprite	{}
					BlueprintArcSpriteSegments = 128
					ShieldMediaEffects
					[
						: &../^/1/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Purple/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/1/ShieldMediaEffects/1 {}
					]
					HitMediaEffects
					[
						: &../^/1/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Purple/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/1/HitMediaEffects/1 {}
					]
				}
				
				STL_ArcShield_B360_TopRight : ~/Stats/ArcShield_TopRight, STL_ArcShield_B360_Front	{}
				
				STL_ArcShield_B360_BottomRight : ~/Stats/ArcShield_BottomRight, STL_ArcShield_B360_Front	{}
				
				STL_ArcShield_B360_Back : ~/Stats/ArcShield_Back, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomLeft: ~/Stats/ArcShield_BottomLeft, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_TopLeft : ~/Stats/ArcShield_TopLeft, STL_ArcShield_B360_Front	{}

				STS_EmitterEffect : &~/Part/Components/EmitterEffect
				{
					OperationalToggle = IsOperational
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Purple/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/MediaEffects/1	{}
					]
				}
			}
		}

		K_STL_ToggleComponents_Purple_360L_Off
		{
			Type = ToggledComponents
			Toggle = K_STL_Purple_360L_Off
			IncludeInBlueprints = false
			Components =
			{
				STL_ArcShield_B360_Front : &../../K_STL_ToggleComponents_Purple_360L_On/Components/STL_ArcShield_B360_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Purple/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}

				STL_ArcShield_B360_TopRight : ~/Stats/ArcShield_TopRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomRight : ~/Stats/ArcShield_BottomRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_Back : ~/Stats/ArcShield_Back, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_TopLeft : ~/Stats/ArcShield_TopLeft, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomLeft : ~/Stats/ArcShield_BottomLeft, STL_ArcShield_B360_Front	{}
			}
		}

		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD PURPLE END ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD BLUE START ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------

		K_STL_ToggleComponents_Blue_360L_On
		{
			Type = ToggledComponents
			Toggle = K_STL_Blue_360L_On
			IncludeInBlueprints = false
			Components : &../K_STL_ToggleComponents_Purple_360L_On/Components 
			{
				STL_ArcShield_B360_Front : ^/0/STL_ArcShield_B360_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Blue/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Blue/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1 {}
					]
				}

				STL_ArcShield_B360_TopRight : ~/Stats/ArcShield_TopRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomRight : ~/Stats/ArcShield_BottomRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_Back : ~/Stats/ArcShield_Back, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_TopLeft : ~/Stats/ArcShield_TopLeft, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomLeft : ~/Stats/ArcShield_BottomLeft, STL_ArcShield_B360_Front	{}

				STS_EmitterEffect : ^/0/STS_EmitterEffect
				{
					OperationalToggle = IsOperational
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Blue/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/MediaEffects/1	{}
					]
				}
			}
		}

		K_STL_ToggleComponents_Blue_360L_Off
		{
			Type = ToggledComponents
			Toggle = K_STL_Blue_360L_Off
			IncludeInBlueprints = false
			Components =
			{ 
				STL_ArcShield_B360_Front : &../../K_STL_ToggleComponents_Blue_360L_On/Components/STL_ArcShield_B360_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Blue/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}

				STL_ArcShield_B360_TopRight : ~/Stats/ArcShield_TopRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomRight : ~/Stats/ArcShield_BottomRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_Back : ~/Stats/ArcShield_Back, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_TopLeft : ~/Stats/ArcShield_TopLeft, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomLeft : ~/Stats/ArcShield_BottomLeft, STL_ArcShield_B360_Front	{}
			}
		}

		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD BLUE END ------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD ORANGE START --------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_ToggleComponents_Orange_360L_On
		{
			Type = ToggledComponents
			Toggle = K_STL_Orange_360L_On
			//IncludeInOrangeprints = true
			Components : &../K_STL_ToggleComponents_Purple_360L_On/Components
			{ 
				STL_ArcShield_B360_Front : ^/0/STL_ArcShield_B360_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Orange/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Orange/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1 {}
					]
				}

				STL_ArcShield_B360_TopRight : ~/Stats/ArcShield_TopRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomRight : ~/Stats/ArcShield_BottomRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_Back : ~/Stats/ArcShield_Back, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_TopLeft : ~/Stats/ArcShield_TopLeft, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomLeft : ~/Stats/ArcShield_BottomLeft, STL_ArcShield_B360_Front	{}

				STS_EmitterEffect : ^/0/STS_EmitterEffect
				{
					OperationalToggle = IsOperational
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Orange/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/MediaEffects/1	{}
					]
				}
			}
		}

		K_STL_ToggleComponents_Orange_360L_Off
		{
			Type = ToggledComponents
			Toggle = K_STL_Orange_360L_Off
			//IncludeInOrangeprints = true
			Components : &../K_STL_ToggleComponents_Orange_360L_On/Components
			{
				STL_ArcShield_B360_Front : &../../K_STL_ToggleComponents_Orange_360L_On/Components/STL_ArcShield_B360_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Orange/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}

				STL_ArcShield_B360_TopRight : ~/Stats/ArcShield_TopRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomRight : ~/Stats/ArcShield_BottomRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_Back : ~/Stats/ArcShield_Back, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_TopLeft : ~/Stats/ArcShield_TopLeft, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomLeft : ~/Stats/ArcShield_BottomLeft, STL_ArcShield_B360_Front	{}
			}
		}

		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD ORANGE END ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD RED START -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_ToggleComponents_Red_360L_On
		{
			Type = ToggledComponents
			Toggle = K_STL_Red_360L_On
			//IncludeInRedprints = true
			Components : &../K_STL_ToggleComponents_Purple_360L_On/Components
			{ 
				STL_ArcShield_B360_Front : ^/0/STL_ArcShield_B360_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Red/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Red/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1 {}
					]
				}

				STL_ArcShield_B360_TopRight : ~/Stats/ArcShield_TopRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomRight : ~/Stats/ArcShield_BottomRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_Back : ~/Stats/ArcShield_Back, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_TopLeft : ~/Stats/ArcShield_TopLeft, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomLeft : ~/Stats/ArcShield_BottomLeft, STL_ArcShield_B360_Front	{}

				STS_EmitterEffect : ^/0/STS_EmitterEffect
				{
					OperationalToggle = IsOperational
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Red/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/MediaEffects/1	{}
					]
				}
			}
		}

		K_STL_ToggleComponents_Red_360L_Off
		{
			Type = ToggledComponents
			Toggle = K_STL_Red_360L_Off
			//IncludeInRedprints = true
			Components =
			{ 
				STL_ArcShield_B360_Front : &../../K_STL_ToggleComponents_Red_360L_On/Components/STL_ArcShield_B360_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Red/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}

				STL_ArcShield_B360_TopRight : ~/Stats/ArcShield_TopRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomRight : ~/Stats/ArcShield_BottomRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_Back : ~/Stats/ArcShield_Back, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_TopLeft : ~/Stats/ArcShield_TopLeft, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomLeft : ~/Stats/ArcShield_BottomLeft, STL_ArcShield_B360_Front	{}
			}
		}

		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD RED END -------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD YELLOW START --------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_ToggleComponents_Yellow_360L_On
		{
			Type = ToggledComponents
			Toggle = K_STL_Yellow_360L_On
			//IncludeInYellowprints = true
			Components : &../K_STL_ToggleComponents_Purple_360L_On/Components
			{
				STL_ArcShield_B360_Front : ^/0/STL_ArcShield_B360_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Yellow/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Yellow/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1 {}
					]
				}

				STL_ArcShield_B360_TopRight : ~/Stats/ArcShield_TopRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomRight : ~/Stats/ArcShield_BottomRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_Back : ~/Stats/ArcShield_Back, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_TopLeft : ~/Stats/ArcShield_TopLeft, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomLeft : ~/Stats/ArcShield_BottomLeft, STL_ArcShield_B360_Front	{}

				STS_EmitterEffect : ^/0/STS_EmitterEffect
				{
					OperationalToggle = IsOperational
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Yellow/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/MediaEffects/1	{}
					]
				}
			}
		}

		K_STL_ToggleComponents_Yellow_360L_Off
		{
			Type = ToggledComponents
			Toggle = K_STL_Yellow_360L_Off
			//IncludeInYellowprints = true
			Components =
			{ 
				STL_ArcShield_B360_Front : &../../K_STL_ToggleComponents_Yellow_360L_On/Components/STL_ArcShield_B360_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Yellow/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}

				STL_ArcShield_B360_TopRight : ~/Stats/ArcShield_TopRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomRight : ~/Stats/ArcShield_BottomRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_Back : ~/Stats/ArcShield_Back, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_TopLeft : ~/Stats/ArcShield_TopLeft, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomLeft : ~/Stats/ArcShield_BottomLeft, STL_ArcShield_B360_Front	{}
			}
		}

		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD YELLOW END ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD GREEN START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_ToggleComponents_Green_360L_On
		{
			Type = ToggledComponents
			Toggle = K_STL_Green_360L_On
			//IncludeInGreenprints = true
			Components : &../K_STL_ToggleComponents_Purple_360L_On/Components
			{ 
				STL_ArcShield_B360_Front : ^/0/STL_ArcShield_B360_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Green/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Green/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1 {}
					]
				}

				STL_ArcShield_B360_TopRight : ~/Stats/ArcShield_TopRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomRight : ~/Stats/ArcShield_BottomRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_Back : ~/Stats/ArcShield_Back, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_TopLeft : ~/Stats/ArcShield_TopLeft, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomLeft : ~/Stats/ArcShield_BottomLeft, STL_ArcShield_B360_Front	{}

				STS_EmitterEffect : ^/0/STS_EmitterEffect
				{
					OperationalToggle = IsOperational
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Green/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/MediaEffects/1	{}
					]
				}
			}
		}

		K_STL_ToggleComponents_Green_360L_Off
		{
			Type = ToggledComponents
			Toggle = K_STL_Green_360L_Off
			//IncludeInGreenprints = true
			Components =
			{ 
				STL_ArcShield_B360_Front : &../../K_STL_ToggleComponents_Green_360L_On/Components/STL_ArcShield_B360_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Green/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}

				STL_ArcShield_B360_TopRight : ~/Stats/ArcShield_TopRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomRight : ~/Stats/ArcShield_BottomRight, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_Back : ~/Stats/ArcShield_Back, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_TopLeft : ~/Stats/ArcShield_TopLeft, STL_ArcShield_B360_Front	{}

				STL_ArcShield_B360_BottomLeft : ~/Stats/ArcShield_BottomLeft, STL_ArcShield_B360_Front	{}
			}
		}

		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD GREEN END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		Shield_Doodad_Graphics
		{
			Type = Graphics
			Location = [2, 2]
			OperationalToggle = IsOperational
			OperationalDoodad
			{
				Layer = "doodads_high"
				//Offset = [0, 0]
				DamageLevels
				[
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [2, 2]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe_RotSpeed_0DMG
					}
					{
						File = "doodad_axe_33.png"
						NormalsFile = "doodad_axe_normals_33.png"
						Size = [2, 2]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe_RotSpeed_33DMG
					}
					{
						File = "doodad_axe_66.png"
						NormalsFile = "doodad_axe_normals_66.png"
						Size = [2, 2]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe_RotSpeed_66DMG
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [2, 2]
					}
					{
						File = "doodad_axe_33.png"
						NormalsFile = "doodad_axe_normals_33.png"
						Size = [2, 2]
					}
					{
						File = "doodad_axe_66.png"
						NormalsFile = "doodad_axe_normals_66.png"
						Size = [2, 2]
					}
				]
			}
		}
		
		Shield_Doodad_Graphics_2
		{
			Type = Graphics
			Location = [2, 2]
			OperationalToggle = IsOperational
			OperationalDoodad
			{
				Layer = "doodads_high"
				//Offset = [0, 0]
				DamageLevels
				[
					{
						File = "doodad_big_axe.png"
						NormalsFile = "doodad_big_axe_normals.png"
						Size = [3, 3]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe2_RotSpeed_0DMG
					}
					{
						File = "doodad_big_axe_33.png"
						NormalsFile = "doodad_big_axe_normals_33.png"
						Size = [3, 3]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe2_RotSpeed_33DMG
					}
					{
						File = "doodad_big_axe_66.png"
						NormalsFile = "doodad_big_axe_normals_66.png"
						Size = [3, 3]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe2_RotSpeed_66DMG
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodad_big_axe.png"
						NormalsFile = "doodad_big_axe_normals.png"
						Size = [3, 3]
					}
					{
						File = "doodad_big_axe_33.png"
						NormalsFile = "doodad_big_axe_normals_33.png"
						Size = [3, 3]
					}
					{
						File = "doodad_big_axe_66.png"
						NormalsFile = "doodad_big_axe_normals_66.png"
						Size = [3, 3]
					}
				]
			}
		}

		Graphics
		{
			Type = Graphics
			Location = [2, 2]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [4, 4]
					}
					{
						File = "floor_33.png"
						Size = [4, 4]
					}
					{
						File = "floor_66.png"
						Size = [4, 4]
					}
				]
			}
			
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [4, 4]
					}
					{
						File = "walls_33.png"
						Size = [4, 4]
					}
					{
						File = "walls_66.png"
						Size = [4, 4]
					}
				]
			}
			
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [4, 4]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [4, 4]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [4, 4]
					}
				]
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS PURPLE START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_Graphics_Purple
		{
			Type = ToggledComponents
			Toggle = Kebechet_STL_ToggleColours_Purple
			IncludeInBlueprints = false
			Components = 
			{
				K_Graphics_Purple : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"purple/doodads_lightning1.png"
									"purple/doodads_lightning2.png"
									"purple/doodads_lightning3.png"
									"purple/doodads_lightning4.png"
									"purple/doodads_lightning5.png"
									"purple/doodads_lightning6.png"
									"purple/doodads_lightning7.png"
									"purple/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"purple/doodads_lightning1.png"
									"purple/doodads_lightning2.png"
									"purple/doodads_lightning3.png"
									"purple/doodads_lightning4.png"
									"purple/doodads_lightning5.png"
									"purple/doodads_lightning6.png"
									"purple/doodads_lightning7.png"
									"purple/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"purple/doodads_lightning1.png"
									"purple/doodads_lightning2.png"
									"purple/doodads_lightning3.png"
									"purple/doodads_lightning4.png"
									"purple/doodads_lightning5.png"
									"purple/doodads_lightning6.png"
									"purple/doodads_lightning7.png"
									"purple/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "purple/lights.png"
								Size = [4, 4]
							}
						]
					}
					
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [3, 3]
								Z = 1
								VertexColor = [195*1.5, 60*1.5, 255*1.5, 100]
							}
						]
					}
				}
			}
		}
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS PURPLE END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS BLUE START -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_Graphics_Blue
		{
			Type = ToggledComponents
			Toggle = Kebechet_STL_ToggleColours_Blue
			IncludeInBlueprints = false
			Components = 
			{
				K_Graphics_Blue : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"blue/doodads_lightning1.png"
									"blue/doodads_lightning2.png"
									"blue/doodads_lightning3.png"
									"blue/doodads_lightning4.png"
									"blue/doodads_lightning5.png"
									"blue/doodads_lightning6.png"
									"blue/doodads_lightning7.png"
									"blue/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"blue/doodads_lightning1.png"
									"blue/doodads_lightning2.png"
									"blue/doodads_lightning3.png"
									"blue/doodads_lightning4.png"
									"blue/doodads_lightning5.png"
									"blue/doodads_lightning6.png"
									"blue/doodads_lightning7.png"
									"blue/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"blue/doodads_lightning1.png"
									"blue/doodads_lightning2.png"
									"blue/doodads_lightning3.png"
									"blue/doodads_lightning4.png"
									"blue/doodads_lightning5.png"
									"blue/doodads_lightning6.png"
									"blue/doodads_lightning7.png"
									"blue/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "blue/lights.png"
								Size = [4, 4]
							}
						]
					}
					
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [3, 3]
								Z = 1
								VertexColor = [0, 0, 255*1.5, 100]
							}
						]
					}
				}
			}
		}
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS BLUE END -------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS ORANGE START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_Graphics_Orange
		{
			Type = ToggledComponents
			Toggle = Kebechet_STL_ToggleColours_Orange
			//IncludeInorangeprints = true
			Components = 
			{
				K_Graphics_Orange : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"orange/doodads_lightning1.png"
									"orange/doodads_lightning2.png"
									"orange/doodads_lightning3.png"
									"orange/doodads_lightning4.png"
									"orange/doodads_lightning5.png"
									"orange/doodads_lightning6.png"
									"orange/doodads_lightning7.png"
									"orange/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"orange/doodads_lightning1.png"
									"orange/doodads_lightning2.png"
									"orange/doodads_lightning3.png"
									"orange/doodads_lightning4.png"
									"orange/doodads_lightning5.png"
									"orange/doodads_lightning6.png"
									"orange/doodads_lightning7.png"
									"orange/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"orange/doodads_lightning1.png"
									"orange/doodads_lightning2.png"
									"orange/doodads_lightning3.png"
									"orange/doodads_lightning4.png"
									"orange/doodads_lightning5.png"
									"orange/doodads_lightning6.png"
									"orange/doodads_lightning7.png"
									"orange/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "orange/lights.png"
								Size = [4, 4]
							}
						]
					}
					
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [3, 3]
								Z = 1
								VertexColor = [255*1.5, 150*1.5, 0, 100]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS ORANGE END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS RED START ------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_Graphics_Red
		{
			Type = ToggledComponents
			Toggle = Kebechet_STL_ToggleColours_Red
			//IncludeInredprints = true
			Components = 
			{
				K_Graphics_Red : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"red/doodads_lightning1.png"
									"red/doodads_lightning2.png"
									"red/doodads_lightning3.png"
									"red/doodads_lightning4.png"
									"red/doodads_lightning5.png"
									"red/doodads_lightning6.png"
									"red/doodads_lightning7.png"
									"red/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"red/doodads_lightning1.png"
									"red/doodads_lightning2.png"
									"red/doodads_lightning3.png"
									"red/doodads_lightning4.png"
									"red/doodads_lightning5.png"
									"red/doodads_lightning6.png"
									"red/doodads_lightning7.png"
									"red/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"red/doodads_lightning1.png"
									"red/doodads_lightning2.png"
									"red/doodads_lightning3.png"
									"red/doodads_lightning4.png"
									"red/doodads_lightning5.png"
									"red/doodads_lightning6.png"
									"red/doodads_lightning7.png"
									"red/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "red/lights.png"
								Size = [4, 4]
							}
						]
					}
					
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [3, 3]
								Z = 1
								VertexColor = [255*1.5, 0, 0, 100]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS RED END --------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS YELLOW START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_Graphics_Yellow
		{
			Type = ToggledComponents
			Toggle = Kebechet_STL_ToggleColours_Yellow
			//IncludeInYellowprints = true
			Components = 
			{
				K_Graphics_Yellow : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"Yellow/doodads_lightning1.png"
									"Yellow/doodads_lightning2.png"
									"Yellow/doodads_lightning3.png"
									"Yellow/doodads_lightning4.png"
									"Yellow/doodads_lightning5.png"
									"Yellow/doodads_lightning6.png"
									"Yellow/doodads_lightning7.png"
									"Yellow/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"Yellow/doodads_lightning1.png"
									"Yellow/doodads_lightning2.png"
									"Yellow/doodads_lightning3.png"
									"Yellow/doodads_lightning4.png"
									"Yellow/doodads_lightning5.png"
									"Yellow/doodads_lightning6.png"
									"Yellow/doodads_lightning7.png"
									"Yellow/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"Yellow/doodads_lightning1.png"
									"Yellow/doodads_lightning2.png"
									"Yellow/doodads_lightning3.png"
									"Yellow/doodads_lightning4.png"
									"Yellow/doodads_lightning5.png"
									"Yellow/doodads_lightning6.png"
									"Yellow/doodads_lightning7.png"
									"Yellow/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "Yellow/lights.png"
								Size = [4, 4]
							}
						]
					}
					
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [3, 3]
								Z = 1
								VertexColor = [255*1.5, 255*1.5, 0, 100]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS YELLOW END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS GREEN START ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_Graphics_Green
		{
			Type = ToggledComponents
			Toggle = Kebechet_STL_ToggleColours_Green
			//IncludeInGreenprints = true
			Components = 
			{
				K_Graphics_Green : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"green/doodads_lightning1.png"
									"green/doodads_lightning2.png"
									"green/doodads_lightning3.png"
									"green/doodads_lightning4.png"
									"green/doodads_lightning5.png"
									"green/doodads_lightning6.png"
									"green/doodads_lightning7.png"
									"green/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"green/doodads_lightning1.png"
									"green/doodads_lightning2.png"
									"green/doodads_lightning3.png"
									"green/doodads_lightning4.png"
									"green/doodads_lightning5.png"
									"green/doodads_lightning6.png"
									"green/doodads_lightning7.png"
									"green/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"green/doodads_lightning1.png"
									"green/doodads_lightning2.png"
									"green/doodads_lightning3.png"
									"green/doodads_lightning4.png"
									"green/doodads_lightning5.png"
									"green/doodads_lightning6.png"
									"green/doodads_lightning7.png"
									"green/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "green/lights.png"
								Size = [4, 4]
							}
						]
					}
					
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [3, 3]
								Z = 1
								VertexColor = [0, 255*1.5, 0, 100]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS GREEN END ------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		BatterySprites
		{
			Type = ResourceSprites
			Location = [2, 2]
			ResourceStorage = CombinedBatteryStorage
			Layer = "doodads_low"
			ResourceLevels
			[
				{
					File = "batteries1.png"
					Size = [4, 4]
				}
				{
					File = "batteries2.png"
					Size = [4, 4]
				}
				{
					File = "batteries3.png"
					Size = [4, 4]
				}
				{
					File = "batteries4.png"
					Size = [4, 4]
				}
				{
					File = "batteries5.png"
					Size = [4, 4]
				}
				{
					File = "batteries6.png"
					Size = [4, 4]
				}
				{
					File = "batteries7.png"
					Size = [4, 4]
				}
				{
					File = "batteries8.png"
					Size = [4, 4]
				}
				{
					File = "batteries9.png"
					Size = [4, 4]
				}
				{
					File = "batteries10.png"
					Size = [4, 4]
				}
				{
					File = "batteries11.png"
					Size = [4, 4]
				}
				{
					File = "batteries12.png"
					Size = [4, 4]
				}
				{
					File = "batteries13.png"
					Size = [4, 4]
				}
				{
					File = "batteries14.png"
					Size = [4, 4]
				}
				{
					File = "batteries15.png"
					Size = [4, 4]
				}
				{
					File = "batteries16.png"
					Size = [4, 4]
				}
				{
					File = "batteries17.png"
					Size = [4, 4]
				}
				{
					File = "batteries18.png"
					Size = [4, 4]
				}
				{
					File = "batteries19.png"
					Size = [4, 4]
				}
				{
					File = "batteries20.png"
					Size = [4, 4]
				}
				{
					File = "batteries21.png"
					Size = [4, 4]
				}
				{
					File = "batteries22.png"
					Size = [4, 4]
				}
				{
					File = "batteries23.png"
					Size = [4, 4]
				}
				{
					File = "batteries24.png"
					Size = [4, 4]
				}
			]
		}
				
		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [2, 2]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [2, 2]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage // ModularCombinedBatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [4, 4]
		}
	}

	Stats
	{
		ShieldPenResist = &~/Part/Components/ArcShield/PenetrationResistance/0/BaseValue
		ShieldDist = (&~/Part/Components/ArcShield/Radius) - (&~/Part/Components/ArcShield/Location/1)
		ShieldSegments = 6
		ShieldHPSegment = (&~/Part/Components/FrontBatteryStorage/MaxResources) / (&~/Part/Components/ArcShield/ResourceDrainPerDamage)
		PowerUsageContinuous = (&~/Part/Components/FrontPowerDrain/FromQuantity) / (&~/Part/Components/FrontPowerDrain/Interval) / 1000 * (&ShieldSegments)
		SegmentCapacity = (&~/Part/Components/FrontBatteryStorage/MaxResources) / 1000
		PowerCapacity = (&SegmentCapacity) * (&ShieldSegments)

		RecPower = (&PowerUsageContinuous) + 0.5
		RecCrew = (&RecPower) * 4
	}
	
	StatsNotesKey = "Stats/BubbleNotes"
}

Stats
{
	// Front ArcShield is base and so it doesn't appear here
	ArcShield_Front
	{
		Rotation = -90d
		OperationalToggle = FrontIsOperational
		DrainResourcesFrom = CombinedFrontBatteryStorage
	}
	ArcShield_TopRight
	{
		Rotation = -30d
		OperationalToggle = TopRightIsOperational
		DrainResourcesFrom = CombinedTopRightBatteryStorage
	}
	ArcShield_BottomRight
	{
		Rotation = 30d
		OperationalToggle = BottomRightIsOperational
		DrainResourcesFrom = CombinedBottomRightBatteryStorage
	}
	ArcShield_Back
	{
		Rotation = 90d
		OperationalToggle = BackIsOperational
		DrainResourcesFrom = CombinedBackBatteryStorage
	}
	ArcShield_TopLeft
	{
		Rotation = 150d
		OperationalToggle = TopLeftIsOperational
		DrainResourcesFrom = CombinedTopLeftBatteryStorage
	}
	ArcShield_BottomLeft
	{
		Rotation = 210d
		OperationalToggle = BottomLeftIsOperational
		DrainResourcesFrom = CombinedBottomLeftBatteryStorage
	}
}