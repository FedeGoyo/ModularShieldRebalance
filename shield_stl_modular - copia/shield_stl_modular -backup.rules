OVERCLOCK
{
	DAMAGE_DRAIN_FACTOR = 1 / 3
	EMP_RESIST = 50%
	HEAT_PER_SECOND = 20
	HEAT_PER_DAMAGE = 0.5
}
HEAT_TO_RESOURCE = &<./Data/statuses/heat/heat.rules>/STATUS_TO_RESOURCE_RATIO
HEAT_TO_STATUS = &<./Data/statuses/heat/heat.rules>/RESOURCE_TO_STATUS_RATIO

Part : <./Data/ships/terran/base_part_terran_overclock.rules>/Part
{
	NameKey = "Parts/KebechetSTLmodularShield"
	IconNameKey = "Parts/KebechetSTLmodularShieldIcon"
	DescriptionKey = "Parts/KebechetSTLmodularShieldDesc"
	ID = swefpifh.Kebechet_STL_modularShield
	EditorGroup = "Defenses"
	Resources
	[
		[steel, 120]
		[diamond, 3]
		[processor, 4] 
	]
	AIValueFactor = 5
	Size = [4, 4]
	PhysicalRect = [0, 0, 4, 4] // For backwards compatibility with old shield generators.
	SaveRect = &PhysicalRect
	SelectionPriority = 1
	SelectionTypeID = "shield_gen_stl"
	SelectionTypeByRotation = false
	MaxHealth = 10000
	TypeCategories = [defense, uses_power]
	ReceivableBuffs : ^/0/ReceivableBuffs [ModularShieldResistanceBonus, ModularShieldRadiusBonus]
	PenetrationRectType = Normal
	AllowedDoorLocations
	[
		[1, -1] // Haut
		[2, -1]
		
		[1, 4] // Bas
		[2, 4]
		
		[-1, 1] // Gauche
		[-1, 2]
		
		[4, 1] // Droite
		[4, 2]
	]
	
	IsRotateable = false
	IgnoreRotationForMirroredSelection = true
	IsFlippable = false
	
	ForceManhattanPathInPart = true
	BlockedTravelCells
	[
		[1, 1]
		[1, 2]
		[2, 1]
		[2, 2]
	]

	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	Components : ^/0/Components
	{

		// --------------------------------- START TOGGLES
		
		// -----------------------------------------------
		// COLOURS TOGGLES -------------------------------
		// -----------------------------------------------

		ToggleColours
		{
			Type = UIToggle
			ToggleID = "Kebechet_ToggleID_Colours"
			Default = 0
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}

		

		ToggleColours_Blue : ToggleColours_Purple	{ OnMode = 1 }
		ToggleColours_Orange : ToggleColours_Purple	{ OnMode = 2 }
		ToggleColours_Red : ToggleColours_Purple	{ OnMode = 3 }
		ToggleColours_Yellow : ToggleColours_Purple	{ OnMode = 4 }
		ToggleColours_Green : ToggleColours_Purple	{ OnMode = 5 }
		
		// -----------------------------------------------
		// DISPLAY TOGGLES -------------------------------
		// -----------------------------------------------
		
		ToggleDisplay
		{
			Type = UIToggle
			ToggleID = "Kebechet_ToggleID_Display"
			Default = 0
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}

		ToggleDisplay_On
		{
			Type = ModeToggle
			Mode = ToggleDisplay
			OnMode = 0
		}

		ToggleDisplay_Off : ToggleDisplay_On	{ OnMode = 1 }
		
		// -----------------------------------------------
		// RADIUS BUFF TOGGLES -------------------------------
		// -----------------------------------------------
		
		RadiusBuff
		{
			Type = BuffableValue
			Value
			{
				BaseValue = 0
				BuffType = ModularShieldRadiusBonus
				BuffMode = Add
			}
		}
		
		ToggleRadius_0
		{
			Type = ThresholdToggle
			AmountFrom = RadiusBuff
			MinAmount = 0
			MaxAmount = 0
		}
		ToggleRadius_1 : ToggleRadius_0
		{
			MinAmount = 1
			MaxAmount = 1
		}
		ToggleRadius_2 : ToggleRadius_0
		{
			MinAmount = 2
			MaxAmount = 2
		}
		ToggleRadius_3 : ToggleRadius_0
		{
			MinAmount = 3
			MaxAmount = 3
		}
		ToggleRadius_4 : ToggleRadius_0
		{
			MinAmount = 4
			MaxAmount = 4
		}
		ToggleRadius_5 : ToggleRadius_0
		{
			MinAmount = 5
			MaxAmount = 5
		}
		ToggleRadius_6 : ToggleRadius_0
		{
			MinAmount = 6
			MaxAmount = 6
		}
		ToggleRadius_7 : ToggleRadius_0
		{
			MinAmount = 7
			MaxAmount = 7
		}
		
		// -----------------------------------------------
		// PROXY -----------------------------------------
		// -----------------------------------------------
		
		ColoursProxy
		{
			Type = ToggleProxy
			ComponentID = ColoursSet
		}
		ColoursSet
		{
			Type = MultiToggle
			Toggles = [ToggleColours_Purple, ToggleColours_Blue, ToggleColours_Orange, ToggleColours_Red, ToggleColours_Yellow, ToggleColours_Green]
			Mode = Any
		}

		DisplayProxy
		{
			Type = ToggleProxy
			ComponentID = DisplaySet
		}
		DisplaySet
		{
			Type = MultiToggle
			Toggles = [ToggleDisplay_Off, ToggleDisplay_On]
			Mode = Any
		}
		
		// -----------------------------------------------
		// MULTI TOGGLES --------------------------------- // ColoursProxy, DisplayProxy
		// -----------------------------------------------

		// ---------------- PURPLE -----------------------
		
		
		// ---------------- BLUE ---------------------
		Toggle_Blue_0_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_On, ToggleRadius_0, ColoursProxy, DisplayProxy]  }
		Toggle_Blue_0_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_Off, ToggleRadius_0, ColoursProxy, DisplayProxy] }
		Toggle_Blue_1_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_On, ToggleRadius_1, ColoursProxy, DisplayProxy]  }
		Toggle_Blue_1_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_Off, ToggleRadius_1, ColoursProxy, DisplayProxy] }
		Toggle_Blue_2_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_On, ToggleRadius_2, ColoursProxy, DisplayProxy]  }
		Toggle_Blue_2_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_Off, ToggleRadius_2, ColoursProxy, DisplayProxy] }
		Toggle_Blue_3_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_On, ToggleRadius_3, ColoursProxy, DisplayProxy]  }
		Toggle_Blue_3_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_Off, ToggleRadius_3, ColoursProxy, DisplayProxy] }
		Toggle_Blue_4_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_On, ToggleRadius_4, ColoursProxy, DisplayProxy]  }
		Toggle_Blue_4_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_Off, ToggleRadius_4, ColoursProxy, DisplayProxy] }
		Toggle_Blue_5_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_On, ToggleRadius_5, ColoursProxy, DisplayProxy]  }
		Toggle_Blue_5_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_Off, ToggleRadius_5, ColoursProxy, DisplayProxy] }
		Toggle_Blue_6_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_On, ToggleRadius_6, ColoursProxy, DisplayProxy]  }
		Toggle_Blue_6_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_Off, ToggleRadius_6, ColoursProxy, DisplayProxy] }
		Toggle_Blue_7_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_On, ToggleRadius_7, ColoursProxy, DisplayProxy]  }
		Toggle_Blue_7_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Blue, ToggleDisplay_Off, ToggleRadius_7, ColoursProxy, DisplayProxy] }
		// ---------------- Orange ---------------------
		Toggle_Orange_0_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Orange, ToggleDisplay_On, ToggleRadius_0, ColoursProxy, DisplayProxy] }
		Toggle_Orange_0_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Orange, ToggleDisplay_Off, ToggleRadius_0, ColoursProxy, DisplayProxy] }
		Toggle_Orange_1_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Orange, ToggleDisplay_On, ToggleRadius_1, ColoursProxy, DisplayProxy] }
		Toggle_Orange_1_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Orange, ToggleDisplay_Off, ToggleRadius_1, ColoursProxy, DisplayProxy] }
		Toggle_Orange_2_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Orange, ToggleDisplay_On, ToggleRadius_2, ColoursProxy, DisplayProxy] }
		Toggle_Orange_2_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Orange, ToggleDisplay_Off, ToggleRadius_2, ColoursProxy, DisplayProxy] }
		Toggle_Orange_3_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Orange, ToggleDisplay_On, ToggleRadius_3, ColoursProxy, DisplayProxy] }
		Toggle_Orange_3_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Orange, ToggleDisplay_Off, ToggleRadius_3, ColoursProxy, DisplayProxy] }
		Toggle_Orange_4_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Orange, ToggleDisplay_On, ToggleRadius_4, ColoursProxy, DisplayProxy] }
		Toggle_Orange_4_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Orange, ToggleDisplay_Off, ToggleRadius_4, ColoursProxy, DisplayProxy] }
		Toggle_Orange_5_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Orange, ToggleDisplay_On, ToggleRadius_5, ColoursProxy, DisplayProxy] }
		Toggle_Orange_5_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Orange, ToggleDisplay_Off, ToggleRadius_5, ColoursProxy, DisplayProxy] }
		Toggle_Orange_6_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Orange, ToggleDisplay_On, ToggleRadius_6, ColoursProxy, DisplayProxy] }
		Toggle_Orange_6_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Orange, ToggleDisplay_Off, ToggleRadius_6, ColoursProxy, DisplayProxy] }
		Toggle_Orange_7_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Orange, ToggleDisplay_On, ToggleRadius_7, ColoursProxy, DisplayProxy] }
		Toggle_Orange_7_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Orange, ToggleDisplay_Off, ToggleRadius_7, ColoursProxy, DisplayProxy] }
		// ---------------- Red ---------------------
		Toggle_Red_0_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_On, ToggleRadius_0, ColoursProxy, DisplayProxy]  }
		Toggle_Red_0_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_Off, ToggleRadius_0, ColoursProxy, DisplayProxy] }
		Toggle_Red_1_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_On, ToggleRadius_1, ColoursProxy, DisplayProxy]  }
		Toggle_Red_1_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_Off, ToggleRadius_1, ColoursProxy, DisplayProxy] }
		Toggle_Red_2_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_On, ToggleRadius_2, ColoursProxy, DisplayProxy]  }
		Toggle_Red_2_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_Off, ToggleRadius_2, ColoursProxy, DisplayProxy] }
		Toggle_Red_3_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_On, ToggleRadius_3, ColoursProxy, DisplayProxy]  }
		Toggle_Red_3_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_Off, ToggleRadius_3, ColoursProxy, DisplayProxy] }
		Toggle_Red_4_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_On, ToggleRadius_4, ColoursProxy, DisplayProxy]  }
		Toggle_Red_4_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_Off, ToggleRadius_4, ColoursProxy, DisplayProxy] }
		Toggle_Red_5_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_On, ToggleRadius_5, ColoursProxy, DisplayProxy]  }
		Toggle_Red_5_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_Off, ToggleRadius_5, ColoursProxy, DisplayProxy] }
		Toggle_Red_6_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_On, ToggleRadius_6, ColoursProxy, DisplayProxy]  }
		Toggle_Red_6_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_Off, ToggleRadius_6, ColoursProxy, DisplayProxy] }
		Toggle_Red_7_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_On, ToggleRadius_7, ColoursProxy, DisplayProxy]  }
		Toggle_Red_7_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Red, ToggleDisplay_Off, ToggleRadius_7, ColoursProxy, DisplayProxy] }
		// ---------------- Yellow ---------------------
		Toggle_Yellow_0_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Yellow, ToggleDisplay_On, ToggleRadius_0, ColoursProxy, DisplayProxy]  }
		Toggle_Yellow_0_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Yellow, ToggleDisplay_Off, ToggleRadius_0, ColoursProxy, DisplayProxy] }
		Toggle_Yellow_1_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Yellow, ToggleDisplay_On, ToggleRadius_1, ColoursProxy, DisplayProxy]  }
		Toggle_Yellow_1_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Yellow, ToggleDisplay_Off, ToggleRadius_1, ColoursProxy, DisplayProxy] }
		Toggle_Yellow_2_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Yellow, ToggleDisplay_On, ToggleRadius_2, ColoursProxy, DisplayProxy]  }
		Toggle_Yellow_2_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Yellow, ToggleDisplay_Off, ToggleRadius_2, ColoursProxy, DisplayProxy] }
		Toggle_Yellow_3_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Yellow, ToggleDisplay_On, ToggleRadius_3, ColoursProxy, DisplayProxy]  }
		Toggle_Yellow_3_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Yellow, ToggleDisplay_Off, ToggleRadius_3, ColoursProxy, DisplayProxy] }
		Toggle_Yellow_4_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Yellow, ToggleDisplay_On, ToggleRadius_4, ColoursProxy, DisplayProxy]  }
		Toggle_Yellow_4_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Yellow, ToggleDisplay_Off, ToggleRadius_4, ColoursProxy, DisplayProxy] }
		Toggle_Yellow_5_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Yellow, ToggleDisplay_On, ToggleRadius_5, ColoursProxy, DisplayProxy]  }
		Toggle_Yellow_5_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Yellow, ToggleDisplay_Off, ToggleRadius_5, ColoursProxy, DisplayProxy] }
		Toggle_Yellow_6_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Yellow, ToggleDisplay_On, ToggleRadius_6, ColoursProxy, DisplayProxy]  }
		Toggle_Yellow_6_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Yellow, ToggleDisplay_Off, ToggleRadius_6, ColoursProxy, DisplayProxy] }
		Toggle_Yellow_7_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Yellow, ToggleDisplay_On, ToggleRadius_7, ColoursProxy, DisplayProxy]  }
		Toggle_Yellow_7_Off : Toggle_Purple_0_On	{ Toggles = [ToggleColours_Yellow, ToggleDisplay_Off, ToggleRadius_7, ColoursProxy, DisplayProxy] }
		// ---------------- Green ---------------------
		Toggle_Green_0_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_On, ToggleRadius_0, ColoursProxy, DisplayProxy]  }
		Toggle_Green_0_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_Off, ToggleRadius_0, ColoursProxy, DisplayProxy] }
		Toggle_Green_1_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_On, ToggleRadius_1, ColoursProxy, DisplayProxy]  }
		Toggle_Green_1_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_Off, ToggleRadius_1, ColoursProxy, DisplayProxy] }
		Toggle_Green_2_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_On, ToggleRadius_2, ColoursProxy, DisplayProxy]  }
		Toggle_Green_2_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_Off, ToggleRadius_2, ColoursProxy, DisplayProxy] }
		Toggle_Green_3_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_On, ToggleRadius_3, ColoursProxy, DisplayProxy]  }
		Toggle_Green_3_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_Off, ToggleRadius_3, ColoursProxy, DisplayProxy] }
		Toggle_Green_4_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_On, ToggleRadius_4, ColoursProxy, DisplayProxy]  }
		Toggle_Green_4_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_Off, ToggleRadius_4, ColoursProxy, DisplayProxy] }
		Toggle_Green_5_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_On, ToggleRadius_5, ColoursProxy, DisplayProxy]  }
		Toggle_Green_5_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_Off, ToggleRadius_5, ColoursProxy, DisplayProxy] }
		Toggle_Green_6_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_On, ToggleRadius_6, ColoursProxy, DisplayProxy]  }
		Toggle_Green_6_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_Off, ToggleRadius_6, ColoursProxy, DisplayProxy] }
		Toggle_Green_7_On : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_On, ToggleRadius_7, ColoursProxy, DisplayProxy]  }
		Toggle_Green_7_Off : Toggle_Purple_0_On		{ Toggles = [ToggleColours_Green, ToggleDisplay_Off, ToggleRadius_7, ColoursProxy, DisplayProxy] }

		// --------------------------------- END TOGGLES
		
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL] // ModularCombinedBatteryStorage // CombinedBatteryStorage
			Mode = All
		}

		IsOperationalNonOverclocked
		{
			Type = MultiToggle
			Toggles = [ IsOperational, { Toggle=IsOverclocked; Invert=true } ]
			Mode = All
		}

		CommandConsumptionToggle
		{
			Type = MultiToggle
			Toggles = [PowerToggle, ScorchedToggle]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		ScorchedToggle
		{
			Type = StatusToggle
			StatusType = cosmoteer.scorched
			MinStatusValue = 1
			Invert = true
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = CommandConsumptionToggle
			CommandPoints = 8
		}

		// Starts Normal Batteries

		Drain	// Drain effects target the first Resource Storage in the file
		{
			Type = MultiResourceStorage
			ResourceType = battery
			IsDrainable = true
			ResourceStorages = [OuterFrontRightBatteryStorage, OuterRightBatteryStorage, OuterBackRightBatteryStorage, OuterBackLeftBatteryStorage, OuterLeftBatteryStorage, OuterFrontLeftBatteryStorage, InnerFrontBatteryStorage, InnerFrontRightBatteryStorage, InnerBackRightBatteryStorage, InnerBackBatteryStorage, InnerBackLeftBatteryStorage, InnerFrontLeftBatteryStorage, ModularBatteryStorageProxy]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
			RemoveMode = DistributeProportionallyByAvailable
		}

		CombinedBatteryStorage
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [OuterFrontRightBatteryStorage, OuterRightBatteryStorage, OuterBackRightBatteryStorage, OuterBackLeftBatteryStorage, OuterLeftBatteryStorage, OuterFrontLeftBatteryStorage, InnerFrontBatteryStorage, InnerFrontRightBatteryStorage, InnerBackRightBatteryStorage, InnerBackBatteryStorage, InnerBackLeftBatteryStorage, InnerFrontLeftBatteryStorage]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
			AddMode = PrioritizeLeastResources // DistributeProportionallyByAvailable
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = CombinedBatteryStorage
			DefaultPriority = &/PRIORITIES/Defense_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
		}
		
		BatteryStorage // ModularCombinedBatteryStorage, named BatteryStorage for easier compatibility with energy mods
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [OuterFrontRightBatteryStorage, OuterRightBatteryStorage, OuterBackRightBatteryStorage, OuterBackLeftBatteryStorage, OuterLeftBatteryStorage, OuterFrontLeftBatteryStorage, InnerFrontBatteryStorage, InnerFrontRightBatteryStorage, InnerBackRightBatteryStorage, InnerBackBatteryStorage, InnerBackLeftBatteryStorage, InnerFrontLeftBatteryStorage, ModularBatteryStorageProxy]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
			AddMode = PrioritizeLeastResources
			ToggleOnResources = 7001
		}
		BatteryConsumer2 : BatteryConsumer	{ Storage = ModularBatteryStorageProxy }	// If I use ModularCombinedBatteryStorage so that all batteries (including ModularBatteryStorageProxy) are in the same consumer, the ModularBatteryStorageProxy never receives energy, no idea why.
		
		
		ProgressBarSegments
		{
			Type = ProgressBar
			OperationalToggle = IsNotModularOperational
			ShowProgressFor = CombinedBatteryStorage
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}
		ProgressBarModular
		{
			Type = ProgressBar
			OperationalToggle = IsModularOperationalNotOverclocked
			ShowProgressFor = ModularBatteryStorageProxy
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}
		ProgressBarOuter
		{
			Type = ProgressBar
			OperationalToggle = IsOperationalOverclocked
			ShowProgressFor = CombinedBatteryStorageOuter
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}
		ProgressBarInner
		{
			Type = ProgressBar
			OperationalToggle = IsOperationalOverclocked
			ShowProgressFor = CombinedBatteryStorageInner
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}
		ProgressBarModularOuter
		{
			Type = ProgressBar
			OperationalToggle = IsModularOperationalOverclocked
			ShowProgressFor = ModularOuterBatteryStorageProxy
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}
		ProgressBarModularInner
		{
			Type = ProgressBar
			OperationalToggle = IsModularOperationalOverclocked
			ShowProgressFor = ModularInnerBatteryStorageProxy
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}
		CombinedBatteryStorageOuter
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [OuterFrontRightBatteryStorage, OuterBackRightBatteryStorage, OuterBackLeftBatteryStorage, OuterFrontLeftBatteryStorage]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
			AddMode = PrioritizeLeastResources // DistributeProportionallyByAvailable
		}
		CombinedBatteryStorageInner
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [InnerFrontBatteryStorage, InnerRightBatteryStorage, InnerBackBatteryStorage, InnerLeftBatteryStorage]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
			AddMode = PrioritizeLeastResources // DistributeProportionallyByAvailable
		}
		
		
		// Inner (when overclocked)
		
		InnerFrontIsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, InnerFrontBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalOverclocked]
			Mode = All
		}
		InnerFrontOverclockEffect :			InnerFrontIsOperational	{ Toggles = [InnerFrontIsOperational, OverclockedEffectToggle] }
		InnerFrontOverloadEffect :			InnerFrontIsOperational	{ Toggles = [InnerFrontIsOperational, IsOperationalOverloaded] }
		InnerFrontOverclockOverloadEffect :	InnerFrontIsOperational	{ Toggles = [InnerFrontIsOperational, IsOperationalOverclockedOverloaded] }
		InnerFrontBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 2000
			ToggleOnResources = 2000
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		CombinedInnerFrontBatteryStorage
		{
			Type = MultiResourceStorage
			OperationalToggle = IsOverclocked
			IsDrainable = true
			ResourceType = battery
			ResourceStorages = [InnerFrontBatteryStorage, ModularInnerBatteryStorageProxy] // CentralBatteryStorage
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
			RemoveMode = PrioritizeMostResources // DistributeProportionallyByAvailable
		}
		InnerFrontPowerDrain
		{
			Type = ResourceConverter
			OperationalToggle = InnerFrontIsOperational
			FromStorage = InnerFrontBatteryStorage
			FromQuantity = (&../FrontPowerDrain/FromQuantity) / 2
			MinFromQuantityForConversion = 1
			Interval = 2
		}
		
		InnerFrontRightIsOperational : 				InnerFrontIsOperational				{ Toggles = [PowerToggle, InnerFrontRightBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalOverclocked] }
		InnerFrontRightOverclockEffect :			InnerFrontIsOperational				{ Toggles = [InnerFrontRightIsOperational, OverclockedEffectToggle] }
		InnerFrontRightOverclockOverloadEffect :	InnerFrontIsOperational				{ Toggles = [InnerFrontRightIsOperational, IsOperationalOverclockedOverloaded] }
		InnerFrontRightBatteryStorage : 			InnerFrontBatteryStorage			{}
		CombinedInnerFrontRightBatteryStorage :		CombinedInnerFrontBatteryStorage	{ ResourceStorages = [InnerFrontRightBatteryStorage, ModularInnerBatteryStorageProxy] }
		InnerFrontRightPowerDrain : 				InnerFrontPowerDrain
		{
			OperationalToggle = InnerFrontRightIsOperational
			FromStorage = InnerFrontRightBatteryStorage
		}
		
		InnerBackRightIsOperational : 			InnerFrontIsOperational				{ Toggles = [PowerToggle, InnerBackRightBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalOverclocked] }
		InnerBackRightOverclockEffect :			InnerFrontIsOperational				{ Toggles = [InnerBackRightIsOperational, OverclockedEffectToggle] }
		InnerBackRightOverclockOverloadEffect :	InnerFrontIsOperational				{ Toggles = [InnerBackRightIsOperational, IsOperationalOverclockedOverloaded] }
		InnerBackRightBatteryStorage : 			InnerFrontBatteryStorage			{}
		CombinedInnerBackRightBatteryStorage :	CombinedInnerFrontBatteryStorage	{ ResourceStorages = [InnerBackRightBatteryStorage, ModularInnerBatteryStorageProxy] }
		InnerBackRightPowerDrain : 				InnerFrontPowerDrain
		{
			OperationalToggle = InnerBackRightIsOperational
			FromStorage = InnerBackRightBatteryStorage
		}
		
		InnerBackIsOperational : 			InnerFrontIsOperational				{ Toggles = [PowerToggle, InnerBackBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalOverclocked] }
		InnerBackOverclockEffect :			InnerFrontIsOperational				{ Toggles = [InnerBackIsOperational, OverclockedEffectToggle] }
		InnerBackOverclockOverloadEffect :	InnerFrontIsOperational				{ Toggles = [InnerBackIsOperational, IsOperationalOverclockedOverloaded] }
		InnerBackBatteryStorage : 			InnerFrontBatteryStorage			{}
		CombinedInnerBackBatteryStorage :	CombinedInnerFrontBatteryStorage	{ ResourceStorages = [InnerBackBatteryStorage, ModularInnerBatteryStorageProxy] }
		InnerBackPowerDrain : 				InnerFrontPowerDrain
		{
			OperationalToggle = InnerBackIsOperational
			FromStorage = InnerBackBatteryStorage
		}
		
		InnerBackLeftIsOperational : 			InnerFrontIsOperational				{ Toggles = [PowerToggle, InnerBackLeftBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalOverclocked] }
		InnerBackLeftOverclockEffect :			InnerFrontIsOperational				{ Toggles = [InnerBackLeftIsOperational, OverclockedEffectToggle] }
		InnerBackLeftOverclockOverloadEffect :	InnerFrontIsOperational				{ Toggles = [InnerBackLeftIsOperational, IsOperationalOverclockedOverloaded] }
		InnerBackLeftBatteryStorage : 			InnerFrontBatteryStorage			{}
		CombinedInnerBackLeftBatteryStorage :	CombinedInnerFrontBatteryStorage	{ ResourceStorages = [InnerBackLeftBatteryStorage, ModularInnerBatteryStorageProxy] }
		InnerBackLeftPowerDrain : 				InnerFrontPowerDrain
		{
			OperationalToggle = InnerBackLeftIsOperational
			FromStorage = InnerBackLeftBatteryStorage
		}
		
		InnerFrontLeftIsOperational : 			InnerFrontIsOperational				{ Toggles = [PowerToggle, InnerFrontLeftBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalOverclocked] }
		InnerFrontLeftOverclockEffect :			InnerFrontIsOperational				{ Toggles = [InnerFrontLeftIsOperational, OverclockedEffectToggle] }
		InnerFrontLeftOverclockOverloadEffect :	InnerFrontIsOperational				{ Toggles = [InnerFrontLeftIsOperational, IsOperationalOverclockedOverloaded] }
		InnerFrontLeftBatteryStorage : 			InnerFrontBatteryStorage			{}
		CombinedInnerFrontLeftBatteryStorage :	CombinedInnerFrontBatteryStorage	{ ResourceStorages = [InnerFrontLeftBatteryStorage, ModularInnerBatteryStorageProxy] }
		InnerFrontLeftPowerDrain : 				InnerFrontPowerDrain
		{
			OperationalToggle = InnerFrontLeftIsOperational
			FromStorage = InnerFrontLeftBatteryStorage
		}
		
		// Outer (when overclocked)
		
		OuterFrontRightIsOperational : 				InnerFrontIsOperational				{ Toggles = [PowerToggle, OuterFrontRightBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalOverclocked] }
		OuterFrontRightOverclockEffect :			InnerFrontIsOperational				{ Toggles = [OuterFrontRightIsOperational, OverclockedEffectToggle] }
		OuterFrontRightOverclockOverloadEffect :	InnerFrontIsOperational				{ Toggles = [OuterFrontRightIsOperational, IsOperationalOverclockedOverloaded] }
		OuterFrontRightBatteryStorage : 			InnerFrontBatteryStorage			{}
		CombinedOuterFrontRightBatteryStorage :		CombinedInnerFrontBatteryStorage	{ ResourceStorages = [OuterFrontRightBatteryStorage, ModularOuterBatteryStorageProxy] }
		OuterFrontRightPowerDrain : 				InnerFrontPowerDrain
		{
			OperationalToggle = OuterFrontRightIsOperational
			FromStorage = OuterFrontRightBatteryStorage
		}
		
		OuterRightIsOperational : 			InnerFrontIsOperational				{ Toggles = [PowerToggle, OuterRightBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalOverclocked] }
		OuterRightOverclockEffect :			InnerFrontIsOperational				{ Toggles = [OuterRightIsOperational, OverclockedEffectToggle] }
		OuterRightOverclockOverloadEffect :	InnerFrontIsOperational				{ Toggles = [OuterRightIsOperational, IsOperationalOverclockedOverloaded] }
		OuterRightBatteryStorage : 			InnerFrontBatteryStorage			{}
		CombinedOuterRightBatteryStorage :	CombinedInnerFrontBatteryStorage	{ ResourceStorages = [OuterRightBatteryStorage, ModularOuterBatteryStorageProxy] }
		OuterRightPowerDrain : 				InnerFrontPowerDrain
		{
			OperationalToggle = OuterRightIsOperational
			FromStorage = OuterRightBatteryStorage
		}
		
		OuterBackRightIsOperational : 				InnerFrontIsOperational				{ Toggles = [PowerToggle, OuterBackRightBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalOverclocked] }
		OuterBackRightOverclockEffect :				InnerFrontIsOperational				{ Toggles = [OuterBackRightIsOperational, OverclockedEffectToggle] }
		OuterBackRightOverclockOverloadEffect :		InnerFrontIsOperational				{ Toggles = [OuterBackRightIsOperational, IsOperationalOverclockedOverloaded] }
		OuterBackRightBatteryStorage : 				InnerFrontBatteryStorage			{}
		CombinedOuterBackRightBatteryStorage :		CombinedInnerFrontBatteryStorage	{ ResourceStorages = [OuterBackRightBatteryStorage, ModularOuterBatteryStorageProxy] }
		OuterBackRightPowerDrain : 					InnerFrontPowerDrain
		{
			OperationalToggle = OuterBackRightIsOperational
			FromStorage = OuterBackRightBatteryStorage
		}
		
		OuterBackLeftIsOperational : 				InnerFrontIsOperational				{ Toggles = [PowerToggle, OuterBackLeftBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalOverclocked] }
		OuterBackLeftOverclockEffect :				InnerFrontIsOperational				{ Toggles = [OuterBackLeftIsOperational, OverclockedEffectToggle] }
		OuterBackLeftOverclockOverloadEffect :		InnerFrontIsOperational				{ Toggles = [OuterBackLeftIsOperational, IsOperationalOverclockedOverloaded] }
		OuterBackLeftBatteryStorage : 				InnerFrontBatteryStorage			{}
		CombinedOuterBackLeftBatteryStorage :		CombinedInnerFrontBatteryStorage	{ ResourceStorages = [OuterBackLeftBatteryStorage, ModularOuterBatteryStorageProxy] }
		OuterBackLefttPowerDrain : 					InnerFrontPowerDrain
		{
			OperationalToggle = OuterBackLeftIsOperational
			FromStorage = OuterBackLeftBatteryStorage
		}
		
		OuterLeftIsOperational : 				InnerFrontIsOperational				{ Toggles = [PowerToggle, OuterLeftBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalOverclocked] }
		OuterLeftOverclockEffect :				InnerFrontIsOperational				{ Toggles = [OuterLeftIsOperational, OverclockedEffectToggle] }
		OuterLeftOverclockOverloadEffect :		InnerFrontIsOperational				{ Toggles = [OuterLeftIsOperational, IsOperationalOverclockedOverloaded] }
		OuterLeftBatteryStorage : 				InnerFrontBatteryStorage			{}
		CombinedOuterLeftBatteryStorage :		CombinedInnerFrontBatteryStorage	{ ResourceStorages = [OuterLeftBatteryStorage, ModularOuterBatteryStorageProxy] }
		OuterLeftPowerDrain : 					InnerFrontPowerDrain
		{
			OperationalToggle = OuterLeftIsOperational
			FromStorage = OuterLeftBatteryStorage
		}
		
		OuterFrontLeftIsOperational : 				InnerFrontIsOperational				{ Toggles = [PowerToggle, OuterFrontLeftBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalOverclocked] }
		OuterFrontLeftOverclockEffect :				InnerFrontIsOperational				{ Toggles = [OuterFrontLeftIsOperational, OverclockedEffectToggle] }
		OuterFrontLeftOverclockOverloadEffect :		InnerFrontIsOperational				{ Toggles = [OuterFrontLeftIsOperational, IsOperationalOverclockedOverloaded] }
		OuterFrontLeftBatteryStorage : 				InnerFrontBatteryStorage			{}
		CombinedOuterFrontLeftBatteryStorage :		CombinedInnerFrontBatteryStorage	{ ResourceStorages = [OuterFrontLeftBatteryStorage, ModularOuterBatteryStorageProxy] }
		OuterFrontLeftPowerDrain : 					InnerFrontPowerDrain
		{
			OperationalToggle = OuterFrontLeftIsOperational
			FromStorage = OuterFrontLeftBatteryStorage
		}
		
		// Combined (when not overclocked)
		
		FrontIsOperational : 			InnerFrontIsOperational				{ Toggles = [PowerToggle, FrontCombinedBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalNonOverclocked] }
		FrontOverloadEffect :			InnerFrontIsOperational				{ Toggles = [FrontIsOperational, IsOperationalOverloaded] }
		FrontCombinedBatteryStorage : 	CombinedInnerFrontBatteryStorage
		{
			OperationalToggle = { Toggle=IsOverclocked; Invert=true }
			IsDrainable = true
			ResourceStorages = [InnerFrontBatteryStorage, OuterFrontRightBatteryStorage]
			ToggleOnResources = 3001
		}
		CombinedFrontBatteryStorage : 	CombinedInnerFrontBatteryStorage	{ ResourceStorages = [FrontCombinedBatteryStorage, ModularBatteryStorageProxy] }
		FrontPowerDrain : 				InnerFrontPowerDrain
		{
			OperationalToggle = FrontIsOperational
			FromStorage = FrontCombinedBatteryStorage
			FromQuantity = 38
		}
		
		FrontRightIsOperational : 			InnerFrontIsOperational				{ Toggles = [PowerToggle, FrontRightCombinedBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalNonOverclocked] }
		FrontRightOverloadEffect :			InnerFrontIsOperational				{ Toggles = [FrontRightIsOperational, IsOperationalOverloaded] }
		FrontRightCombinedBatteryStorage : 	FrontCombinedBatteryStorage			{ ResourceStorages = [InnerFrontRightBatteryStorage, OuterRightBatteryStorage] }
		CombinedFrontRightBatteryStorage : 	CombinedInnerFrontBatteryStorage	{ ResourceStorages = [FrontRightCombinedBatteryStorage, ModularBatteryStorageProxy] }
		FrontRightPowerDrain :				FrontPowerDrain
		{
			OperationalToggle = FrontRightIsOperational
			FromStorage = FrontRightCombinedBatteryStorage
		}
		
		BackRightIsOperational : 			InnerFrontIsOperational				{ Toggles = [PowerToggle, BackRightCombinedBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalNonOverclocked] }
		BackRightOverloadEffect :			InnerFrontIsOperational				{ Toggles = [RightIsOperational, IsOperationalOverloaded] }
		BackRightCombinedBatteryStorage : 	FrontCombinedBatteryStorage			{ ResourceStorages = [InnerBackRightBatteryStorage, OuterBackRightBatteryStorage] }
		CombinedBackRightBatteryStorage : 	CombinedInnerFrontBatteryStorage	{ ResourceStorages = [BackRightCombinedBatteryStorage, ModularBatteryStorageProxy] }
		BackRightPowerDrain :				FrontPowerDrain
		{
			OperationalToggle = BackRightIsOperational
			FromStorage = BackRightCombinedBatteryStorage
		}

		BackIsOperational : 			InnerFrontIsOperational				{ Toggles = [PowerToggle, BackCombinedBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalNonOverclocked] }
		BackOverloadEffect :			InnerFrontIsOperational				{ Toggles = [BackIsOperational, IsOperationalOverloaded] }
		BackCombinedBatteryStorage : 	FrontCombinedBatteryStorage			{ ResourceStorages = [InnerBackBatteryStorage, OuterBackLeftBatteryStorage] }
		CombinedBackBatteryStorage : 	CombinedInnerFrontBatteryStorage	{ ResourceStorages = [BackCombinedBatteryStorage, ModularBatteryStorageProxy] }
		BackPowerDrain : 				FrontPowerDrain
		{
			OperationalToggle = BackIsOperational
			FromStorage = BackCombinedBatteryStorage
		}

		BackLeftIsOperational : 			InnerFrontIsOperational				{ Toggles = [PowerToggle, BackLeftCombinedBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalNonOverclocked] }
		BackLeftOverloadEffect :			InnerFrontIsOperational				{ Toggles = [BackLeftIsOperational, IsOperationalOverloaded] }
		BackLeftCombinedBatteryStorage : 	FrontCombinedBatteryStorage			{ ResourceStorages = [InnerLeftBatteryStorage, OuterLeftBatteryStorage] }
		CombinedBackLeftBatteryStorage : 		CombinedInnerFrontBatteryStorage	{ ResourceStorages = [BackLeftCombinedBatteryStorage, ModularBatteryStorageProxy] }
		BackLeftPowerDrain : 				FrontPowerDrain
		{
			OperationalToggle = BackLeftIsOperational
			FromStorage = BackLeftCombinedBatteryStorage
		}
		
		FrontLeftIsOperational : 			InnerFrontIsOperational				{ Toggles = [PowerToggle, FrontLeftCombinedBatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL, IsOperationalNonOverclocked] }
		FrontLeftOverloadEffect :			InnerFrontIsOperational				{ Toggles = [FrontLeftIsOperational, IsOperationalOverloaded] }
		FrontLeftCombinedBatteryStorage : 	FrontCombinedBatteryStorage			{ ResourceStorages = [InnerFrontLeftBatteryStorage, OuterFrontLeftBatteryStorage] }
		CombinedFrontLeftBatteryStorage : 	CombinedInnerFrontBatteryStorage	{ ResourceStorages = [FrontLeftCombinedBatteryStorage, ModularBatteryStorageProxy] }
		FrontLeftPowerDrain : 				FrontPowerDrain
		{
			OperationalToggle = FrontLeftIsOperational
			FromStorage = FrontLeftCombinedBatteryStorage
		}
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		ProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = CombinedBatteryStorage
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}
		CombinedBatteryStorage
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [FrontBatteryStorage, FrontRightBatteryStorage, BackRightBatteryStorage, BackBatteryStorage, BackLeftBatteryStorage, FrontLeftBatteryStorage]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = CombinedBatteryStorage
			DefaultPriority = &/PRIORITIES/Defense_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
		}

		FrontIsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, FrontBatteryStorage] //  CombinedFrontBatteryStorage
			Mode = All
		}
		FrontBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 4000
			ToggleOnResources = 3001
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		CombinedFrontBatteryStorage
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [FrontBatteryStorage, ModularBatteryStorageProxy]
			ToggleOnResources = 3001
			RemoveMode = InReverseOrder
			AddMode = InOrder
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		FrontPowerDrain
		{
			Type = ResourceConverter
			OperationalToggle = FrontIsOperational
			FromStorage = FrontBatteryStorage
			FromQuantity = 50
			MinFromQuantityForConversion = 1
			Interval = 2
		}

		FrontRightIsOperational : FrontIsOperational			{ Toggles = [PowerToggle, FrontRightBatteryStorage] }
		FrontRightBatteryStorage : FrontBatteryStorage		{}
		CombinedFrontRightBatteryStorage : CombinedFrontBatteryStorage	{ ResourceStorages = [FrontRightBatteryStorage, ModularBatteryStorageProxy] }
		FrontRightPowerDrain : FrontPowerDrain				{ FromStorage = FrontRightBatteryStorage }

		BackRightIsOperational : FrontIsOperational		{ Toggles = [PowerToggle, BackRightBatteryStorage] }
		BackRightBatteryStorage : FrontBatteryStorage		{}
		CombinedBackRightBatteryStorage : CombinedFrontBatteryStorage	{ ResourceStorages = [BackRightBatteryStorage, ModularBatteryStorageProxy] }
		BackRightPowerDrain : FrontPowerDrain				{ FromStorage = BackRightBatteryStorage }

		BackIsOperational : FrontIsOperational				{ Toggles = [PowerToggle, BackBatteryStorage] }
		BackBatteryStorage : FrontBatteryStorage			{}
		CombinedBackBatteryStorage : CombinedFrontBatteryStorage	{ ResourceStorages = [BackBatteryStorage, ModularBatteryStorageProxy] }
		BackPowerDrain : FrontPowerDrain					{ FromStorage = BackBatteryStorage }

		BackLeftIsOperational : FrontIsOperational		{ Toggles = [PowerToggle, BackLeftBatteryStorage] }
		BackLeftBatteryStorage : FrontBatteryStorage		{}
		CombinedBackLeftBatteryStorage : CombinedFrontBatteryStorage	{ ResourceStorages = [BackLeftBatteryStorage, ModularBatteryStorageProxy] }
		BackLeftPowerDrain : FrontPowerDrain				{ FromStorage = BackLeftBatteryStorage }

		FrontLeftIsOperational : FrontIsOperational			{ Toggles = [PowerToggle, FrontLeftBatteryStorage] }
		FrontLeftBatteryStorage : FrontBatteryStorage			{}
		CombinedFrontLeftBatteryStorage : CombinedFrontBatteryStorage	{ ResourceStorages = [BackLeftBatteryStorage, ModularBatteryStorageProxy] }
		FrontLeftPowerDrain : FrontPowerDrain					{ FromStorage = FrontLeftBatteryStorage }
		
		// Ends Normal Batteries

		// Start Modular Battery
		
/* Doesn't work		
		BuffProviderTop : BuffProviderFrontLeft
		{
			Type = AreaBuffProvider
			BuffType = ModularShieldCapacity
			BuffArea = [1, -1, 2, 1]
			OperationalToggle = IsOperational
			Criteria
			{
				Right = 3
				Left = 1
			}
		}
		BuffProviderRight : BuffProviderFrontLeft
		{
			BuffArea = [4, 1, 1, 2]
			Criteria
			{
				Rot = 1
				Left = 4
				Right = 5
//				Bottom = 3 // With this it also worked
//				Top = 1
			}
		}
		BuffProviderBottom : BuffProviderFrontLeft
		{
			BuffArea = [1, 4, 2, 1]
			Criteria
			{
				Rot = 2
				Left = 1
				Right = 3
				Bottom = 5
//				Top = 4 // With this it also worked
			}
		}
		BuffProviderLeft : BuffProviderFrontLeft
		{
			BuffArea = [-1, 1, 1, 2]
			Criteria
			{
				Rot = 3
				Right = 0
				Bottom = 3
				Top = 1
			}
		}		
*/
		
		BuffProviderFrontLeft
		{
			Type = AreaBuffProvider
			BuffType = ModularShieldCapacity
			BuffArea = [0, -1, 2, 1]
			OperationalToggle = IsOperational
			Criteria
			{
				Right = 2
				Left = 0 // testing
			}
		}
		BuffProviderFrontRight : BuffProviderFrontLeft
		{
			BuffArea = [2, -1, 2, 1]
			Criteria
			{
				Left = 2
				Right = 4
			}
		}
		BuffProviderRightTop : BuffProviderFrontLeft
		{
			BuffArea = [4, 0, 1, 2]
			Criteria
			{
				Rot = 1
				Left = 4
				Right = 5
				Bottom = 2 // With this it also worked
			}
		}
		BuffProviderRightBottom : BuffProviderFrontLeft
		{
			BuffArea = [4, 2, 1, 2]
			Criteria
			{
				Rot = 1
				Left = 4
				Right = 5
				Bottom = 4
				Top = 2
			}
		}
		BuffProviderBackRight : BuffProviderFrontLeft
		{
			BuffArea = [2, 4, 2, 1]
			Criteria
			{
				Rot = 2
				Left = 2
				Right = 4
				Bottom = 5
//				Top = 4 // With this it also worked
			}
		}
		BuffProviderBackLeft : BuffProviderFrontLeft // works
		{
			BuffArea = [0, 4, 2, 1]
			Criteria
			{
				Rot = 2
				Right = 2
				Bottom = 5
			}
		}
		BuffProviderLeftBottom : BuffProviderFrontLeft
		{
			BuffArea = [-1, 2, 1, 2]
			Criteria
			{
				Rot = 3
				Right = 0
				Bottom = 4
				Top = 2
			}
		}		
		BuffProviderLeftTop : BuffProviderFrontLeft
		{
			BuffArea = [-1, 0, 1, 2]
			Criteria
			{
				Rot = 3
				Right = 0
				Bottom = 2
			}
		}
		
		IsModularToggle
		{
			Type = BuffToggle
			BuffType = ModularShieldResistanceBonus
		}
		
		IsNotModularOperational
		{
			Type = MultiToggle
			Toggles = [IsOperational, {Toggle = IsModularToggle, Invert = true}]
			Mode = All
		}
		IsModularOperationalNotOverclocked
		{
			Type = MultiToggle
			Toggles = [IsModularOperational, {Toggle = OverclockedEffectToggle, Invert = true} ]
			Mode = All
		}
		IsModularOperationalOverclocked
		{
			Type = MultiToggle
			Toggles = [IsModularOperational, OverclockedEffectToggle]
			Mode = All
		}
		
		CentralBatteryStorage // It isn't necesarely, but adding this makes the shield less buggy.
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 0
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		
		// When not overclocked
		
		ModularBatteryStorageProxy
		{
			Type = MultiResourceStorage
			OperationalToggle = IsOperational
			ResourceType = battery
			ResourceStorages = [CentralBatteryStorage]
			ViaBuffs
			{
				OutgoingBuffProviders = [BuffProviderFrontLeft, BuffProviderFrontRight, BuffProviderRightTop, BuffProviderRightBottom, BuffProviderBackRight, BuffProviderBackLeft, BuffProviderLeftBottom, BuffProviderLeftTop]
				ComponentID = BatteryStorage
//				ComponentIDs = [OuterBatteryStorage, InnerBatteryStorage]
			}
			AddMode = PrioritizeLeastResources
			RemoveMode = PrioritizeLeastResources
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		// Outer (when overclocked)
		ModularOuterBatteryStorageProxy : ModularInnerBatteryStorageProxy
		{
			ViaBuffs : ^/0/ViaBuffs { ComponentID = OuterBatteryStorage }
		}
		
		// Inner (when overclocked)
		ModularInnerBatteryStorageProxy : ModularBatteryStorageProxy
		{
			OperationalToggle = IsOperationalOverclocked
			ViaBuffs : ^/0/ViaBuffs	{ ComponentID = InnerBatteryStorage }
		}
		
		// Ends Modular Batteries

		IsOperationalProxy
		{
			Type = MultiToggle
			Toggles = [ProxyBatteryStorage]
			Mode = All
		}
		
		ProxyBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 0
			ToggleOnResources = 1
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// ARCSHIELD ORIGINAL - START //////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		ArcShield : <./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/ArcShield
		{
			Type = ArcShield
			Radius = 15
			Arc = 60d
			OperationalToggle = IsOperationalProxy
			PenetrationResistance = [ { BaseValue= 16.66; BuffType=ModularShieldResistanceBonus; BuffMode=Add; }, 0]
			DrainResourcesFrom = FrontBatteryStorage
			ResourceDrainPerDamage	//	Could be removed
			{
				BaseValue = .4
				Modifiers
				[
					{
						Type = Status
						StatusType = cosmoteer.shield_overload
						ModificationMode = Multiply
						BaseStatusValue = 1
					}
					{
						Type = BuffRemap
						BuffType = Overclock
						ModificationMode = Multiply
						RemapFrom = [0, 1]
						RemapTo = [1, &~/OVERCLOCK/DAMAGE_DRAIN_FACTOR ]
					}
				]
			}
			Rotation = -90d
			Location = [2, 2]

			ShieldMediaEffects
			[
				: <./Data/ships/terran/shield_gen_large/shield_gen_large.rules>/Part/Components/ArcShield/ShieldMediaEffects/0
				{
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
					ArcSpriteSegments = 128
				}
				: <./Data/ships/terran/shield_gen_large/shield_gen_large.rules>/Part/Components/ArcShield/ShieldMediaEffects/1	{}
			]
		}
		
		OverclockTweenToggle
		{
			Type = ThresholdToggle
			ValueFrom = OverclockStateValue
			MinAmount = 1
		}
		
		OverclockedEffectToggle
		{
			Type = MultiToggle
			Toggles = [OverclockTweenToggle, IsOperationalOverclocked]
			Mode = All
		}
		
		Overclock_BlueprintArc
		{
			Type = ArcSprite
			ChainedTo = ArcShield
			Radius = &../ArcShield/Radius
			Arc = (&../ArcShield/Arc)
			SpriteSegments = (&../ArcShield/BlueprintArcSpriteSegments)
			Sprite
			{
				Texture
				{
					File = "shield_energy_oc.png"
					UVMode = Wrap
					SampleMode = Linear
					MipLevels = 1
				}
				Size = [0, 1.5]
				Color = [255, 134, 36, 127]
			}
		}
		
		OverclockEffect
		{
			Type = ShieldArcsMimic
			Shield = ArcShield
			ChainedTo = ArcShield
			FactorMediaEffectsIntensityWith = BatteryStorage
			MimicFadeInStartTime = false
			OperationalToggle = OverclockedEffectToggle
			ContinuousEffects
			[
				{
					Type = ArcShield
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
					FadeInTime = .25
					FadeOutTime = .25
					FadeFromScale = 1.025
					ArcSprite
					{
						Texture
						{
							File = "shield_energy_oc.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = 1
						}
						Shader = "shield.shader"
						_waveTex
						{
							File = "shield_energy_wave.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_maskTex
						{
							File = "shield_mask_oc.png"
							SampleMode = Linear
							MipLevels = 1
						}
						_waveSpeed = 1
						_waveAlpha = 1
						_waveCurveInterval = .5
						_waveCurveMagnitude = .35
						_waveCurveUOffsetPerSecond = .2
						_fullPowerColor1 = [203, 80, 33, 127]
						_lowPowerColor1 = [255, 0, 0, 127]
						_fullPowerColor2 = [255, 134, 36, 255]
						_lowPowerColor2 = [255, 50, 0, 127]
						_lowPowerThicknessExponent = .6
						_xScale = 1
						_hexDamageIntensity = 0.8
						TargetBlendMode = Add
						Size = [0, 1.5]
					}
					ArcSpriteSegments = 64
					Bucket = Lower1
				}
			]
		}
        
		OverloadValue
		{
			Type = BuffableValue
			Value
			{
				BaseValue = 0
				Modifiers
				[
					{
						Type = Status
						StatusType = cosmoteer.shield_overload
						ModificationMode = Replace
						BaseStatusValue = 0
					}
				]
			}
		}
		
		IsOverloaded
		{
			Type = ThresholdToggle
			ValueFrom = OverloadValue
			MinAmount = 0.01
		}
		
		
		IsOperationalOverloaded
		{
			Type = MultiToggle
			Toggles = [ IsOperational, IsOverloaded ]
			Mode = All
		}
		
		IsOperationalOverclockedOverloaded
		{
			Type = MultiToggle
			Toggles = [ IsOperational, IsOverloaded, OverclockedEffectToggle ]
			Mode = All
		}
		
		OverloadEffect
		{
			Type = ShieldArcsMimic
			Shield = ArcShield
			ChainedTo = ArcShield
			FactorMediaEffectsIntensityWith = BatteryStorage
			FactorRedVertexColorWith = OverloadValue
			OperationalToggle = IsOperationalOverloaded
			ContinuousEffects
			[
				{
					Type = ArcShield
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
					FadeInTime = 0.5
					FadeOutTime = 0.5
					FadeFromScale = .8
					ArcAngleAffectsUVs = true
					UPerNinetyDegrees = 1
					ArcSprite
					{
						Texture
						{
							File = "shield_overload.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = 1
						}
						Shader = "shield_overload.shader"
						_noiseTex1
						{
							File = "./Data/statuses/fire/particles/fire_noise.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_noiseTex2
						{
							File = "./Data/statuses/fire/particles/fire_noise.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_baseShieldTex
						{
							File = shield_mask.png
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = 1
						}
						_waveSpeed = 1
						_waveAlpha = 1
						_waveCurveInterval = .5
						_waveCurveMagnitude = .35
						_waveCurveUOffsetPerSecond = .2
						
						_color1 = [255, 0, 255 * 0.31, 0]
						_color2 = [255, 255 * 0.41, 0, 0]
						_maxGreen = 0.9
						
						_xScale = 1
						_gradientXWidth = 1.05
						_hexDamageIntensity = 0.8
						TargetBlendMode = Add
						Size = [0, 1.5]
					}
					ArcSpriteSegments = 64
					Bucket = Lower1
				}
			]
		}
		
		OverclockOverloadEffect
		{
			Type = ShieldArcsMimic
			Shield = ArcShield
			ChainedTo = ArcShield
			FactorMediaEffectsIntensityWith = BatteryStorage
			FactorRedVertexColorWith = OverloadValue
			OperationalToggle = IsOperationalOverclockedOverloaded
			ContinuousEffects
			[
				{
					Type = ArcShield
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
					FadeInTime = .25
					FadeOutTime = .25
					FadeFromScale = 1.025
					ArcSprite
					{
						Texture
						{
							File = "shield_overload_oc.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = 1
						}
						Shader = "shield_overload.shader"
						_noiseTex1
						{
							File = "./Data/statuses/fire/particles/fire_noise.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_noiseTex2
						{
							File = "./Data/statuses/fire/particles/fire_noise.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_baseShieldTex
						{
							File = shield_mask_oc.png
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = 1
						}
						_waveSpeed = 1
						_waveAlpha = 1
						_waveCurveInterval = .5
						_waveCurveMagnitude = .35
						_waveCurveUOffsetPerSecond = .2
						
						_color1 = [255, 0, 255 * 0.31, 0]
						_color2 = [255, 255 * 0.41, 0, 0]
						_maxGreen = 0.9
						
						_xScale = 1
						_hexDamageIntensity = 0.8
						TargetBlendMode = Add
						Size = [0, 1.5]
					}
					ArcSpriteSegments = 64
					Bucket = Lower1
				}
			]
		}

		// Overclock / Thermal network
		OverclockHeatProducer
		{
			Type = ResourceConverter
			OperationalToggle = IsOperationalOverclocked
			HEAT_PER_INTERVAL = ceil((&~/OVERCLOCK/HEAT_PER_SECOND) * (&Interval))
			ToQuantity = (&HEAT_PER_INTERVAL) * (&~/HEAT_TO_RESOURCE)
			ToStorage = &~/Part/^/0/HEAT_TARGET_STORAGE
			Interval = 0.5
		}
		OverclockHitHeatProducer
		{
			Type = ResourceChange
			ResourceStorage = &~/Part/^/0/HEAT_TARGET_STORAGE
			// Provides the post-resistance damage value as EffectScale
			Trigger = Overclock_ArcShieldProxy
			Amount
			{
				BaseValue = "round((&~/OVERCLOCK/HEAT_PER_DAMAGE) * (&~/HEAT_TO_RESOURCE), 0)"
				Modifiers
				[
					{
						Type = EffectScale
						ModificationMode = Multiply
					}
					{
						Type = Status
						StatusType = cosmoteer.shield_overload
						ModificationMode = Multiply
						BaseStatusValue = 1
					}
					{
						Type = Buff
						BuffType = Overclock
						ModificationMode = Multiply
					}
				]
			}
		}
		
		Overclock_ArcShieldProxy
		{
			Type = MultiTrigger
			Triggers = [Overclock_ArcShieldInnerFrontProxy, Overclock_ArcShieldInnerFrontRightProxy, Overclock_ArcShieldInnerBackRightProxy, Overclock_ArcShieldInnerBackProxy, Overclock_ArcShieldInnerBackLeftProxy, Overclock_ArcShieldInnerFrontLeftProxy, Overclock_ArcShieldOuterFrontRightProxy, Overclock_ArcShieldOuterRightProxy, Overclock_ArcShieldOuterBackRightProxy, Overclock_ArcShieldOuterBackLeftProxy, Overclock_ArcShieldOuterLeftProxy, Overclock_ArcShieldOuterFrontLeftProxy]
		}
		
		Overclock_ArcShieldInnerFrontProxy
		{
			Type = TriggerProxy
			ComponentID = ArcShield_InnerFront
			ProxyToggle = IsOperationalOverclocked
		}
		Overclock_ArcShieldInnerFrontRightProxy
		{
			Type = TriggerProxy
			ComponentID = ArcShield_InnerFrontRight
			ProxyToggle = IsOperationalOverclocked
		}
		Overclock_ArcShieldInnerBackRightProxy
		{
			Type = TriggerProxy
			ComponentID = ArcShield_InnerBackRight
			ProxyToggle = IsOperationalOverclocked
		}
		Overclock_ArcShieldInnerBackProxy
		{
			Type = TriggerProxy
			ComponentID = ArcShield_InnerBack
			ProxyToggle = IsOperationalOverclocked
		}
		Overclock_ArcShieldInnerBackLeftProxy
		{
			Type = TriggerProxy
			ComponentID = ArcShield_BackLeft
			ProxyToggle = IsOperationalOverclocked
		}
		Overclock_ArcShieldInnerFrontLeftProxy
		{
			Type = TriggerProxy
			ComponentID = ArcShield_FrontLeft
			ProxyToggle = IsOperationalOverclocked
		}
		
		Overclock_ArcShieldOuterFrontRightProxy
		{
			Type = TriggerProxy
			ComponentID = ArcShield_OuterFrontRight
			ProxyToggle = IsOperationalOverclocked
		}
		Overclock_ArcShieldOuterRightProxy
		{
			Type = TriggerProxy
			ComponentID = ArcShield_OuterRight
			ProxyToggle = IsOperationalOverclocked
		}
		Overclock_ArcShieldOuterBackRightProxy
		{
			Type = TriggerProxy
			ComponentID = ArcShield_OuterBackRight
			ProxyToggle = IsOperationalOverclocked
		}
		Overclock_ArcShieldOuterBackLeftProxy
		{
			Type = TriggerProxy
			ComponentID = ArcShield_OuterBackLeft
			ProxyToggle = IsOperationalOverclocked
		}
		Overclock_ArcShieldOuterLeftProxy
		{
			Type = TriggerProxy
			ComponentID = ArcShield_OuterLeft
			ProxyToggle = IsOperationalOverclocked
		}
		Overclock_ArcShieldOuterFrontLeftProxy
		{
			Type = TriggerProxy
			ComponentID = ArcShield_OuterFrontLeft
			ProxyToggle = IsOperationalOverclocked
		}
		
		OverheatEffects : ^/0/OverheatEffects
		{
			Location = [1, 1.5]
		}
		
		ShieldHeatCollectionStorage
		{
			Type = ResourceStorageProxy
			ResourceType = heat
			ComponentID = &~/Part/^/0/HEAT_TARGET_STORAGE
//			QuantityScale = 1 / (&~/OVERCLOCK/COLLECTED_HEAT_MULTIPLIER)
		}
		
		Overclock_HeatCollectionBuffProvider
		{
		
			Type = GridBuffProvider
			BuffType = ShieldHeatCollection
			GridDistance = 1
			OperationalToggle = IsOperationalOverclocked
		}
		
		Router
		{
			Type = NetworkRouter
			RouteGenerators
			[
				{
					Type = Simple
					HEAT_INPUT = &~/Part/^/0/HEAT_NETWORK_INPUT
					Routes
					[
						[&../../HEAT_INPUT, Port_TL, 0]
						[&../../HEAT_INPUT, Port_TR, 0]
						[&../../HEAT_INPUT, Port_RT, 0]
						[&../../HEAT_INPUT, Port_RB, 0]
						[&../../HEAT_INPUT, Port_BR, 0]
						[&../../HEAT_INPUT, Port_BL, 0]
						[&../../HEAT_INPUT, Port_LB, 0]
						[&../../HEAT_INPUT, Port_LT, 0]
					]
				}
			]
		}
		Port_TL : ~/Part/^/0/BASE_THERMAL_PORT
		{
			Location = [1, 0]
			Direction = Up
		}
		Port_TR : Port_TL
		{
			Location = [2, 0]
		}
		Port_RT : Port_TL
		{
			Location = [3, 1]
			Direction = Right
		}
		Port_RB : Port_RT
		{
			Location = [3, 2]
		}
		Port_BR : Port_TL
		{
			Location = [2, 3]
			Direction = Down
		}
		Port_BL : Port_BR
		{
			Location = [1, 3]
		}
		Port_LB : Port_TL
		{
			Location = [0, 2]
			Direction = Left
		}
		Port_LT : Port_LB
		{
			Location = [0, 1]
		}

		EmitterEffect
		{
			Type = ContinuousEffects
			ChainedTo = ArcShield
			FactorMediaEffectsIntensityWith = CombinedBatteryStorage
			MaxMediaEffectsZoom = 12
			Location = [2.4, 0]
			OperationalToggle = IsOperationalProxy
			ParentToShip = true
			MediaEffects
			[
				: <./Data/ships/terran/shield_gen_large/shield_gen_large.rules>/Part/Components/EmitterEffect/MediaEffects/0
				{
					Radius = 2.4
					Arc = 360d
					ArcSprite : ^/0/ArcSprite	 { }
					Bucket = Upper1
				}
				: <./Data/ships/terran/shield_gen_large/shield_gen_large.rules>/Part/Components/EmitterEffect/MediaEffects/1	{}
			]
		}

		ShieldOperationEffects_Front : <./Data/ships/terran/shield_gen_large/shield_gen_large.rules>/Part/Components/ShieldOperationEffects
		{
			Location = [&~/Part/Components/ArcShield/Radius, 0]
			Toggle = FrontIsOperational
		}
		ShieldOperationEffects_FrontRight : ShieldOperationEffects_Front		{ Toggle = FrontRightIsOperational }
		ShieldOperationEffects_BackRight : ShieldOperationEffects_Front	{ Toggle = BackRightIsOperational }
		ShieldOperationEffects_Back : ShieldOperationEffects_Front			{ Toggle = BackIsOperational }
		ShieldOperationEffects_BackLeft : ShieldOperationEffects_Front	{ Toggle = BackLeftIsOperational }
		ShieldOperationEffects_FrontLeft : ShieldOperationEffects_Front		{ Toggle = FrontLeftIsOperational }
		
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// ARCSHIELD ORIGINAL - END ////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
	
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD PURPLE START --------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------



		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD PURPLE END ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD BLUE START ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------

		ToggleComponents_Blue_0_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_0_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Purple_0_On/Components 
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Blue/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Blue/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
				STS_EmitterEffect : ^/0/STS_EmitterEffect
				{
					OperationalToggle = IsOperational
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Blue/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/MediaEffects/1	{}
					]
				}
			}
		}

		ToggleComponents_Blue_0_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_0_Off
			IncludeInBlueprints = false
			Components =
			{ 
				ArcShield_Front : &../../ToggleComponents_Blue_0_On/Components/ArcShield_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Blue/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Blue_1_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_1_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Blue_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius1
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Blue_1_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_1_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Blue_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius1
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Blue_2_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_2_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Blue_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius2
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Blue_2_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_2_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Blue_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius2
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Blue_3_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_3_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Blue_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius3
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Blue_3_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_3_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Blue_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius3
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Blue_4_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_4_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Blue_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius4
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Blue_4_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_4_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Blue_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius4
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Blue_5_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_5_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Blue_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius5
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Blue_5_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_5_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Blue_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius5
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}
		ToggleComponents_Blue_6_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_6_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Blue_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius6
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Blue_6_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_6_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Blue_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius6
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Blue_7_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_7_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Blue_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius7
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Blue_7_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_7_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Blue_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius7
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD BLUE END ------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD ORANGE START --------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Orange_0_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_0_On
			//IncludeInOrangeprints = true
			Components : &../ToggleComponents_Purple_0_On/Components
			{ 
				ArcShield_Front : ^/0/ArcShield_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Orange/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Orange/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
				STS_EmitterEffect : ^/0/STS_EmitterEffect
				{
					OperationalToggle = IsOperational
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Orange/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/MediaEffects/1	{}
					]
				}
			}
		}

		ToggleComponents_Orange_0_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_0_Off
			//IncludeInOrangeprints = true
			Components : &../ToggleComponents_Orange_0_On/Components
			{
				ArcShield_Front : &../../ToggleComponents_Orange_0_On/Components/ArcShield_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Orange/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Orange_1_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_1_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Orange_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius1
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Orange_1_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_1_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Orange_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius1
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Orange_2_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_2_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Orange_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius2
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Orange_2_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_2_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Orange_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius2
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Orange_3_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_3_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Orange_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius3
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Orange_3_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_3_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Orange_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius3
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Orange_4_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_4_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Orange_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius4
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Orange_4_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_4_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Orange_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius4
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Orange_5_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_5_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Orange_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius5
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Orange_5_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_5_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Orange_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius5
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Orange_6_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_6_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Orange_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius6
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Orange_6_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_6_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Orange_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius6
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Orange_7_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_7_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Orange_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius7
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Orange_7_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_7_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Orange_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius7
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD ORANGE END ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD RED START -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Red_0_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_0_On
			//IncludeInRedprints = true
			Components : &../ToggleComponents_Purple_0_On/Components
			{ 
				ArcShield_Front : ^/0/ArcShield_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Red/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Red/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
				STS_EmitterEffect : ^/0/STS_EmitterEffect
				{
					OperationalToggle = IsOperational
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Red/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/MediaEffects/1	{}
					]
				}
			}
		}

		ToggleComponents_Red_0_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_0_Off
			//IncludeInRedprints = true
			Components =
			{ 
				ArcShield_Front : &../../ToggleComponents_Red_0_On/Components/ArcShield_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Red/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Red_1_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_1_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Red_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius1
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Red_1_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_1_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Red_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius1
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Red_2_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_2_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Red_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius2
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Red_2_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_2_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Red_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius2
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Red_3_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_3_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Red_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius3
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Red_3_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_3_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Red_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius3
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Red_4_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_4_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Red_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius4
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Red_4_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_4_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Red_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius4
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Red_5_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_5_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Red_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius5
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Red_5_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_5_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Red_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius5
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Red_6_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_6_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Red_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius6
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Red_6_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_6_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Red_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius6
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Red_7_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_7_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Red_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius7
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Red_7_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_7_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Red_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius7
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD RED END -------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD YELLOW START --------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Yellow_0_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_0_On
			//IncludeInYellowprints = true
			Components : &../ToggleComponents_Purple_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Yellow/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Yellow/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
				STS_EmitterEffect : ^/0/STS_EmitterEffect
				{
					OperationalToggle = IsOperational
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Yellow/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/MediaEffects/1	{}
					]
				}
			}
		}

		ToggleComponents_Yellow_0_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_0_Off
			//IncludeInYellowprints = true
			Components =
			{ 
				ArcShield_Front : &../../ToggleComponents_Yellow_0_On/Components/ArcShield_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Yellow/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Yellow_1_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_1_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Yellow_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius1
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Yellow_1_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_1_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Yellow_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius1
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Yellow_2_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_2_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Yellow_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius2
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Yellow_2_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_2_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Yellow_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius2
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Yellow_3_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_3_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Yellow_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius3
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Yellow_3_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_3_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Yellow_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius3
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Yellow_4_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_4_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Yellow_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius4
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Yellow_4_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_4_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Yellow_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius4
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Yellow_5_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_5_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Yellow_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius5
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Yellow_5_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_5_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Yellow_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius5
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Yellow_6_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_6_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Yellow_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius6
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Yellow_6_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_6_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Yellow_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius6
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Yellow_7_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_7_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Yellow_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius7
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Yellow_7_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_7_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Yellow_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius7
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD YELLOW END ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD GREEN START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Green_0_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_0_On
			//IncludeInGreenprints = true
			Components : &../ToggleComponents_Purple_0_On/Components
			{ 
				ArcShield_Front : ^/0/ArcShield_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Green/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Green/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
				STS_EmitterEffect : ^/0/STS_EmitterEffect
				{
					OperationalToggle = IsOperational
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Green/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/MediaEffects/1	{}
					]
				}
			}
		}

		ToggleComponents_Green_0_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_0_Off
			//IncludeInGreenprints = true
			Components =
			{ 
				ArcShield_Front : &../../ToggleComponents_Green_0_On/Components/ArcShield_Front
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Green/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front	{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front	{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front	{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Green_1_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_1_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Green_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius1
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Green_1_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_1_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Green_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius1
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Green_2_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_2_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Green_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius2
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Green_2_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_2_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Green_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius2
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Green_3_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_3_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Green_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius3
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Green_3_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_3_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Green_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius3
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Green_4_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_4_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Green_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius4
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Green_4_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_4_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Green_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius4
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Green_5_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_5_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Green_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius5
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Green_5_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_5_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Green_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius5
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Green_6_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_6_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Green_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius6
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Green_6_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_6_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Green_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius6
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Green_7_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_7_On
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Green_0_On/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius7
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		ToggleComponents_Green_7_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_7_Off
			IncludeInBlueprints = false
			Components : &../ToggleComponents_Green_0_Off/Components
			{
				ArcShield_Front : ^/0/ArcShield_Front
				{
					Radius = &~/Stats/Radius7
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0 { Radius = &../../Radius }
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
				ArcShield_FrontRight : ~/Stats/ArcShield_FrontRight, ArcShield_Front		{}
				ArcShield_BackRight : ~/Stats/ArcShield_BackRight, ArcShield_Front	{}
				ArcShield_Back : ~/Stats/ArcShield_Back, ArcShield_Front				{}
				ArcShield_FrontLeft : ~/Stats/ArcShield_FrontLeft, ArcShield_Front			{}
				ArcShield_BackLeft : ~/Stats/ArcShield_BackLeft, ArcShield_Front	{}
			}
		}

		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD GREEN END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		Shield_Doodad_Graphics
		{
			Type = Graphics
			Location = [2, 2]
			OperationalToggle = IsOperational
			OperationalDoodad
			{
				Layer = "doodads_high"
				//Offset = [0, 0]
				DamageLevels
				[
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [2, 2]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe_RotSpeed_0DMG
					}
					{
						File = "doodad_axe_33.png"
						NormalsFile = "doodad_axe_normals_33.png"
						Size = [2, 2]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe_RotSpeed_33DMG
					}
					{
						File = "doodad_axe_66.png"
						NormalsFile = "doodad_axe_normals_66.png"
						Size = [2, 2]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe_RotSpeed_66DMG
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [2, 2]
					}
					{
						File = "doodad_axe_33.png"
						NormalsFile = "doodad_axe_normals_33.png"
						Size = [2, 2]
					}
					{
						File = "doodad_axe_66.png"
						NormalsFile = "doodad_axe_normals_66.png"
						Size = [2, 2]
					}
				]
			}
		}
		
		Shield_Doodad_Graphics_2
		{
			Type = Graphics
			Location = [2, 2]
			OperationalToggle = IsOperational
			OperationalDoodad
			{
				Layer = "doodads_high"
				//Offset = [0, 0]
				DamageLevels
				[
					{
						File = "doodad_big_axe.png"
						NormalsFile = "doodad_big_axe_normals.png"
						Size = [3, 3]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe2_RotSpeed_0DMG
					}
					{
						File = "doodad_big_axe_33.png"
						NormalsFile = "doodad_big_axe_normals_33.png"
						Size = [3, 3]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe2_RotSpeed_33DMG
					}
					{
						File = "doodad_big_axe_66.png"
						NormalsFile = "doodad_big_axe_normals_66.png"
						Size = [3, 3]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe2_RotSpeed_66DMG
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodad_big_axe.png"
						NormalsFile = "doodad_big_axe_normals.png"
						Size = [3, 3]
					}
					{
						File = "doodad_big_axe_33.png"
						NormalsFile = "doodad_big_axe_normals_33.png"
						Size = [3, 3]
					}
					{
						File = "doodad_big_axe_66.png"
						NormalsFile = "doodad_big_axe_normals_66.png"
						Size = [3, 3]
					}
				]
			}
		}

		Graphics
		{
			Type = Graphics
			Location = [2, 2]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [4, 4]
					}
					{
						File = "floor_33.png"
						Size = [4, 4]
					}
					{
						File = "floor_66.png"
						Size = [4, 4]
					}
				]
			}
			
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [4, 4]
					}
					{
						File = "walls_33.png"
						Size = [4, 4]
					}
					{
						File = "walls_66.png"
						Size = [4, 4]
					}
				]
			}
			
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [4, 4]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [4, 4]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [4, 4]
					}
				]
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS PURPLE START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_Graphics_Purple
		{
			Type = ToggledComponents
			Toggle = ToggleColours_Purple
			IncludeInBlueprints = false
			Components = 
			{
				K_Graphics_Purple : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"purple/doodads_lightning1.png"
									"purple/doodads_lightning2.png"
									"purple/doodads_lightning3.png"
									"purple/doodads_lightning4.png"
									"purple/doodads_lightning5.png"
									"purple/doodads_lightning6.png"
									"purple/doodads_lightning7.png"
									"purple/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"purple/doodads_lightning1.png"
									"purple/doodads_lightning2.png"
									"purple/doodads_lightning3.png"
									"purple/doodads_lightning4.png"
									"purple/doodads_lightning5.png"
									"purple/doodads_lightning6.png"
									"purple/doodads_lightning7.png"
									"purple/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"purple/doodads_lightning1.png"
									"purple/doodads_lightning2.png"
									"purple/doodads_lightning3.png"
									"purple/doodads_lightning4.png"
									"purple/doodads_lightning5.png"
									"purple/doodads_lightning6.png"
									"purple/doodads_lightning7.png"
									"purple/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "purple/lights.png"
								Size = [4, 4]
							}
						]
					}
					
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [3, 3]
								Z = 1
								VertexColor = [195*1.5, 60*1.5, 255*1.5, 100]
							}
						]
					}
				}
			}
		}
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS PURPLE END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS BLUE START -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_Graphics_Blue
		{
			Type = ToggledComponents
			Toggle = ToggleColours_Blue
			IncludeInBlueprints = false
			Components = 
			{
				K_Graphics_Blue : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"blue/doodads_lightning1.png"
									"blue/doodads_lightning2.png"
									"blue/doodads_lightning3.png"
									"blue/doodads_lightning4.png"
									"blue/doodads_lightning5.png"
									"blue/doodads_lightning6.png"
									"blue/doodads_lightning7.png"
									"blue/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"blue/doodads_lightning1.png"
									"blue/doodads_lightning2.png"
									"blue/doodads_lightning3.png"
									"blue/doodads_lightning4.png"
									"blue/doodads_lightning5.png"
									"blue/doodads_lightning6.png"
									"blue/doodads_lightning7.png"
									"blue/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"blue/doodads_lightning1.png"
									"blue/doodads_lightning2.png"
									"blue/doodads_lightning3.png"
									"blue/doodads_lightning4.png"
									"blue/doodads_lightning5.png"
									"blue/doodads_lightning6.png"
									"blue/doodads_lightning7.png"
									"blue/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "blue/lights.png"
								Size = [4, 4]
							}
						]
					}
					
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [3, 3]
								Z = 1
								VertexColor = [0, 0, 255*1.5, 100]
							}
						]
					}
				}
			}
		}
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS BLUE END -------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS ORANGE START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_Graphics_Orange
		{
			Type = ToggledComponents
			Toggle = ToggleColours_Orange
			//IncludeInorangeprints = true
			Components = 
			{
				K_Graphics_Orange : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"orange/doodads_lightning1.png"
									"orange/doodads_lightning2.png"
									"orange/doodads_lightning3.png"
									"orange/doodads_lightning4.png"
									"orange/doodads_lightning5.png"
									"orange/doodads_lightning6.png"
									"orange/doodads_lightning7.png"
									"orange/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"orange/doodads_lightning1.png"
									"orange/doodads_lightning2.png"
									"orange/doodads_lightning3.png"
									"orange/doodads_lightning4.png"
									"orange/doodads_lightning5.png"
									"orange/doodads_lightning6.png"
									"orange/doodads_lightning7.png"
									"orange/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"orange/doodads_lightning1.png"
									"orange/doodads_lightning2.png"
									"orange/doodads_lightning3.png"
									"orange/doodads_lightning4.png"
									"orange/doodads_lightning5.png"
									"orange/doodads_lightning6.png"
									"orange/doodads_lightning7.png"
									"orange/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "orange/lights.png"
								Size = [4, 4]
							}
						]
					}
					
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [3, 3]
								Z = 1
								VertexColor = [255*1.5, 150*1.5, 0, 100]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS ORANGE END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS RED START ------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_Graphics_Red
		{
			Type = ToggledComponents
			Toggle = ToggleColours_Red
			//IncludeInredprints = true
			Components = 
			{
				K_Graphics_Red : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"red/doodads_lightning1.png"
									"red/doodads_lightning2.png"
									"red/doodads_lightning3.png"
									"red/doodads_lightning4.png"
									"red/doodads_lightning5.png"
									"red/doodads_lightning6.png"
									"red/doodads_lightning7.png"
									"red/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"red/doodads_lightning1.png"
									"red/doodads_lightning2.png"
									"red/doodads_lightning3.png"
									"red/doodads_lightning4.png"
									"red/doodads_lightning5.png"
									"red/doodads_lightning6.png"
									"red/doodads_lightning7.png"
									"red/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"red/doodads_lightning1.png"
									"red/doodads_lightning2.png"
									"red/doodads_lightning3.png"
									"red/doodads_lightning4.png"
									"red/doodads_lightning5.png"
									"red/doodads_lightning6.png"
									"red/doodads_lightning7.png"
									"red/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "red/lights.png"
								Size = [4, 4]
							}
						]
					}
					
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [3, 3]
								Z = 1
								VertexColor = [255*1.5, 0, 0, 100]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS RED END --------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS YELLOW START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_Graphics_Yellow
		{
			Type = ToggledComponents
			Toggle = ToggleColours_Yellow
			//IncludeInYellowprints = true
			Components = 
			{
				K_Graphics_Yellow : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"Yellow/doodads_lightning1.png"
									"Yellow/doodads_lightning2.png"
									"Yellow/doodads_lightning3.png"
									"Yellow/doodads_lightning4.png"
									"Yellow/doodads_lightning5.png"
									"Yellow/doodads_lightning6.png"
									"Yellow/doodads_lightning7.png"
									"Yellow/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"Yellow/doodads_lightning1.png"
									"Yellow/doodads_lightning2.png"
									"Yellow/doodads_lightning3.png"
									"Yellow/doodads_lightning4.png"
									"Yellow/doodads_lightning5.png"
									"Yellow/doodads_lightning6.png"
									"Yellow/doodads_lightning7.png"
									"Yellow/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"Yellow/doodads_lightning1.png"
									"Yellow/doodads_lightning2.png"
									"Yellow/doodads_lightning3.png"
									"Yellow/doodads_lightning4.png"
									"Yellow/doodads_lightning5.png"
									"Yellow/doodads_lightning6.png"
									"Yellow/doodads_lightning7.png"
									"Yellow/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "Yellow/lights.png"
								Size = [4, 4]
							}
						]
					}
					
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [3, 3]
								Z = 1
								VertexColor = [255*1.5, 255*1.5, 0, 100]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS YELLOW END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS GREEN START ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_STL_Graphics_Green
		{
			Type = ToggledComponents
			Toggle = ToggleColours_Green
			//IncludeInGreenprints = true
			Components = 
			{
				K_Graphics_Green : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"green/doodads_lightning1.png"
									"green/doodads_lightning2.png"
									"green/doodads_lightning3.png"
									"green/doodads_lightning4.png"
									"green/doodads_lightning5.png"
									"green/doodads_lightning6.png"
									"green/doodads_lightning7.png"
									"green/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"green/doodads_lightning1.png"
									"green/doodads_lightning2.png"
									"green/doodads_lightning3.png"
									"green/doodads_lightning4.png"
									"green/doodads_lightning5.png"
									"green/doodads_lightning6.png"
									"green/doodads_lightning7.png"
									"green/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"green/doodads_lightning1.png"
									"green/doodads_lightning2.png"
									"green/doodads_lightning3.png"
									"green/doodads_lightning4.png"
									"green/doodads_lightning5.png"
									"green/doodads_lightning6.png"
									"green/doodads_lightning7.png"
									"green/doodads_lightning8.png"
								]
								Size = [1, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "green/lights.png"
								Size = [4, 4]
							}
						]
					}
					
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "./Data/ships/common/light_blob.png"
								Size = [3, 3]
								Z = 1
								VertexColor = [0, 255*1.5, 0, 100]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS GREEN END ------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		BatterySprites
		{
			Type = ResourceSprites
			Location = [2, 2]
			ResourceStorage = CombinedBatteryStorage
			Layer = "doodads_low"
			ResourceLevels
			[
				{
					File = "batteries1.png"
					Size = [4, 4]
				}
				{
					File = "batteries2.png"
					Size = [4, 4]
				}
				{
					File = "batteries3.png"
					Size = [4, 4]
				}
				{
					File = "batteries4.png"
					Size = [4, 4]
				}
				{
					File = "batteries5.png"
					Size = [4, 4]
				}
				{
					File = "batteries6.png"
					Size = [4, 4]
				}
				{
					File = "batteries7.png"
					Size = [4, 4]
				}
				{
					File = "batteries8.png"
					Size = [4, 4]
				}
				{
					File = "batteries9.png"
					Size = [4, 4]
				}
				{
					File = "batteries10.png"
					Size = [4, 4]
				}
				{
					File = "batteries11.png"
					Size = [4, 4]
				}
				{
					File = "batteries12.png"
					Size = [4, 4]
				}
				{
					File = "batteries13.png"
					Size = [4, 4]
				}
				{
					File = "batteries14.png"
					Size = [4, 4]
				}
				{
					File = "batteries15.png"
					Size = [4, 4]
				}
				{
					File = "batteries16.png"
					Size = [4, 4]
				}
				{
					File = "batteries17.png"
					Size = [4, 4]
				}
				{
					File = "batteries18.png"
					Size = [4, 4]
				}
				{
					File = "batteries19.png"
					Size = [4, 4]
				}
				{
					File = "batteries20.png"
					Size = [4, 4]
				}
				{
					File = "batteries21.png"
					Size = [4, 4]
				}
				{
					File = "batteries22.png"
					Size = [4, 4]
				}
				{
					File = "batteries23.png"
					Size = [4, 4]
				}
				{
					File = "batteries24.png"
					Size = [4, 4]
				}
			]
		}
				
		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [2, 2]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [2, 2]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage // ModularCombinedBatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [4, 4]
		}
	}

	Stats
	{
		ShieldPenResist = &~/Part/Components/ArcShield/PenetrationResistance/0/BaseValue
		ShieldDist = (&~/Part/Components/ArcShield/Radius) - (&~/Part/Components/ArcShield/Location/1)
		ShieldSegments = 6
		ShieldHPSegment = (&~/Part/Components/FrontBatteryStorage/MaxResources) / (&~/Part/Components/ArcShield/ResourceDrainPerDamage)
		PowerUsageContinuous = (&~/Part/Components/FrontPowerDrain/FromQuantity) / (&~/Part/Components/FrontPowerDrain/Interval) / 1000 * (&ShieldSegments)
		SegmentCapacity = (&~/Part/Components/FrontBatteryStorage/MaxResources) / 1000
		PowerCapacity = (&SegmentCapacity) * (&ShieldSegments)

		RecPower = (&PowerUsageContinuous) + 0.5
		RecCrew = (&RecPower) * 4
	}
	
	StatsNotesKey = "Stats/BubbleNotes"
}

