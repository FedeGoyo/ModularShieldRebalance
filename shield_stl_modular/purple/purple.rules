Components
{
	// -------------------------------------------------------------------------------------------------------------------------
	// TOGGLE START ------------------------------------------------------------------------------------------------------------
	// -------------------------------------------------------------------------------------------------------------------------

	Toggle_Purple_On
	{
		Type = MultiToggle
		Toggles = [ToggleColour_Purple, ToggleDisplay_On]
		Mode = All
	}
	Toggle_Purple_Off : Toggle_Purple_On	{ Toggles = [ToggleColour_Purple, ToggleDisplay_Off, ColoursProxy, DisplayProxy] }

	// -------------------------------------------------------------------------------------------------------------------------
	// ARCSHIELD START ---------------------------------------------------------------------------------------------------------
	// -------------------------------------------------------------------------------------------------------------------------
	
	ToggleComponents_Shield_Purple_On
	{
		Type = ToggledComponents
		Toggle = Toggle_Purple_On
		Components = 
		{
			// When not overclocked
			ArcShield_InnerFront :		<../stats.rules>/Stats/ArcShield_InnerFront, &<../shield_stl_modular.rules>/Part/Components/ArcShield
			{
				ShieldMediaEffects
				[
					: &../^/1/ShieldMediaEffects/0
					{
						Radius = &../../Radius
						ArcSprite : &<../../colors.rules>/Color/Purple/ShieldMediaEffect_On, ^/0/ArcSprite	{}
					}
					: &../^/1/ShieldMediaEffects/1 {}
				]
				HitMediaEffects
				[
					: &../^/1/HitMediaEffects/0
					{
						ArcSprite : &<../../colors.rules>/Color/Purple/HitMediaEffects, ^/0/ArcSprite	{}
					}
					: &../^/1/HitMediaEffects/1 {}
				]
			}
			ArcShield_InnerFrontRight :	<../stats.rules>/Stats/ArcShield_InnerFrontRight, ArcShield_InnerFront	{}
			ArcShield_InnerBackRight :	<../stats.rules>/Stats/ArcShield_InnerBackRight, ArcShield_InnerFront	{}
			ArcShield_InnerBack :		<../stats.rules>/Stats/ArcShield_InnerBack, ArcShield_InnerFront		{}
			ArcShield_InnerBackLeft :	<../stats.rules>/Stats/ArcShield_InnerBackLeft, ArcShield_InnerFront	{}
			ArcShield_InnerFrontLeft :	<../stats.rules>/Stats/ArcShield_InnerFrontLeft, ArcShield_InnerFront	{}
			
			OverloadEffect_InnerFront :			<../stats.rules>/Stats/OverloadEffect_InnerFront, &<../shield_stl_modular.rules>/Part/Components/OverloadEffect
			{
				ContinuousEffects [ : &../^/1/ContinuousEffects/0 { Radius = &../../../ArcShield_InnerFront/Radius } ]
			}
			OverloadEffect_InnerFrontRight :	<../stats.rules>/Stats/OverloadEffect_InnerFrontRight, OverloadEffect_InnerFront	{}
			OverloadEffect_InnerBackRight :		<../stats.rules>/Stats/OverloadEffect_InnerBackRight, OverloadEffect_InnerFront		{}
			OverloadEffect_InnerBack :			<../stats.rules>/Stats/OverloadEffect_InnerBack, OverloadEffect_InnerFront			{}
			OverloadEffect_InnerBackLeft :		<../stats.rules>/Stats/OverloadEffect_InnerBackLeft, OverloadEffect_InnerFront		{}
			OverloadEffect_InnerFrontLeft :		<../stats.rules>/Stats/OverloadEffect_InnerFrontLeft, OverloadEffect_InnerFront		{}

			OverclockEffect_InnerFront :		<../stats.rules>/Stats/OverclockEffect_InnerFront, &<../shield_stl_modular.rules>/Part/Components/OverclockEffect
			{
				ContinuousEffects [ : &../^/1/ContinuousEffects/0 { Radius = &../../../ArcShield_InnerFront/Radius } ]
			}
			OverclockEffect_InnerFrontRight :	<../stats.rules>/Stats/OverclockEffect_InnerFrontRight, OverclockEffect_InnerFront	{}
			OverclockEffect_InnerBackRight :	<../stats.rules>/Stats/OverclockEffect_InnerBackRight, OverclockEffect_InnerFront	{}
			OverclockEffect_InnerBack :			<../stats.rules>/Stats/OverclockEffect_InnerBack, OverclockEffect_InnerFront		{}
			OverclockEffect_InnerBackLeft :		<../stats.rules>/Stats/OverclockEffect_InnerBackLeft, OverclockEffect_InnerFront	{}
			OverclockEffect_InnerFrontLeft :	<../stats.rules>/Stats/OverclockEffect_InnerFrontLeft, OverclockEffect_InnerFront	{}
			
			OverclockOverloadEffect_InnerFront :		<../stats.rules>/Stats/OverclockOverloadEffect_InnerFront, &<../shield_stl_modular.rules>/Part/Components/OverclockOverloadEffect
			{
				ContinuousEffects [ : &../^/1/ContinuousEffects/0 { Radius = &../../../ArcShield_InnerFront/Radius } ]
			}
			OverclockOverloadEffect_InnerFrontRight :	<../stats.rules>/Stats/OverclockOverloadEffect_InnerFrontRight, OverclockOverloadEffect_InnerFront	{}
			OverclockOverloadEffect_InnerBackRight :	<../stats.rules>/Stats/OverclockOverloadEffect_InnerBackRight, OverclockOverloadEffect_InnerFront	{}
			OverclockOverloadEffect_InnerBack :			<../stats.rules>/Stats/OverclockOverloadEffect_InnerBack, OverclockOverloadEffect_InnerFront		{}
			OverclockOverloadEffect_InnerBackLeft :		<../stats.rules>/Stats/OverclockOverloadEffect_InnerBackLeft, OverclockOverloadEffect_InnerFront	{}
			OverclockOverloadEffect_InnerFrontLeft :	<../stats.rules>/Stats/OverclockOverloadEffect_InnerFrontLeft, OverclockOverloadEffect_InnerFront	{}

			// Always
			STL_EmitterEffect :	&<../shield_stl_modular.rules>/Part/Components/EmitterEffect
			{
				OperationalToggle = IsOperational
				MediaEffects
				[
					: &../^/0/MediaEffects/0
					{
						ArcSprite : &<../../colors.rules>/Color/Purple/ShieldMediaEffect_On, ^/0/ArcSprite	{}
					}
					: &../^/0/MediaEffects/1	{}
				]
			}
		}
	}
	
	ToggleComponents_Shield_Purple_Off
	{
		Type = ToggledComponents
		Toggle = Toggle_Purple_Off
		Components =
		{
			// Inner
			ArcShield_InnerFront :		&../../ToggleComponents_Shield_Purple_On/Components/ArcShield_InnerFront
			{
				ShieldMediaEffects
				[
					: &../^/0/ShieldMediaEffects/0
					{
						ArcSprite : &<../../colors.rules>/Color/Purple/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
					}
					: &../^/0/ShieldMediaEffects/1 {}
				]
			}
			ArcShield_InnerFrontRight :	<../stats.rules>/Stats/ArcShield_InnerFrontRight, ArcShield_InnerFront	{}
			ArcShield_InnerBackRight :	<../stats.rules>/Stats/ArcShield_InnerBackRight, ArcShield_InnerFront	{}
			ArcShield_InnerBack :		<../stats.rules>/Stats/ArcShield_InnerBack, ArcShield_InnerFront		{}
			ArcShield_InnerBackLeft :	<../stats.rules>/Stats/ArcShield_InnerBackLeft, ArcShield_InnerFront	{}
			ArcShield_InnerFrontLeft :	<../stats.rules>/Stats/ArcShield_InnerFrontLeft, ArcShield_InnerFront	{}
		}
	}
	
	// -------------------------------------------------------------------------------------------------------------------------
	// GRAPHICS START ----------------------------------------------------------------------------------------------------------
	// -------------------------------------------------------------------------------------------------------------------------
	
	ToggleComponents_Graphics_Purple
	{
		Type = ToggledComponents
		Toggle = ToggleColour_Purple
		Components = 
		{
			K_Graphics : &<../shield_stl_modular.rules>/Part/Components/Graphics
			{				
				OperationalDoodad
				{
					Layer = "weapons"
					Offset = [0, 0]
					DamageLevels
					[
						{
							AnimationFiles
							[
								"doodads_lightning1.png"
								"doodads_lightning2.png"
								"doodads_lightning3.png"
								"doodads_lightning4.png"
								"doodads_lightning5.png"
								"doodads_lightning6.png"
								"doodads_lightning7.png"
								"doodads_lightning8.png"
							]
							Size = [1, 1]
							AnimationInterval = 0.1
						}
						{
							AnimationFiles
							[
								"doodads_lightning1.png"
								"doodads_lightning2.png"
								"doodads_lightning3.png"
								"doodads_lightning4.png"
								"doodads_lightning5.png"
								"doodads_lightning6.png"
								"doodads_lightning7.png"
								"doodads_lightning8.png"
							]
							Size = [1, 1]
							AnimationInterval = 0.1
						}
						{
							AnimationFiles
							[
								"doodads_lightning1.png"
								"doodads_lightning2.png"
								"doodads_lightning3.png"
								"doodads_lightning4.png"
								"doodads_lightning5.png"
								"doodads_lightning6.png"
								"doodads_lightning7.png"
								"doodads_lightning8.png"
							]
							Size = [1, 1]
							AnimationInterval = 0.1
						}
					]
				}
				
				OperationalLighting
				{
					Layer = "lights_add"
					DamageLevels
					[
						{
							File = "lights.png"
							Size = [4, 4]
						}
					]
				}
				
				OperationalRoofLighting
				{
					Layer = "roof_lights_fancy"
					DamageLevels
					[
						{
							File = "./Data/ships/common/light_blob.png"
							Size = [3, 3]
							Z = 1
							VertexColor = [195*1.5, 60*1.5, 255*1.5, 100]
						}
					]
				}
			}
		}
	}
}