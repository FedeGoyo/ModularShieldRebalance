OVERCLOCK
{
	ARC_FACTOR = 0.5
	DAMAGE_DRAIN_FACTOR = 1 / 3
	EMP_RESIST = 50%
	HEAT_PER_SECOND = 10
	HEAT_PER_DAMAGE = 0.5
	
	RECHARGE_USAGE_RATIO = 200%
//	RECHARGING_HEAT_PER_SECOND = 187.5
}
HEAT_TO_RESOURCE = &<./Data/statuses/heat/heat.rules>/STATUS_TO_RESOURCE_RATIO
HEAT_TO_STATUS = &<./Data/statuses/heat/heat.rules>/RESOURCE_TO_STATUS_RATIO

Part : <./Data/ships/terran/base_part_terran_overclock.rules>/Part
{
	NameKey = "Parts/KebechetTINYmodularShield"
	IconNameKey = "Parts/KebechetTINYmodularShieldIcon"
	DescriptionKey = "Parts/KebechetTINYmodularShieldDesc"
	ID = swefpifh.Kebechet_TINY_modularShield
	EditorGroup = "Defenses"
	Resources
	[
		[steel, 14]
		[coil, 14]
	]
	AIValueFactor = 5
	Size = [2, 1]
	PhysicalRect = [0, 0, 2, 1] // [Left, Top, Width, Height]
	SaveRect = &PhysicalRect
	SelectionPriority = 1
	SelectionTypeID = "shield_gen_tiny"
	SelectionTypeByRotation = true
	MaxHealth = 4000
	TypeCategories = [defense, uses_power]
	ReceivableBuffs : ^/0/ReceivableBuffs [ModularShieldCapacity]
	PenetrationRectType = Normal
	// ProhibitLeft = 0
	// ProhibitRight = 0
	ProhibitAbove = 1
	// ProhibitBelow = 0
	InitialPenetrationResistance = 3
	AllowedDoorLocations
	[
		[0, 1]
		[1, 1]
	]

	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	Components : ^/0/Components
	{

		// --------------------------------- START TOGGLES
		
		// -----------------------------------------------
		// COLOURS TOGGLES -------------------------------
		// -----------------------------------------------

		Kebechet_TINY_ToggleColours
		{
			Type = UIToggle
			ToggleID = "Kebechet_ToggleID_Colours"
			Default = 0
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}

		Kebechet_TINY_ToggleColours_Purple
		{
			Type = ModeToggle
			Mode = Kebechet_TINY_ToggleColours
			OnMode = 0
		}

		Kebechet_TINY_ToggleColours_Blue : Kebechet_TINY_ToggleColours_Purple	{ OnMode = 1 }
		Kebechet_TINY_ToggleColours_Orange : Kebechet_TINY_ToggleColours_Purple	{ OnMode = 2 }
		Kebechet_TINY_ToggleColours_Red : Kebechet_TINY_ToggleColours_Purple	{ OnMode = 3 }
		Kebechet_TINY_ToggleColours_Yellow : Kebechet_TINY_ToggleColours_Purple	{ OnMode = 4 }
		Kebechet_TINY_ToggleColours_Green : Kebechet_TINY_ToggleColours_Purple	{ OnMode = 5 }

		// -----------------------------------------------
		// DISPLAY TOGGLES -------------------------------
		// -----------------------------------------------
		
		Kebechet_TINY_ToggleDisplay
		{
			Type = UIToggle
			ToggleID = "Kebechet_ToggleID_Display"
			Default = 0
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}

		Kebechet_TINY_ToggleDisplay_On
		{
			Type = ModeToggle
			Mode = Kebechet_TINY_ToggleDisplay
			OnMode = 0
		}

		Kebechet_TINY_ToggleDisplay_Off : Kebechet_TINY_ToggleDisplay_On	{ OnMode = 1 }

		// -----------------------------------------------
		// PROXY -----------------------------------------
		// -----------------------------------------------
		
		Kebechet_TINY_ColoursProxy
		{
			Type = ToggleProxy
			ComponentID = Kebechet_TINY_ColoursSet
		}
		Kebechet_TINY_ColoursSet
		{
			Type = MultiToggle
			Toggles = [Kebechet_TINY_ToggleColours_Purple, Kebechet_TINY_ToggleColours_Blue, Kebechet_TINY_ToggleColours_Orange, Kebechet_TINY_ToggleColours_Red, Kebechet_TINY_ToggleColours_Yellow, Kebechet_TINY_ToggleColours_Green]
			Mode = Any
		}
		
		Kebechet_TINY_DisplayProxy
		{
			Type = ToggleProxy
			ComponentID = Kebechet_TINY_DisplaySet
		}
		Kebechet_TINY_DisplaySet
		{
			Type = MultiToggle
			Toggles = [Kebechet_TINY_ToggleDisplay_Off, Kebechet_TINY_ToggleDisplay_On]
			Mode = Any
		}
		
		// -----------------------------------------------
		// MULTI TOGGLES --------------------------------- // Kebechet_TINY_ColoursProxy, Kebechet_TINY_AngleProxy, Kebechet_TINY_DisplayProxy
		// -----------------------------------------------

		// ---------------- PURPLE -----------------------
		
		K_TINY_Purple_A90FrontLine_On
		{
			Type = MultiToggle
			Toggles = [Kebechet_TINY_ToggleColours_Purple, Kebechet_TINY_ToggleDisplay_On] 
			Mode = All
		}

		K_TINY_Purple_A90FrontLine_Off : K_TINY_Purple_A90FrontLine_On	{ Toggles = [Kebechet_TINY_ToggleColours_Purple, Kebechet_TINY_ToggleDisplay_Off, Kebechet_TINY_ColoursProxy, Kebechet_TINY_DisplayProxy] }
		// ---------------- BLUE ---------------------
		K_TINY_Blue_A90FrontLine_On : K_TINY_Purple_A90FrontLine_On		{ Toggles = [Kebechet_TINY_ToggleColours_Blue, Kebechet_TINY_ToggleDisplay_On, Kebechet_TINY_ColoursProxy, Kebechet_TINY_DisplayProxy] }
		K_TINY_Blue_A90FrontLine_Off : K_TINY_Purple_A90FrontLine_On	{ Toggles = [Kebechet_TINY_ToggleColours_Blue, Kebechet_TINY_ToggleDisplay_Off, Kebechet_TINY_ColoursProxy, Kebechet_TINY_DisplayProxy] }
		// ---------------- Orange ---------------------
		K_TINY_Orange_A90FrontLine_On : K_TINY_Purple_A90FrontLine_On	{ Toggles = [Kebechet_TINY_ToggleColours_Orange, Kebechet_TINY_ToggleDisplay_On, Kebechet_TINY_ColoursProxy, Kebechet_TINY_DisplayProxy] }
		K_TINY_Orange_A90FrontLine_Off : K_TINY_Purple_A90FrontLine_On	{ Toggles = [Kebechet_TINY_ToggleColours_Orange, Kebechet_TINY_ToggleDisplay_Off, Kebechet_TINY_ColoursProxy, Kebechet_TINY_DisplayProxy] }
		// ---------------- Red ---------------------
		K_TINY_Red_A90FrontLine_On : K_TINY_Purple_A90FrontLine_On		{ Toggles = [Kebechet_TINY_ToggleColours_Red, Kebechet_TINY_ToggleDisplay_On, Kebechet_TINY_ColoursProxy, Kebechet_TINY_DisplayProxy] }
		K_TINY_Red_A90FrontLine_Off : K_TINY_Purple_A90FrontLine_On		{ Toggles = [Kebechet_TINY_ToggleColours_Red, Kebechet_TINY_ToggleDisplay_Off, Kebechet_TINY_ColoursProxy, Kebechet_TINY_DisplayProxy] }
		// ---------------- Yellow ---------------------
		K_TINY_Yellow_A90FrontLine_On : K_TINY_Purple_A90FrontLine_On	{ Toggles = [Kebechet_TINY_ToggleColours_Yellow, Kebechet_TINY_ToggleDisplay_On, Kebechet_TINY_ColoursProxy, Kebechet_TINY_DisplayProxy] }
		K_TINY_Yellow_A90FrontLine_Off : K_TINY_Purple_A90FrontLine_On	{ Toggles = [Kebechet_TINY_ToggleColours_Yellow, Kebechet_TINY_ToggleDisplay_Off, Kebechet_TINY_ColoursProxy, Kebechet_TINY_DisplayProxy] }
		// ---------------- Green ---------------------
		K_TINY_Green_A90FrontLine_On : K_TINY_Purple_A90FrontLine_On	{ Toggles = [Kebechet_TINY_ToggleColours_Green, Kebechet_TINY_ToggleDisplay_On, Kebechet_TINY_ColoursProxy, Kebechet_TINY_DisplayProxy] }
		K_TINY_Green_A90FrontLine_Off : K_TINY_Purple_A90FrontLine_On	{ Toggles = [Kebechet_TINY_ToggleColours_Green, Kebechet_TINY_ToggleDisplay_Off, Kebechet_TINY_ColoursProxy, Kebechet_TINY_DisplayProxy] }

		// --------------------------------- END TOGGLES
		
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL ]
			Mode = All
		}

		CommandConsumptionToggle
		{
			Type = MultiToggle
			Toggles = [PowerToggle, ScorchedToggle]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		ScorchedToggle
		{
			Type = StatusToggle
			StatusType = cosmoteer.scorched
			MinStatusValue = 1
			Invert = true
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 1
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 2000
			ToggleOnResources = 1001
			OperationalToggle = IsOperational
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
			DrainResistance
			{
				BaseValue = 0
				Modifiers
				[
					{
						Type = BuffRemap
						BuffType = Overclock
						ModificationMode = Add
						RemapFrom = [0, 1]
						RemapTo = [0, (&~/OVERCLOCK/EMP_RESIST)]
					}
					{
						Type = Status
						StatusType = cosmoteer.shield_overload
						ModificationMode = Subtract
					}
				]
			}
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Toggle = ModularShieldCapacityBuffToggle
			Invert = true
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Thruster_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
		}

		IsBatteryProducerPermitted
		{
			Type = MultiToggle
			Toggles = [IsOverclocked, {Toggle = ModularShieldCapacityBuffToggle, Invert = true}]
			Mode = All
		}
		Overclock_BatteryProducer
		{
			Type = ResourceConverter
			OperationalToggle = IsBatteryProducerPermitted
			ToStorage = BatteryStorage
			ToQuantity = (&~/OVERCLOCK/RECHARGE_USAGE_RATIO) * (&~/Part/Components/PowerDrain/FromQuantity)
			Interval = &~/Part/Components/PowerDrain/Interval
		}

		ProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsShieldOperational
			ShowProgressFor = BatteryStorage
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}

		PowerDrain
		{
			Type = ResourceConverter
			OperationalToggle = IsOperational
			FromStorage = BatteryStorage
			FromQuantity = 50
			MinFromQuantityForConversion = 1
			Interval = 2
		}
		
		IsOperationalProxy
		{
			Type = MultiToggle
			Toggles = [ProxyBatteryStorage]
			Mode = All
		}
		ProxyBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 0
			ToggleOnResources = 1
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		ModularShieldCapacityBuffToggle
		{
			Type = BuffToggle
			BuffType = ModularShieldCapacity
		}
		IsBonusResistanceOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, ModularShieldCapacityBuffToggle, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL]
			Mode = All
		}
		ModularShieldResistanceBuffProvider
		{
			Type = AreaBuffProvider
			BuffType = ModularShieldResistanceBonus
			BuffAmount = 8.33
			BuffArea = [0, 2, 2, 1]
			OperationalToggle = IsBonusResistanceOperational
/*			Criteria
			{
				Rot = 2
				Right = 2
				Bottom = 3
			}*/
		}
		
		Kebechet_TINY_ToggleRadius
		{
			Type = UIToggle
			ToggleID = "Kebechet_ToggleID_Radius"
			Default = 1
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}
		IsBonusRadiusOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, ModularShieldCapacityBuffToggle, Kebechet_TINY_ToggleRadius, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL]
			Mode = All
		}
		ModularShieldRadiusBuffProvider
		{
			Type = AreaBuffProvider
			BuffType = ModularShieldRadiusBonus
			BuffAmount = 1
			BuffArea = [0, 2, 2, 1]
			OperationalToggle = IsBonusRadiusOperational
/*			Criteria
			{
				Rot = 2
				Right = 2
				Bottom = 3
			}*/
		}

		IsShieldOperational
		{
			Type = MultiToggle
			Toggles = [IsOperational, {Toggle = ModularShieldCapacityBuffToggle, Invert = true}]
			Mode = All
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// ARCSHIELD ORIGINAL - START //////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		ArcShield : <./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/ArcShield
		{
			Radius = 85
			Arc : ^/0/Arc
			{
				BaseValue = 4.11d
			}
			OperationalToggle = IsOperationalProxy
			PenetrationResistance = [8.33, 0]
//			ResourceDrainPerDamage
//			Rotation = -90d
			Location = [1, 82.5]

			ShieldMediaEffects
			[
				: &../^/0/ShieldMediaEffects/0
				{
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
					ArcSprite : ^/0/ArcSprite	{}
				}
				: &../^/0/ShieldMediaEffects/1	{}
			]

			HitMediaEffects
			[
				: &../^/0/HitMediaEffects/0
				{
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = 1d
					ArcSprite : ^/0/ArcSprite
					{
//						_waveAlpha = 12 // &<../stats.rules>/StatsCommon/HitMediaEffects_waveAlpha
						Size = [0, 1.5]
					}
				}
				: &../^/0/HitMediaEffects/1	{}
			]
		}
		
		OverclockTweenToggle
		{
			Type = ThresholdToggle
			ValueFrom = OverclockStateValue
			MinAmount = 1
		}
		
		OverclockedEffectToggle
		{
			Type = MultiToggle
			Toggles = [OverclockTweenToggle, IsOperationalOverclocked]
			Mode = All
		}
		
		Overclock_BlueprintArc
		{
			Type = ArcSprite
			ChainedTo = ArcShield
			Radius = &../ArcShield/Radius
			Arc = (&../ArcShield/Arc/BaseValue) * (&~/OVERCLOCK/ARC_FACTOR)
			SpriteSegments = (&../ArcShield/BlueprintArcSpriteSegments)
			Sprite
			{
				Texture
				{
					File = "shield_energy_oc.png"
					UVMode = Wrap
					SampleMode = Linear
					MipLevels = 1
				}
				Size = [0, 1.5]
				Color = [255, 134, 36, 127]
			}
		}
		
		OverclockEffect
		{
			Type = ShieldArcsMimic
			Shield = ArcShield
			ChainedTo = ArcShield
			FactorMediaEffectsIntensityWith = BatteryStorage
			MimicFadeInStartTime = false
			OperationalToggle = OverclockedEffectToggle
			ContinuousEffects
			[
				{
					Type = ArcShield
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
					FadeInTime = .25
					FadeOutTime = .25
					FadeFromScale = 1.025
					ArcSprite
					{
						Texture
						{
							File = "shield_energy_oc.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = 1
						}
						Shader = "shield.shader"
						_waveTex
						{
							File = "shield_energy_wave.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_maskTex
						{
							File = "shield_mask_oc.png"
							SampleMode = Linear
							MipLevels = 1
						}
						_waveSpeed = 1
						_waveAlpha = 1
						_waveCurveInterval = .5
						_waveCurveMagnitude = .35
						_waveCurveUOffsetPerSecond = .2
						_fullPowerColor1 = [203, 80, 33, 127]
						_lowPowerColor1 = [255, 0, 0, 127]
						_fullPowerColor2 = [255, 134, 36, 255]
						_lowPowerColor2 = [255, 50, 0, 127]
						_lowPowerThicknessExponent = .6
						_xScale = 1
						_hexDamageIntensity = 0.8
						TargetBlendMode = Add
						Size = [0, 1.5]
					}
					ArcSpriteSegments = 64
					Bucket = Lower1
				}
			]
		}
        
		OverloadValue
		{
			Type = BuffableValue
			Value
			{
				BaseValue = 0
				Modifiers
				[
					{
						Type = Status
						StatusType = cosmoteer.shield_overload
						ModificationMode = Replace
						BaseStatusValue = 0
					}
				]
			}
		}
		
		IsOverloaded
		{
			Type = ThresholdToggle
			ValueFrom = OverloadValue
			MinAmount = 0.01
		}
		
		
		IsOperationalOverloaded
		{
			Type = MultiToggle
			Toggles = [ IsOperational, IsOverloaded ]
			Mode = All
		}
		
		IsOperationalOverclockedOverloaded
		{
			Type = MultiToggle
			Toggles = [ IsOperational, IsOverloaded, OverclockedEffectToggle ]
			Mode = All
		}
		
		OverloadEffect
		{
			Type = ShieldArcsMimic
			Shield = ArcShield
			ChainedTo = ArcShield
			FactorMediaEffectsIntensityWith = BatteryStorage
			FactorRedVertexColorWith = OverloadValue
			OperationalToggle = IsOperationalOverloaded
			ContinuousEffects
			[
				{
					Type = ArcShield
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
					FadeInTime = 0.5
					FadeOutTime = 0.5
					FadeFromScale = .8
					ArcAngleAffectsUVs = true
					UPerNinetyDegrees = 1
					ArcSprite
					{
						Texture
						{
							File = "shield_overload.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = 1
						}
						Shader = "shield_overload.shader"
						_noiseTex1
						{
							File = "./Data/statuses/fire/particles/fire_noise.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_noiseTex2
						{
							File = "./Data/statuses/fire/particles/fire_noise.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_baseShieldTex
						{
							File = shield_mask.png
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = 1
						}
						_waveSpeed = 1
						_waveAlpha = 1
						_waveCurveInterval = .5
						_waveCurveMagnitude = .35
						_waveCurveUOffsetPerSecond = .2
						
						_color1 = [255, 0, 255 * 0.31, 0]
						_color2 = [255, 255 * 0.41, 0, 0]
						_maxGreen = 0.9
						
						_xScale = 1
						_gradientXWidth = 1.05
						_hexDamageIntensity = 0.8
						TargetBlendMode = Add
						Size = [0, 1.5]
					}
					ArcSpriteSegments = 64
					Bucket = Lower1
				}
			]
		}
		
		OverclockOverloadEffect
		{
			Type = ShieldArcsMimic
			Shield = ArcShield
			ChainedTo = ArcShield
			FactorMediaEffectsIntensityWith = BatteryStorage
			FactorRedVertexColorWith = OverloadValue
			OperationalToggle = IsOperationalOverclockedOverloaded
			ContinuousEffects
			[
				{
					Type = ArcShield
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
					FadeInTime = .25
					FadeOutTime = .25
					FadeFromScale = 1.025
					ArcSprite
					{
						Texture
						{
							File = "shield_overload_oc.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = 1
						}
						Shader = "shield_overload.shader"
						_noiseTex1
						{
							File = "./Data/statuses/fire/particles/fire_noise.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_noiseTex2
						{
							File = "./Data/statuses/fire/particles/fire_noise.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_baseShieldTex
						{
							File = shield_mask_oc.png
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = 1
						}
						_waveSpeed = 1
						_waveAlpha = 1
						_waveCurveInterval = .5
						_waveCurveMagnitude = .35
						_waveCurveUOffsetPerSecond = .2
						
						_color1 = [255, 0, 255 * 0.31, 0]
						_color2 = [255, 255 * 0.41, 0, 0]
						_maxGreen = 0.9
						
						_xScale = 1
						_hexDamageIntensity = 0.8
						TargetBlendMode = Add
						Size = [0, 1.5]
					}
					ArcSpriteSegments = 64
					Bucket = Lower1
				}
			]
		}

		// Overclock / Thermal network
		OverclockHeatProducer
		{
			Type = ResourceConverter
			OperationalToggle = IsOperationalOverclocked
			HEAT_PER_INTERVAL = ceil((&~/OVERCLOCK/HEAT_PER_SECOND) * (&Interval))
			ToQuantity = (&HEAT_PER_INTERVAL) * (&~/HEAT_TO_RESOURCE)
			ToStorage = &~/Part/^/0/HEAT_TARGET_STORAGE
			Interval = 0.5
		}
		OverclockHitHeatProducer
		{
			Type = ResourceChange
			ResourceStorage = &~/Part/^/0/HEAT_TARGET_STORAGE
			// Provides the post-resistance damage value as EffectScale
			Trigger = Overclock_ArcShieldProxy
			Amount
			{
				BaseValue = "round((&~/OVERCLOCK/HEAT_PER_DAMAGE) * (&~/HEAT_TO_RESOURCE), 0)"
				Modifiers
				[
					{
						Type = EffectScale
						ModificationMode = Multiply
					}
					{
						Type = Status
						StatusType = cosmoteer.shield_overload
						ModificationMode = Multiply
						BaseStatusValue = 1
					}
					{
						Type = Buff
						BuffType = Overclock
						ModificationMode = Multiply
					}
				]
			}
		}
		Overclock_ArcShieldProxy
		{
			Type = TriggerProxy
			ComponentID = ArcShield
			ProxyToggle = IsOperationalOverclocked
		}
		OverheatEffects : ^/0/OverheatEffects
		{
			Location = [1, 1.5]
		}
		Router
		{
			Type = NetworkRouter
			RouteGenerators
			[
				{
					Type = Simple
					HEAT_INPUT = &~/Part/^/0/HEAT_NETWORK_INPUT
					Routes
					[
						[&../../HEAT_INPUT, Port_BL, 0]
						[&../../HEAT_INPUT, Port_BR, 0]
						[&../../HEAT_INPUT, Port_BD0, 0]
						[&../../HEAT_INPUT, Port_BD1, 0]
					]
				}
			]
		}
		Port_BL : ~/Part/^/0/BASE_THERMAL_PORT
		{
			Location = [0, 0]
			Direction = Left
		}
		Port_BR : Port_BL
		{
			Location = [1, 0]
			Direction = Right
		}
		Port_BD0 : Port_BL
		{
			Location = [0, 0]
			Direction = Down
		}
		Port_BD1 : Port_BD0
		{
			Location = [1, 0]
		}
		
		EmitterEffect : <./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/EmitterEffect   // No idea why it doesn't work
		{}
/*		{
			Location = [1, 0]
			OperationalToggle =  IsOperationalProxy
			MediaEffects
			[
				: &../^/0/MediaEffects/0
				{
//					Radius = 2.2
//					Arc = 90d
				}

				: &../^/0/MediaEffects/1
				{
					Volume = 0.1
				}
			]
		}
*/
		ShieldOperationEffects : &<./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/ShieldOperationEffects	{}
		
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// ARCSHIELD ORIGINAL - END ////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD PURPLE START --------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_TINY_ToggleComponents_Purple_A90FrontLine_On
		{
			Type = ToggledComponents
			Toggle = K_TINY_Purple_A90FrontLine_On
			IncludeInBlueprints = true
			Components = 
			{ 
				TINY_ArcShield : &~/Part/Components/ArcShield
				{
					OperationalToggle = IsShieldOperational
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Purple/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Purple/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
				
				TINY_EmitterEffect : &~/Part/Components/EmitterEffect	// Doesn't work...
				{
					OperationalToggle = IsOperational
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Purple/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/MediaEffects/1	{}
					]
				}
				TINY_OverclockEffect : &~/Part/Components/OverclockEffect
				{
					OperationalToggle = OverclockedEffectToggle
					Shield = TINY_ArcShield
					ChainedTo = TINY_ArcShield
				}
				TINY_OverloadEffect : &~/Part/Components/OverloadEffect
				{
					OperationalToggle = IsOperationalOverloaded
					Shield = TINY_ArcShield
					ChainedTo = TINY_ArcShield
				}
				TINY_OverclockOverloadEffect : &~/Part/Components/OverclockOverloadEffect
				{
					OperationalToggle = IsOperationalOverclockedOverloaded
					Shield = TINY_ArcShield
					ChainedTo = TINY_ArcShield
				}
			}
		}
		
		K_TINY_ToggleComponents_Purple_A90FrontLine_Off
		{
			Type = ToggledComponents
			Toggle = K_TINY_Purple_A90FrontLine_Off
			IncludeInBlueprints = false
			Components =
			{
				TINY_ArcShield : &../../K_TINY_ToggleComponents_Purple_A90FrontLine_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Purple/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD PURPLE END ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD BLUE START ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_TINY_ToggleComponents_Blue_A90FrontLine_On
		{
			Type = ToggledComponents
			Toggle = K_TINY_Blue_A90FrontLine_On
			IncludeInBlueprints = false
			Components : &../K_TINY_ToggleComponents_Purple_A90FrontLine_On/Components
			{
				TINY_ArcShield : ^/0/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Blue/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Blue/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
			}
		}
		
		K_TINY_ToggleComponents_Blue_A90FrontLine_Off
		{
			Type = ToggledComponents
			Toggle = K_TINY_Blue_A90FrontLine_Off
			IncludeInBlueprints = false
			Components =
			{
				TINY_ArcShield : &../../K_TINY_ToggleComponents_Blue_A90FrontLine_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Blue/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD BLUE END ------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD ORANGE START --------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_TINY_ToggleComponents_Orange_A90FrontLine_On
		{
			Type = ToggledComponents
			Toggle = K_TINY_Orange_A90FrontLine_On
			//IncludeInOrangeprints = true
			Components : &../K_TINY_ToggleComponents_Purple_A90FrontLine_On/Components
			{
				TINY_ArcShield : ^/0/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Orange/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Orange/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
			}
		}
		
		K_TINY_ToggleComponents_Orange_A90FrontLine_Off
		{
			Type = ToggledComponents
			Toggle = K_TINY_Orange_A90FrontLine_Off
			//IncludeInOrangeprints = true
			Components =
			{
				TINY_ArcShield : &../../K_TINY_ToggleComponents_Orange_A90FrontLine_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Orange/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD ORANGE END ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD RED START -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_TINY_ToggleComponents_Red_A90FrontLine_On
		{
			Type = ToggledComponents
			Toggle = K_TINY_Red_A90FrontLine_On
			//IncludeInRedprints = true
			Components : &../K_TINY_ToggleComponents_Purple_A90FrontLine_On/Components
			{
				TINY_ArcShield : ^/0/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Red/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Red/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
			}
		}
		
		K_TINY_ToggleComponents_Red_A90FrontLine_Off
		{
			Type = ToggledComponents
			Toggle = K_TINY_Red_A90FrontLine_Off
			//IncludeInRedprints = true
			Components =
			{
				TINY_ArcShield : &../../K_TINY_ToggleComponents_Red_A90FrontLine_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Red/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD RED END -------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD YELLOW START --------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_TINY_ToggleComponents_Yellow_A90FrontLine_On
		{
			Type = ToggledComponents
			Toggle = K_TINY_Yellow_A90FrontLine_On
			//IncludeInYellowprints = true
			Components : &../K_TINY_ToggleComponents_Purple_A90FrontLine_On/Components
			{
				TINY_ArcShield : ^/0/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Yellow/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Yellow/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
			}
		}
		
		K_TINY_ToggleComponents_Yellow_A90FrontLine_Off
		{
			Type = ToggledComponents
			Toggle = K_TINY_Yellow_A90FrontLine_Off
			//IncludeInYellowprints = true
			Components =
			{
				TINY_ArcShield : &../../K_TINY_ToggleComponents_Yellow_A90FrontLine_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Yellow/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1 {}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD YELLOW END ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD GREEN START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_TINY_ToggleComponents_Green_A90FrontLine_On
		{
			Type = ToggledComponents
			Toggle = K_TINY_Green_A90FrontLine_On
			//IncludeInGreenprints = true
			Components : &../K_TINY_ToggleComponents_Purple_A90FrontLine_On/Components
			{
				TINY_ArcShield : ^/0/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Green/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Green/HitMediaEffects, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
			}
		}
		
		K_TINY_ToggleComponents_Green_A90FrontLine_Off
		{
			Type = ToggledComponents
			Toggle = K_TINY_Green_A90FrontLine_Off
			//IncludeInGreenprints = true
			Components =
			{
				TINY_ArcShield : &../../K_TINY_ToggleComponents_Green_A90FrontLine_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../stats.rules>/Color/Green/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD GREEN END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		Shield_Doodad_Graphics
		{
			Type = Graphics
			Location = [1, 0.5]
			OperationalToggle = IsOperational
			OperationalDoodad
			{
				Layer = "doodads_high"
				//Offset = [0, 0]
				DamageLevels
				[
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [1, 1]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe2_RotSpeed_0DMG
					}
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [1, 1]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe2_RotSpeed_33DMG
					}
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [1, 1]
						RotSpeed = &<../stats.rules>/StatsCommon/DoodadAxe2_RotSpeed_66DMG
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [1, 1]
					}
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [1, 1]
					}
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [1, 1]
					}
				]
			}
		}

		Graphics
		{
			Type = Graphics
			Location = [1, 0.5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [2, 1]
					}
					{
						File = "floor_33.png"
						Size = [2, 1]
					}
					{
						File = "floor_66.png"
						Size = [2, 1]
					}
				]
			}
			
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [2, 1]
					}
					{
						File = "walls_33.png"
						Size = [2, 1]
					}
					{
						File = "walls_66.png"
						Size = [2, 1]
					}
				]
			}
			
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [2, 1]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [2, 1]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [2, 1]
					}
				]
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS PURPLE START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_TINY_Graphics_Purple
		{
			Type = ToggledComponents
			Toggle = Kebechet_TINY_ToggleColours_Purple
			IncludeInBlueprints = false
			Components = 
			{
				K_Graphics_Purple : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"purple/doodads_lightning1.png"
									"purple/doodads_lightning2.png"
									"purple/doodads_lightning3.png"
									"purple/doodads_lightning4.png"
									"purple/doodads_lightning5.png"
									"purple/doodads_lightning6.png"
									"purple/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"purple/doodads_lightning1.png"
									"purple/doodads_lightning2.png"
									"purple/doodads_lightning3.png"
									"purple/doodads_lightning4.png"
									"purple/doodads_lightning5.png"
									"purple/doodads_lightning6.png"
									"purple/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"purple/doodads_lightning1.png"
									"purple/doodads_lightning2.png"
									"purple/doodads_lightning3.png"
									"purple/doodads_lightning4.png"
									"purple/doodads_lightning5.png"
									"purple/doodads_lightning6.png"
									"purple/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "purple/lights.png"
								Size = [2, 1]
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Purple
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"purple/dome_emitter_fx1.png"
									"purple/dome_emitter_fx2.png"
									"purple/dome_emitter_fx3.png"
									"purple/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"purple/dome_emitter_fx1.png"
									"purple/dome_emitter_fx2.png"
									"purple/dome_emitter_fx3.png"
									"purple/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"purple/dome_emitter_fx1.png"
									"purple/dome_emitter_fx2.png"
									"purple/dome_emitter_fx3.png"
									"purple/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "purple/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "purple/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "purple/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS PURPLE END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS BLUE START -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_TINY_Graphics_Blue
		{
			Type = ToggledComponents
			Toggle = Kebechet_TINY_ToggleColours_Blue
			IncludeInBlueprints = false
			Components = 
			{
				K_Graphics_Blue : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"blue/doodads_lightning1.png"
									"blue/doodads_lightning2.png"
									"blue/doodads_lightning3.png"
									"blue/doodads_lightning4.png"
									"blue/doodads_lightning5.png"
									"blue/doodads_lightning6.png"
									"blue/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"blue/doodads_lightning1.png"
									"blue/doodads_lightning2.png"
									"blue/doodads_lightning3.png"
									"blue/doodads_lightning4.png"
									"blue/doodads_lightning5.png"
									"blue/doodads_lightning6.png"
									"blue/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"blue/doodads_lightning1.png"
									"blue/doodads_lightning2.png"
									"blue/doodads_lightning3.png"
									"blue/doodads_lightning4.png"
									"blue/doodads_lightning5.png"
									"blue/doodads_lightning6.png"
									"blue/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "blue/lights.png"
								Size = [2, 1]
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Blue
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"blue/dome_emitter_fx1.png"
									"blue/dome_emitter_fx2.png"
									"blue/dome_emitter_fx3.png"
									"blue/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"blue/dome_emitter_fx1.png"
									"blue/dome_emitter_fx2.png"
									"blue/dome_emitter_fx3.png"
									"blue/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"blue/dome_emitter_fx1.png"
									"blue/dome_emitter_fx2.png"
									"blue/dome_emitter_fx3.png"
									"blue/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "blue/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "blue/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "blue/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS BLUE END -------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS ORANGE START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_TINY_Graphics_Orange
		{
			Type = ToggledComponents
			Toggle = Kebechet_TINY_ToggleColours_Orange
			//IncludeInorangeprints = true
			Components = 
			{
				K_Graphics_Orange : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"orange/doodads_lightning1.png"
									"orange/doodads_lightning2.png"
									"orange/doodads_lightning3.png"
									"orange/doodads_lightning4.png"
									"orange/doodads_lightning5.png"
									"orange/doodads_lightning6.png"
									"orange/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"orange/doodads_lightning1.png"
									"orange/doodads_lightning2.png"
									"orange/doodads_lightning3.png"
									"orange/doodads_lightning4.png"
									"orange/doodads_lightning5.png"
									"orange/doodads_lightning6.png"
									"orange/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"orange/doodads_lightning1.png"
									"orange/doodads_lightning2.png"
									"orange/doodads_lightning3.png"
									"orange/doodads_lightning4.png"
									"orange/doodads_lightning5.png"
									"orange/doodads_lightning6.png"
									"orange/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "orange/lights.png"
								Size = [2, 1]
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Orange
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"orange/dome_emitter_fx1.png"
									"orange/dome_emitter_fx2.png"
									"orange/dome_emitter_fx3.png"
									"orange/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"orange/dome_emitter_fx1.png"
									"orange/dome_emitter_fx2.png"
									"orange/dome_emitter_fx3.png"
									"orange/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"orange/dome_emitter_fx1.png"
									"orange/dome_emitter_fx2.png"
									"orange/dome_emitter_fx3.png"
									"orange/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "orange/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "orange/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "orange/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS ORANGE END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS RED START ------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_TINY_Graphics_Red
		{
			Type = ToggledComponents
			Toggle = Kebechet_TINY_ToggleColours_Red
			//IncludeInredprints = true
			Components = 
			{
				K_Graphics_Red : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"red/doodads_lightning1.png"
									"red/doodads_lightning2.png"
									"red/doodads_lightning3.png"
									"red/doodads_lightning4.png"
									"red/doodads_lightning5.png"
									"red/doodads_lightning6.png"
									"red/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"red/doodads_lightning1.png"
									"red/doodads_lightning2.png"
									"red/doodads_lightning3.png"
									"red/doodads_lightning4.png"
									"red/doodads_lightning5.png"
									"red/doodads_lightning6.png"
									"red/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"red/doodads_lightning1.png"
									"red/doodads_lightning2.png"
									"red/doodads_lightning3.png"
									"red/doodads_lightning4.png"
									"red/doodads_lightning5.png"
									"red/doodads_lightning6.png"
									"red/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "red/lights.png"
								Size = [2, 1]
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Red
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"red/dome_emitter_fx1.png"
									"red/dome_emitter_fx2.png"
									"red/dome_emitter_fx3.png"
									"red/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"red/dome_emitter_fx1.png"
									"red/dome_emitter_fx2.png"
									"red/dome_emitter_fx3.png"
									"red/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"red/dome_emitter_fx1.png"
									"red/dome_emitter_fx2.png"
									"red/dome_emitter_fx3.png"
									"red/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "red/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "red/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "red/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS RED END --------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS YELLOW START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_TINY_Graphics_Yellow
		{
			Type = ToggledComponents
			Toggle = Kebechet_TINY_ToggleColours_Yellow
			//IncludeInYellowprints = true
			Components = 
			{
				K_Graphics_Yellow : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"Yellow/doodads_lightning1.png"
									"Yellow/doodads_lightning2.png"
									"Yellow/doodads_lightning3.png"
									"Yellow/doodads_lightning4.png"
									"Yellow/doodads_lightning5.png"
									"Yellow/doodads_lightning6.png"
									"Yellow/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"Yellow/doodads_lightning1.png"
									"Yellow/doodads_lightning2.png"
									"Yellow/doodads_lightning3.png"
									"Yellow/doodads_lightning4.png"
									"Yellow/doodads_lightning5.png"
									"Yellow/doodads_lightning6.png"
									"Yellow/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"Yellow/doodads_lightning1.png"
									"Yellow/doodads_lightning2.png"
									"Yellow/doodads_lightning3.png"
									"Yellow/doodads_lightning4.png"
									"Yellow/doodads_lightning5.png"
									"Yellow/doodads_lightning6.png"
									"Yellow/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "Yellow/lights.png"
								Size = [2, 1]
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Yellow
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"yellow/dome_emitter_fx1.png"
									"yellow/dome_emitter_fx2.png"
									"yellow/dome_emitter_fx3.png"
									"yellow/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"yellow/dome_emitter_fx1.png"
									"yellow/dome_emitter_fx2.png"
									"yellow/dome_emitter_fx3.png"
									"yellow/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"yellow/dome_emitter_fx1.png"
									"yellow/dome_emitter_fx2.png"
									"yellow/dome_emitter_fx3.png"
									"yellow/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "yellow/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "yellow/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "yellow/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS YELLOW END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS GREEN START ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		K_TINY_Graphics_Green
		{
			Type = ToggledComponents
			Toggle = Kebechet_TINY_ToggleColours_Green
			//IncludeInGreenprints = true
			Components = 
			{
				K_Graphics_Green : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"green/doodads_lightning1.png"
									"green/doodads_lightning2.png"
									"green/doodads_lightning3.png"
									"green/doodads_lightning4.png"
									"green/doodads_lightning5.png"
									"green/doodads_lightning6.png"
									"green/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"green/doodads_lightning1.png"
									"green/doodads_lightning2.png"
									"green/doodads_lightning3.png"
									"green/doodads_lightning4.png"
									"green/doodads_lightning5.png"
									"green/doodads_lightning6.png"
									"green/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"green/doodads_lightning1.png"
									"green/doodads_lightning2.png"
									"green/doodads_lightning3.png"
									"green/doodads_lightning4.png"
									"green/doodads_lightning5.png"
									"green/doodads_lightning6.png"
									"green/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Green
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"green/dome_emitter_fx1.png"
									"green/dome_emitter_fx2.png"
									"green/dome_emitter_fx3.png"
									"green/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"green/dome_emitter_fx1.png"
									"green/dome_emitter_fx2.png"
									"green/dome_emitter_fx3.png"
									"green/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"green/dome_emitter_fx1.png"
									"green/dome_emitter_fx2.png"
									"green/dome_emitter_fx3.png"
									"green/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "green/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "green/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "green/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS GREEN END ------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		BatterySprites
		{
			Type = ResourceSprites
			Location = [1, 0.5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			ResourceLevels
			[
				{
					File = "batteries1.png"
					Size = [2, 1]
				}
				{
					File = "batteries2.png"
					Size = [2, 1]
				}
			]
		}
				
		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		ScorchedTrigger
		{
			Type = ToggleTrigger
			Toggle = ScorchedToggle
			TriggerWhenOn = false
		}

		ScorchedEffects
		{
			Type = TriggeredEffects
			Trigger = ScorchedTrigger
			Location = &../DestroyedEffects/Location
			MediaEffects = &/COMMON_EFFECTS/MedPartScorched
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1, 0.5]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 0.5]
			Layer = "indicators"
			Indicators
			[
				// Scorched
				{
					Toggle = ScorchedToggle
					AtlasSprite = &/INDICATORS/Scorched
					HidesIndicators = [1,2,3]
				}

				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Resetting from overclock
				{
					Toggle = &~/Part/^/0/OVERCLOCK_OPERATIONAL
					AtlasSprite : /INDICATORS/OverclockReset
					{
						Size = [1, 1]
					}
					HidesIndicators = [3]
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 2]
			Offset = [0, -0.5]
		}

		HeatGenerationValue
		{
			Type = StaticValue
			Value = (&~/OVERCLOCK/HEAT_PER_SECOND)
		}
		HeatGenerationStatProvider
		{
			Type = StatProvider
			Stat = HeatGeneration
			OperationalToggle = OverclockModeToggle
			ValueFrom = HeatGenerationValue
		}
	}

	Stats
	{
		ShieldHP = (&~/Part/Components/BatteryStorage/MaxResources) / (&~/Part/Components/ArcShield/ResourceDrainPerDamage/BaseValue)
		ShieldPenResist = &~/Part/Components/ArcShield/PenetrationResistance/0
//		ShieldArc = deg(&~/Part/Components/ArcShield/Arc/BaseValue)	// Useless due to being almost flat
		ShieldLength = 6.1	// 2 * Radius * Sen(rad(arc)/2)
		ShieldDist = (&~/Part/Components/ArcShield/Radius) - (&~/Part/Components/ArcShield/Location/1)
		PowerUsageContinuous = (&~/Part/Components/PowerDrain/FromQuantity) / (&~/Part/Components/PowerDrain/Interval) / 1000
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&PowerUsageContinuous) + 0.5
		RecCrew = (&RecPower) * 4
		
		// Add HP and penetration resistance for when buffing Bubble Shields?
	}
	
	StatsByCategory
	[
		{
			NameKey = "StatCategories/Overclocked"
			Stats
			{
//				ShieldArc = deg(&~/Part/Components/ArcShield/Arc/BaseValue) * (&~/OVERCLOCK/ARC_FACTOR)
				ShieldLength = 3.05	// 2 * Radius * Sen(rad(arc)/2)
				ShieldHP = (&~/Part/Stats/ShieldHP) / (&~/OVERCLOCK/DAMAGE_DRAIN_FACTOR)
				EMPResistPercentage = (&~/OVERCLOCK/EMP_RESIST) * 100
				HeatGeneration = (&~/OVERCLOCK/HEAT_PER_SECOND)
				HeatPerDamage = (&~/OVERCLOCK/HEAT_PER_DAMAGE)
				ShieldRegen = (&~/Part/Components/Overclock_BatteryProducer/ToQuantity) / (&~/Part/Components/Overclock_BatteryProducer/Interval) / (&~/Part/Components/ArcShield/ResourceDrainPerDamage/BaseValue) / (&~/OVERCLOCK/DAMAGE_DRAIN_FACTOR)
			}
		}
	]
}