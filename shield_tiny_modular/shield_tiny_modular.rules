OVERCLOCK
{
	HEAT_PER_SECOND = 10
	HEAT_PER_DAMAGE = 0.2
	POWER_DRAIN_FACTOR = 2
	RECHARGE_USAGE_RATIO = 200%
//	RECHARGING_HEAT_PER_SECOND = 187.5
}
HEAT_TO_RESOURCE = &<./Data/statuses/heat/heat.rules>/STATUS_TO_RESOURCE_RATIO
HEAT_TO_STATUS = &<./Data/statuses/heat/heat.rules>/RESOURCE_TO_STATUS_RATIO

Part : <./Data/ships/terran/base_part_terran_overclock.rules>/Part
{
	NameKey = "Parts/KebechetTINYmodularShield"
	IconNameKey = "Parts/KebechetTINYmodularShieldIcon"
	DescriptionKey = "Parts/KebechetTINYmodularShieldDesc"
	ID = swefpifh.Kebechet_TINY_modularShield
	EditorGroup = "Defenses"
	Resources
	[
		[steel, 20]
		[coil, 15]
	]
	AIValueFactor = 5
	Size = [2, 1]
	PhysicalRect = [0, 0, 2, 1] // [Left, Top, Width, Height]
	SaveRect = &PhysicalRect
	SelectionPriority = 1
	SelectionTypeID = "shield_gen_tiny"
	SelectionTypeByRotation = true
	MaxHealth = 4000
	TypeCategories = [defense, uses_power]
	ReceivableBuffs : ^/0/ReceivableBuffs []
	PenetrationRectType = Normal
	// ProhibitLeft = 0
	// ProhibitRight = 0
	ProhibitAbove = 1
	// ProhibitBelow = 0
	InitialPenetrationResistance = 3
	AllowedDoorLocations
	[
		[0, 1]
		[1, 1]
	]

	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	Components : ^/0/Components
	{

		// --------------------------------- START TOGGLES
		
		// -----------------------------------------------
		// COLOURS TOGGLES -------------------------------
		// -----------------------------------------------

		ToggleColour
		{
			Type = UIToggle
			ToggleID = "Enderluck_ToggleID_Colours"
			Default = 0
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}
				
		ToggleColour_Default
		{
			Type = ModeToggle
			Mode = ToggleColour
			OnMode = 0
		}
		ToggleColour_Red :		ToggleColour_Default	{ OnMode = 1 }
		ToggleColour_Orange :	ToggleColour_Default	{ OnMode = 2 }
		ToggleColour_Yellow :	ToggleColour_Default	{ OnMode = 3 }
		ToggleColour_Green :	ToggleColour_Default	{ OnMode = 4 }
		ToggleColour_Blue :		ToggleColour_Default	{ OnMode = 5 }
		ToggleColour_Cyan :		ToggleColour_Default	{ OnMode = 6 }
		ToggleColour_Purple :	ToggleColour_Default	{ OnMode = 7 }
		ToggleColour_Pink :		ToggleColour_Default	{ OnMode = 8 }

		// -----------------------------------------------
		// DISPLAY TOGGLES -------------------------------
		// -----------------------------------------------
		
		ToggleDisplay
		{
			Type = UIToggle
			ToggleID = "Kebechet_ToggleID_Display"
			Default = 0
			AlwaysAllowInBuildMode = true
			RequiresCommand = false
		}

		ToggleDisplay_On
		{
			Type = ModeToggle
			Mode = ToggleDisplay
			OnMode = 0
		}

		ToggleDisplay_Off : ToggleDisplay_On	{ OnMode = 1 }

		// -----------------------------------------------
		// MULTI TOGGLES --------------------------------- // Kebechet_TINY_ColoursProxy, Kebechet_TINY_AngleProxy, Kebechet_TINY_DisplayProxy
		// -----------------------------------------------

		// ---------------- Default ----------------------
		
		Toggle_Default_On
		{
			Type = MultiToggle
			Toggles = [ToggleColour_Default, ToggleDisplay_On] 
			Mode = All
		}
		Toggle_Default_Off :	Toggle_Default_On	{ Toggles = [ToggleColour_Default, ToggleDisplay_Off] }
		// ---------------- Red ---------------------
		Toggle_Red_On :			Toggle_Default_On	{ Toggles = [ToggleColour_Red, ToggleDisplay_On] }
		Toggle_Red_Off :		Toggle_Default_On	{ Toggles = [ToggleColour_Red, ToggleDisplay_Off] }
		// ---------------- Orange ------------------
		Toggle_Orange_On :		Toggle_Default_On	{ Toggles = [ToggleColour_Orange, ToggleDisplay_On] }
		Toggle_Orange_Off :		Toggle_Default_On	{ Toggles = [ToggleColour_Orange, ToggleDisplay_Off] }
		// ---------------- Yellow ------------------
		Toggle_Yellow_On :		Toggle_Default_On	{ Toggles = [ToggleColour_Yellow, ToggleDisplay_On] }
		Toggle_Yellow_Off :		Toggle_Default_On	{ Toggles = [ToggleColour_Yellow, ToggleDisplay_Off] }
		// ---------------- Green -------------------
		Toggle_Green_On :		Toggle_Default_On	{ Toggles = [ToggleColour_Green, ToggleDisplay_On] }
		Toggle_Green_Off :		Toggle_Default_On	{ Toggles = [ToggleColour_Green, ToggleDisplay_Off] }
		// ---------------- Blue --------------------
		Toggle_Blue_On :		Toggle_Default_On	{ Toggles = [ToggleColour_Blue, ToggleDisplay_On] }
		Toggle_Blue_Off :		Toggle_Default_On	{ Toggles = [ToggleColour_Blue, ToggleDisplay_Off] }
		// ---------------- Cyan --------------------
		Toggle_Cyan_On :		Toggle_Default_On	{ Toggles = [ToggleColour_Cyan, ToggleDisplay_On] }
		Toggle_Cyan_Off :		Toggle_Default_On	{ Toggles = [ToggleColour_Cyan, ToggleDisplay_Off] }
		// ---------------- Purple ------------------
		Toggle_Purple_On :		Toggle_Default_On	{ Toggles = [ToggleColour_Purple, ToggleDisplay_On] }
		Toggle_Purple_Off :		Toggle_Default_On	{ Toggles = [ToggleColour_Purple, ToggleDisplay_Off] }
		// ---------------- Pink --------------------
		Toggle_Pink_On :		Toggle_Default_On	{ Toggles = [ToggleColour_Pink, ToggleDisplay_On] }
		Toggle_Pink_Off :		Toggle_Default_On	{ Toggles = [ToggleColour_Pink, ToggleDisplay_Off] }

		// --------------------------------- END TOGGLES
		
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, ScorchedToggle, &~/Part/^/0/OVERCLOCK_OPERATIONAL ]
			Mode = All
		}

		CommandConsumptionToggle
		{
			Type = MultiToggle
			Toggles = [PowerToggle, ScorchedToggle]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		ScorchedToggle
		{
			Type = StatusToggle
			StatusType = cosmoteer.scorched
			MinStatusValue = 1
			Invert = true
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = CommandConsumptionToggle
			CommandPoints = 1
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 2000
			OperationalToggle = IsOperational
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
			DrainResistance
			{
				BaseValue = 0
				Modifiers
				[
					{
						Type = Status
						StatusType = cosmoteer.shield_overload
						ModificationMode = Subtract
					}
				]
			}
		}

		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Defense_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
		}
		
		Overclock_BatteryProducer
		{
			Type = ResourceConverter
			OperationalToggle = IsOverclocked
			ToStorage = BatteryStorage
			ToQuantity = (&~/Part/Components/PowerDrain/FromQuantity/BaseValue) * (&~/OVERCLOCK/RECHARGE_USAGE_RATIO) * (&~/OVERCLOCK/POWER_DRAIN_FACTOR)
			Interval = &~/Part/Components/PowerDrain/Interval
		}

		ProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = BatteryStorage
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}

		PowerDrain
		{
			Type = ResourceConverter
			OperationalToggle = IsOperational
			FromStorage = BatteryStorage
			FromQuantity
			{
				BaseValue = 50
				Modifiers
				[
					{
						Type = BuffRemap
						BuffType = Overclock
						ModificationMode = Multiply
						RemapFrom = [0, 1]
						RemapTo = [1, &~/OVERCLOCK/POWER_DRAIN_FACTOR ]
					}
				]
			}
			MinFromQuantityForConversion = 1
			Interval = 1
		}
		
		IsOperationalProxy
		{
			Type = MultiToggle
			Toggles = [ProxyBatteryStorage]
			Mode = All
		}
		ProxyBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 0
			ToggleOnResources = 1
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// ARCSHIELD ORIGINAL - START //////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		ArcShield : <./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/ArcShield
		{
			Radius = 85
			Arc = 4.11d
			OperationalToggle = IsOperationalProxy
			PenetrationResistance = [10, 10]
			ResourceDrainPerDamage = 0.3
//			Rotation = -90d
			Location = [1, 82.5]

			ShieldMediaEffects
			[
				: &../^/0/ShieldMediaEffects/0
				{
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
					UPerNinetyDegrees = 10
/*					ArcSprite : ^/0/ArcSprite
					{
						_xScale = 1
						Size = [0, 1.2]
					}*/
					ArcSpriteSegments = 64
				}
				: &../^/0/ShieldMediaEffects/1	{}
				: &../^/0/ShieldMediaEffects/2	{}
			]

			HitMediaEffects
			[
				: &../^/0/HitMediaEffects/0
				{
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = 1d
					ArcSprite : ^/0/ArcSprite
					{
						Size = [0, 1.5]
					}
				}
				: &../^/0/HitMediaEffects/1	{}
			]
		}
		
		OverclockTweenToggle
		{
			Type = ThresholdToggle
			ValueFrom = OverclockStateValue
			MinAmount = 1
		}
		
		OverclockedEffectToggle
		{
			Type = MultiToggle
			Toggles = [OverclockTweenToggle, IsOperationalOverclocked]
			Mode = All
		}

		Overclock_BlueprintArc
		{
			Type = ArcSprite
			VisibilityToggle = OverclockModeToggle
			ChainedTo = ArcShield
			Radius = &../ArcShield/Radius
			Arc = &../ArcShield/Arc
			SpriteSegments = (&../ArcShield/BlueprintArcSpriteSegments)
			Sprite
			{
				Texture
				{
					File = "./Data/ships/terran/shield_gen_small/shield_energy_oc.png"
					UVMode = Wrap
					SampleMode = Linear
					MipLevels = 1
				}
				Size = [0, 1.5]
				Color = [255, 134, 36, 127]
			}
		}
		
		OverclockEffect :	<./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/Overclock_ReinforcedEffect
		{
			OperationalToggle = IsOperationalProxy
			ContinuousEffects
			[
				: ../^/0/ContinuousEffects/0
				{
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
				}
			]
		}
        
		OverloadValue
		{
			Type = BuffableValue
			Value
			{
				BaseValue = 0
				Modifiers
				[
					{
						Type = Status
						StatusType = cosmoteer.shield_overload
						ModificationMode = Replace
						BaseStatusValue = 0
					}
				]
			}
		}
		
		IsOverloaded
		{
			Type = ThresholdToggle
			ValueFrom = OverloadValue
			MinAmount = 0.01
		}
		
		
		IsOperationalOverloaded
		{
			Type = MultiToggle
			Toggles = [ IsOperational, IsOverloaded ]
			Mode = All
		}
		
		IsOperationalOverclockedOverloaded
		{
			Type = MultiToggle
			Toggles = [ IsOperational, IsOverloaded, OverclockedEffectToggle ]
			Mode = All
		}
		
		OverloadEffect :	<./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/OverloadEffect
		{
			OperationalToggle = IsOperationalProxy
			ContinuousEffects
			[
				: ../^/0/ContinuousEffects/0
				{
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
				}
			]
		}
		
		OverclockOverloadEffect :	<./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/Overclock_OverloadEffect_Reinforced
		{
			OperationalToggle = IsOperationalProxy
			ContinuousEffects
			[
				: ../^/0/ContinuousEffects/0
				{
					Radius = &~/Part/Components/ArcShield/Radius
					Arc = &~/Part/Components/ArcShield/Arc
				}
			]
		}

		// Overclock / Thermal network
		OverclockHeatProducer
		{
			Type = ResourceConverter
			OperationalToggle = IsOperationalOverclocked
			HEAT_PER_INTERVAL = ceil((&~/OVERCLOCK/HEAT_PER_SECOND) * (&Interval))
			ToQuantity = (&HEAT_PER_INTERVAL) * (&~/HEAT_TO_RESOURCE)
			ToStorage = &~/Part/^/0/HEAT_TARGET_STORAGE
			Interval = 0.5
		}
		OverclockHitHeatProducer
		{
			Type = ResourceChange
			ResourceStorage = &~/Part/^/0/HEAT_TARGET_STORAGE
			// Provides the post-resistance damage value as EffectScale
			Trigger = Overclock_ArcShieldProxy
			Amount
			{
				BaseValue = "round((&~/OVERCLOCK/HEAT_PER_DAMAGE) * (&~/HEAT_TO_RESOURCE), 0)"
				Modifiers
				[
					{
						Type = EffectScale
						ModificationMode = Multiply
					}
					{
						Type = Status
						StatusType = cosmoteer.shield_overload
						ModificationMode = Multiply
						BaseStatusValue = 1
					}
					{
						Type = Buff
						BuffType = Overclock
						ModificationMode = Multiply
					}
				]
			}
		}
		Overclock_ArcShieldProxy
		{
			Type = TriggerProxy
			ComponentID = TINY_ArcShield
			ProxyToggle = IsOperationalOverclocked
		}
		OverheatEffects : ^/0/OverheatEffects
		{
			Location = [1, 1.5]
		}
		
		Router
		{
			Type = NetworkRouter
			RouteGenerators
			[
				{
					Type = Simple
					HEAT_INPUT = &~/Part/^/0/HEAT_NETWORK_INPUT
					Routes
					[
						[&../../HEAT_INPUT, Port_BL, 0]
						[&../../HEAT_INPUT, Port_BR, 0]
						[&../../HEAT_INPUT, Port_BD0, 0]
						[&../../HEAT_INPUT, Port_BD1, 0]
					]
				}
			]
		}
		Port_BL : ~/Part/^/0/BASE_THERMAL_PORT
		{
			Location = [0, 0]
			Direction = Left
		}
		Port_BR : Port_BL
		{
			Location = [1, 0]
			Direction = Right
		}
		Port_BD0 : Port_BL
		{
			Location = [0, 0]
			Direction = Down
		}
		Port_BD1 : Port_BD0
		{
			Location = [1, 0]
		}
		
		IsOperationalNonOverclocked
		{
			Type = MultiToggle
			Toggles = [ IsOperational, { Toggle=IsOverclocked; Invert=true } ]
			Mode = All
		}
		BaseEmitterEffect :	<./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/BaseEmitterEffect
		{
			Location = [83.4, 0]	//83.8
			FactorMediaEffectsIntensityWith = ProxyBatteryStorage
			OperationalToggle =  IsOperationalProxy
			MediaEffects
			[
				: &../^/0/MediaEffects/0
				{
//					Radius = 2.2
					Arc = 65d
					ArcSprite :	&^/0/ArcSprite
					{
//						UVRect = [0, 1, 1, -1]
						_xScale = 0.5
						Size = [0, 0.5]
					}
				}
			]
		}

		ArcShield_ChainProxy	// No idea if this is actually needed. Chaining it instead to ArcShield with IsOperationalProxy seems to also work normally.
		{
			Type = ChainableProxy
			ComponentID = TINY_ArcShield
		}

		ShieldOperationEffects :	<./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/ShieldOperationEffects
		{
			ChainedTo = ArcShield_ChainProxy
			Location = [&~/Part/Components/ArcShield/Radius, 0]
		}
		Overclock_StartEffects :	ShieldOperationEffects, <./Data/ships/terran/shield_gen_small/shield_gen_small.rules>/Part/Components/Overclock_ShieldReinforcedEffects
		{
			Toggle = IsOperationalOverclocked
			ToggledOffMediaEffects
			ToggledOnMediaEffects : &^/1/ToggledOnMediaEffects	[]
		}
		
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// ARCSHIELD ORIGINAL - END ////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD DEFAULT START -------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------

		ToggleComponents_Shield_Default_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Default_On
			Components = 
			{ 
				TINY_ArcShield : &~/Part/Components/ArcShield
				{
					OperationalToggle = IsOperational
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Default/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Default/HitMediaEffects_On, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
				
				TINY_EmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					FactorMediaEffectsIntensityWith = BatteryStorage
					OperationalToggle = IsOperational
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Default/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
					]
				}
				TINY_OverclockEffect : &~/Part/Components/OverclockEffect
				{
					OperationalToggle = OverclockedEffectToggle
					Shield = TINY_ArcShield
					ChainedTo = TINY_ArcShield
				}
				TINY_OverloadEffect : &~/Part/Components/OverloadEffect
				{
					OperationalToggle = IsOperationalOverloaded
					Shield = TINY_ArcShield
					ChainedTo = TINY_ArcShield
				}
				TINY_OverclockOverloadEffect : &~/Part/Components/OverclockOverloadEffect
				{
					OperationalToggle = IsOperationalOverclockedOverloaded
					Shield = TINY_ArcShield
					ChainedTo = TINY_ArcShield
				}
			}
		}
		
		ToggleComponents_Shield_Default_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Default_Off
			Components =
			{
				TINY_ArcShield : &../../ToggleComponents_Shield_Default_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Default/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Default/HitMediaEffects_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD DEFAULT END ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD RED START -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Shield_Red_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_On
			Components : &../ToggleComponents_Shield_Default_On/Components
			{
				TINY_ArcShield : ^/0/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Red/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Red/HitMediaEffects_On, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
				TINY_EmitterEffect : ^/0/TINY_EmitterEffect
				{
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Red/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
					]
				}
			}
		}
		
		ToggleComponents_Shield_Red_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Red_Off
			Components =
			{
				TINY_ArcShield : &../../ToggleComponents_Shield_Red_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Red/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Red/HitMediaEffects_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD RED END -------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD ORANGE START --------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Shield_Orange_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_On
			Components : &../ToggleComponents_Shield_Default_On/Components
			{
				TINY_ArcShield : ^/0/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Orange/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Orange/HitMediaEffects_On, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
				TINY_EmitterEffect : ^/0/TINY_EmitterEffect
				{
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Orange/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
					]
				}
			}
		}
		
		ToggleComponents_Shield_Orange_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Orange_Off
			Components =
			{
				TINY_ArcShield : &../../ToggleComponents_Shield_Orange_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Orange/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Orange/HitMediaEffects_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD ORANGE END ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD YELLOW START --------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Shield_Yellow_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_On
			Components : &../ToggleComponents_Shield_Default_On/Components
			{
				TINY_ArcShield : ^/0/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Yellow/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Yellow/HitMediaEffects_On, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
				TINY_EmitterEffect : ^/0/TINY_EmitterEffect
				{
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Yellow/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
					]
				}
			}
		}
		
		ToggleComponents_Shield_Yellow_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Yellow_Off
			Components =
			{
				TINY_ArcShield : &../../ToggleComponents_Shield_Yellow_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Yellow/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Yellow/HitMediaEffects_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD YELLOW END ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD GREEN START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Shield_Green_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_On
			Components : &../ToggleComponents_Shield_Default_On/Components
			{
				TINY_ArcShield : ^/0/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Green/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Green/HitMediaEffects_On, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
				TINY_EmitterEffect : ^/0/TINY_EmitterEffect
				{
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Green/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
					]
				}
			}
		}
		
		ToggleComponents_Shield_Green_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Green_Off
			Components =
			{
				TINY_ArcShield : &../../ToggleComponents_Shield_Green_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Green/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Green/HitMediaEffects_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD GREEN END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD PURPLE START --------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Shield_Purple_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Purple_On
			Components : &../ToggleComponents_Shield_Default_On/Components
			{
				TINY_ArcShield : ^/0/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Purple/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Purple/HitMediaEffects_On, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
				TINY_EmitterEffect : ^/0/TINY_EmitterEffect
				{
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Purple/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
					]
				}
			}
		}
		
		ToggleComponents_Shield_Purple_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Purple_Off
			Components =
			{
				TINY_ArcShield : &../../ToggleComponents_Shield_Purple_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Purple/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Purple/HitMediaEffects_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD PURPLE END ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD PINK START ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Shield_Pink_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Pink_On
			Components : &../ToggleComponents_Shield_Default_On/Components
			{
				TINY_ArcShield : ^/0/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Pink/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Pink/HitMediaEffects_On, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
				TINY_EmitterEffect : ^/0/TINY_EmitterEffect
				{
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Pink/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
					]
				}
			}
		}
		
		ToggleComponents_Shield_Pink_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Pink_Off
			Components =
			{
				TINY_ArcShield : &../../ToggleComponents_Shield_Pink_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Pink/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Pink/HitMediaEffects_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD PINK END ------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD BLUE START ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Shield_Blue_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_On
			Components : &../ToggleComponents_Shield_Default_On/Components
			{
				TINY_ArcShield : ^/0/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Blue/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Blue/HitMediaEffects_On, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
				TINY_EmitterEffect : ^/0/TINY_EmitterEffect
				{
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Blue/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
					]
				}
			}
		}
		
		ToggleComponents_Shield_Blue_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Blue_Off
			Components =
			{
				TINY_ArcShield : &../../ToggleComponents_Shield_Blue_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Blue/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Blue/HitMediaEffects_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD BLUE END ------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD CYAN START ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Shield_Cyan_On
		{
			Type = ToggledComponents
			Toggle = Toggle_Cyan_On
			Components : &../ToggleComponents_Shield_Default_On/Components
			{
				TINY_ArcShield : ^/0/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Cyan/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Cyan/HitMediaEffects_On, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
				TINY_EmitterEffect : ^/0/TINY_EmitterEffect
				{
					MediaEffects
					[
						: &../^/0/MediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Cyan/ShieldMediaEffect_On, ^/0/ArcSprite	{}
						}
					]
				}
			}
		}
		
		ToggleComponents_Shield_Cyan_Off
		{
			Type = ToggledComponents
			Toggle = Toggle_Cyan_Off
			Components =
			{
				TINY_ArcShield : &../../ToggleComponents_Shield_Cyan_On/Components/TINY_ArcShield
				{
					ShieldMediaEffects
					[
						: &../^/0/ShieldMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Cyan/ShieldMediaEffect_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/ShieldMediaEffects/1	{}
						: &../^/0/ShieldMediaEffects/2	{}
					]
					HitMediaEffects
					[
						: &../^/0/HitMediaEffects/0
						{
							ArcSprite : &<../colors.rules>/Color/Cyan/HitMediaEffects_Off, ^/0/ArcSprite	{}
						}
						: &../^/0/HitMediaEffects/1	{}
					]
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// ARCSHIELD BLUE END ------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		Shield_Doodad_Graphics
		{
			Type = Graphics
			Location = [1, 0.5]
			OperationalToggle = IsOperational
			OperationalDoodad
			{
				Layer = "doodads_high"
				//Offset = [0, 0]
				DamageLevels
				[
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [1, 1]
						RotSpeed = &<../colors.rules>/StatsCommon/DoodadAxe2_RotSpeed_0DMG
					}
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [1, 1]
						RotSpeed = &<../colors.rules>/StatsCommon/DoodadAxe2_RotSpeed_33DMG
					}
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [1, 1]
						RotSpeed = &<../colors.rules>/StatsCommon/DoodadAxe2_RotSpeed_66DMG
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [1, 1]
					}
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [1, 1]
					}
					{
						File = "doodad_axe.png"
						NormalsFile = "doodad_axe_normals.png"
						Size = [1, 1]
					}
				]
			}
		}

		Graphics
		{
			Type = Graphics
			Location = [1, 0.5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [2, 1]
					}
					{
						File = "floor_33.png"
						Size = [2, 1]
					}
					{
						File = "floor_66.png"
						Size = [2, 1]
					}
				]
			}
			
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [2, 1]
					}
					{
						File = "walls_33.png"
						Size = [2, 1]
					}
					{
						File = "walls_66.png"
						Size = [2, 1]
					}
				]
			}
			
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [2, 1]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [2, 1]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [2, 1]
					}
				]
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS DEFAULT START --------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Graphics_Default
		{
			Type = ToggledComponents
			Toggle = ToggleColour_Default
			//IncludeInredprints = true
			Components = 
			{
				K_Graphics_Default : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"default/doodads_lightning1.png"
									"default/doodads_lightning2.png"
									"default/doodads_lightning3.png"
									"default/doodads_lightning4.png"
									"default/doodads_lightning5.png"
									"default/doodads_lightning6.png"
									"default/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"default/doodads_lightning1.png"
									"default/doodads_lightning2.png"
									"default/doodads_lightning3.png"
									"default/doodads_lightning4.png"
									"default/doodads_lightning5.png"
									"default/doodads_lightning6.png"
									"default/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"default/doodads_lightning1.png"
									"default/doodads_lightning2.png"
									"default/doodads_lightning3.png"
									"default/doodads_lightning4.png"
									"default/doodads_lightning5.png"
									"default/doodads_lightning6.png"
									"default/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "default/lights.png"
								Size = [2, 1]
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Default
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"default/dome_emitter_fx1.png"
									"default/dome_emitter_fx2.png"
									"default/dome_emitter_fx3.png"
									"default/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"default/dome_emitter_fx1.png"
									"default/dome_emitter_fx2.png"
									"default/dome_emitter_fx3.png"
									"default/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"default/dome_emitter_fx1.png"
									"default/dome_emitter_fx2.png"
									"default/dome_emitter_fx3.png"
									"default/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "default/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "default/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "default/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS DEFAULT END ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS RED START ------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Graphics_Red
		{
			Type = ToggledComponents
			Toggle = ToggleColour_Red
			//IncludeInredprints = true
			Components = 
			{
				K_Graphics_Red : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"red/doodads_lightning1.png"
									"red/doodads_lightning2.png"
									"red/doodads_lightning3.png"
									"red/doodads_lightning4.png"
									"red/doodads_lightning5.png"
									"red/doodads_lightning6.png"
									"red/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"red/doodads_lightning1.png"
									"red/doodads_lightning2.png"
									"red/doodads_lightning3.png"
									"red/doodads_lightning4.png"
									"red/doodads_lightning5.png"
									"red/doodads_lightning6.png"
									"red/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"red/doodads_lightning1.png"
									"red/doodads_lightning2.png"
									"red/doodads_lightning3.png"
									"red/doodads_lightning4.png"
									"red/doodads_lightning5.png"
									"red/doodads_lightning6.png"
									"red/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "red/lights.png"
								Size = [2, 1]
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Red
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"red/dome_emitter_fx1.png"
									"red/dome_emitter_fx2.png"
									"red/dome_emitter_fx3.png"
									"red/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"red/dome_emitter_fx1.png"
									"red/dome_emitter_fx2.png"
									"red/dome_emitter_fx3.png"
									"red/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"red/dome_emitter_fx1.png"
									"red/dome_emitter_fx2.png"
									"red/dome_emitter_fx3.png"
									"red/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "red/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "red/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "red/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS RED END --------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS ORANGE START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Graphics_Orange
		{
			Type = ToggledComponents
			Toggle = ToggleColour_Orange
			//IncludeInorangeprints = true
			Components = 
			{
				K_Graphics_Orange : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"orange/doodads_lightning1.png"
									"orange/doodads_lightning2.png"
									"orange/doodads_lightning3.png"
									"orange/doodads_lightning4.png"
									"orange/doodads_lightning5.png"
									"orange/doodads_lightning6.png"
									"orange/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"orange/doodads_lightning1.png"
									"orange/doodads_lightning2.png"
									"orange/doodads_lightning3.png"
									"orange/doodads_lightning4.png"
									"orange/doodads_lightning5.png"
									"orange/doodads_lightning6.png"
									"orange/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"orange/doodads_lightning1.png"
									"orange/doodads_lightning2.png"
									"orange/doodads_lightning3.png"
									"orange/doodads_lightning4.png"
									"orange/doodads_lightning5.png"
									"orange/doodads_lightning6.png"
									"orange/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "orange/lights.png"
								Size = [2, 1]
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Orange
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"orange/dome_emitter_fx1.png"
									"orange/dome_emitter_fx2.png"
									"orange/dome_emitter_fx3.png"
									"orange/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"orange/dome_emitter_fx1.png"
									"orange/dome_emitter_fx2.png"
									"orange/dome_emitter_fx3.png"
									"orange/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"orange/dome_emitter_fx1.png"
									"orange/dome_emitter_fx2.png"
									"orange/dome_emitter_fx3.png"
									"orange/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "orange/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "orange/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "orange/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS ORANGE END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS YELLOW START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Graphics_Yellow
		{
			Type = ToggledComponents
			Toggle = ToggleColour_Yellow
			//IncludeInYellowprints = true
			Components = 
			{
				K_Graphics_Yellow : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"Yellow/doodads_lightning1.png"
									"Yellow/doodads_lightning2.png"
									"Yellow/doodads_lightning3.png"
									"Yellow/doodads_lightning4.png"
									"Yellow/doodads_lightning5.png"
									"Yellow/doodads_lightning6.png"
									"Yellow/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"Yellow/doodads_lightning1.png"
									"Yellow/doodads_lightning2.png"
									"Yellow/doodads_lightning3.png"
									"Yellow/doodads_lightning4.png"
									"Yellow/doodads_lightning5.png"
									"Yellow/doodads_lightning6.png"
									"Yellow/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"Yellow/doodads_lightning1.png"
									"Yellow/doodads_lightning2.png"
									"Yellow/doodads_lightning3.png"
									"Yellow/doodads_lightning4.png"
									"Yellow/doodads_lightning5.png"
									"Yellow/doodads_lightning6.png"
									"Yellow/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "Yellow/lights.png"
								Size = [2, 1]
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Yellow
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"yellow/dome_emitter_fx1.png"
									"yellow/dome_emitter_fx2.png"
									"yellow/dome_emitter_fx3.png"
									"yellow/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"yellow/dome_emitter_fx1.png"
									"yellow/dome_emitter_fx2.png"
									"yellow/dome_emitter_fx3.png"
									"yellow/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"yellow/dome_emitter_fx1.png"
									"yellow/dome_emitter_fx2.png"
									"yellow/dome_emitter_fx3.png"
									"yellow/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "yellow/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "yellow/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "yellow/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS YELLOW END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS GREEN START ----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Graphics_Green
		{
			Type = ToggledComponents
			Toggle = ToggleColour_Green
			//IncludeInGreenprints = true
			Components = 
			{
				K_Graphics_Green : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"green/doodads_lightning1.png"
									"green/doodads_lightning2.png"
									"green/doodads_lightning3.png"
									"green/doodads_lightning4.png"
									"green/doodads_lightning5.png"
									"green/doodads_lightning6.png"
									"green/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"green/doodads_lightning1.png"
									"green/doodads_lightning2.png"
									"green/doodads_lightning3.png"
									"green/doodads_lightning4.png"
									"green/doodads_lightning5.png"
									"green/doodads_lightning6.png"
									"green/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"green/doodads_lightning1.png"
									"green/doodads_lightning2.png"
									"green/doodads_lightning3.png"
									"green/doodads_lightning4.png"
									"green/doodads_lightning5.png"
									"green/doodads_lightning6.png"
									"green/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Green
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"green/dome_emitter_fx1.png"
									"green/dome_emitter_fx2.png"
									"green/dome_emitter_fx3.png"
									"green/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"green/dome_emitter_fx1.png"
									"green/dome_emitter_fx2.png"
									"green/dome_emitter_fx3.png"
									"green/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"green/dome_emitter_fx1.png"
									"green/dome_emitter_fx2.png"
									"green/dome_emitter_fx3.png"
									"green/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "green/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "green/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "green/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS GREEN END ------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS BLUE START -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Graphics_Blue
		{
			Type = ToggledComponents
			Toggle = ToggleColour_Blue
			IncludeInBlueprints = false
			Components = 
			{
				K_Graphics_Blue : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"blue/doodads_lightning1.png"
									"blue/doodads_lightning2.png"
									"blue/doodads_lightning3.png"
									"blue/doodads_lightning4.png"
									"blue/doodads_lightning5.png"
									"blue/doodads_lightning6.png"
									"blue/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"blue/doodads_lightning1.png"
									"blue/doodads_lightning2.png"
									"blue/doodads_lightning3.png"
									"blue/doodads_lightning4.png"
									"blue/doodads_lightning5.png"
									"blue/doodads_lightning6.png"
									"blue/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"blue/doodads_lightning1.png"
									"blue/doodads_lightning2.png"
									"blue/doodads_lightning3.png"
									"blue/doodads_lightning4.png"
									"blue/doodads_lightning5.png"
									"blue/doodads_lightning6.png"
									"blue/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "blue/lights.png"
								Size = [2, 1]
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Blue
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"blue/dome_emitter_fx1.png"
									"blue/dome_emitter_fx2.png"
									"blue/dome_emitter_fx3.png"
									"blue/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"blue/dome_emitter_fx1.png"
									"blue/dome_emitter_fx2.png"
									"blue/dome_emitter_fx3.png"
									"blue/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"blue/dome_emitter_fx1.png"
									"blue/dome_emitter_fx2.png"
									"blue/dome_emitter_fx3.png"
									"blue/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "blue/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "blue/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "blue/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS BLUE END -------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS CYAN START -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Graphics_Cyan
		{
			Type = ToggledComponents
			Toggle = ToggleColour_Cyan
			IncludeInBlueprints = false
			Components = 
			{
				K_Graphics_Cyan : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"cyan/doodads_lightning1.png"
									"cyan/doodads_lightning2.png"
									"cyan/doodads_lightning3.png"
									"cyan/doodads_lightning4.png"
									"cyan/doodads_lightning5.png"
									"cyan/doodads_lightning6.png"
									"cyan/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"cyan/doodads_lightning1.png"
									"cyan/doodads_lightning2.png"
									"cyan/doodads_lightning3.png"
									"cyan/doodads_lightning4.png"
									"cyan/doodads_lightning5.png"
									"cyan/doodads_lightning6.png"
									"cyan/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"cyan/doodads_lightning1.png"
									"cyan/doodads_lightning2.png"
									"cyan/doodads_lightning3.png"
									"cyan/doodads_lightning4.png"
									"cyan/doodads_lightning5.png"
									"cyan/doodads_lightning6.png"
									"cyan/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "cyan/lights.png"
								Size = [2, 1]
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Cyan
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"cyan/dome_emitter_fx1.png"
									"cyan/dome_emitter_fx2.png"
									"cyan/dome_emitter_fx3.png"
									"cyan/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"cyan/dome_emitter_fx1.png"
									"cyan/dome_emitter_fx2.png"
									"cyan/dome_emitter_fx3.png"
									"cyan/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"cyan/dome_emitter_fx1.png"
									"cyan/dome_emitter_fx2.png"
									"cyan/dome_emitter_fx3.png"
									"cyan/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "cyan/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "cyan/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "cyan/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS CYAN END -------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS PURPLE START ---------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Graphics_Purple
		{
			Type = ToggledComponents
			Toggle = ToggleColour_Purple
			IncludeInBlueprints = false
			Components = 
			{
				K_Graphics_Purple : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"purple/doodads_lightning1.png"
									"purple/doodads_lightning2.png"
									"purple/doodads_lightning3.png"
									"purple/doodads_lightning4.png"
									"purple/doodads_lightning5.png"
									"purple/doodads_lightning6.png"
									"purple/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"purple/doodads_lightning1.png"
									"purple/doodads_lightning2.png"
									"purple/doodads_lightning3.png"
									"purple/doodads_lightning4.png"
									"purple/doodads_lightning5.png"
									"purple/doodads_lightning6.png"
									"purple/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"purple/doodads_lightning1.png"
									"purple/doodads_lightning2.png"
									"purple/doodads_lightning3.png"
									"purple/doodads_lightning4.png"
									"purple/doodads_lightning5.png"
									"purple/doodads_lightning6.png"
									"purple/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "purple/lights.png"
								Size = [2, 1]
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Purple
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"purple/dome_emitter_fx1.png"
									"purple/dome_emitter_fx2.png"
									"purple/dome_emitter_fx3.png"
									"purple/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"purple/dome_emitter_fx1.png"
									"purple/dome_emitter_fx2.png"
									"purple/dome_emitter_fx3.png"
									"purple/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"purple/dome_emitter_fx1.png"
									"purple/dome_emitter_fx2.png"
									"purple/dome_emitter_fx3.png"
									"purple/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "purple/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "purple/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "purple/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS PURPLE END -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS PINK START -----------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		ToggleComponents_Graphics_Pink
		{
			Type = ToggledComponents
			Toggle = ToggleColour_Pink
			IncludeInBlueprints = false
			Components = 
			{
				K_Graphics_Pink : ~/Part/Components/Graphics
				{				
					OperationalDoodad
					{
						Layer = "weapons"
						Offset = [0, 0]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"pink/doodads_lightning1.png"
									"pink/doodads_lightning2.png"
									"pink/doodads_lightning3.png"
									"pink/doodads_lightning4.png"
									"pink/doodads_lightning5.png"
									"pink/doodads_lightning6.png"
									"pink/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"pink/doodads_lightning1.png"
									"pink/doodads_lightning2.png"
									"pink/doodads_lightning3.png"
									"pink/doodads_lightning4.png"
									"pink/doodads_lightning5.png"
									"pink/doodads_lightning6.png"
									"pink/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"pink/doodads_lightning1.png"
									"pink/doodads_lightning2.png"
									"pink/doodads_lightning3.png"
									"pink/doodads_lightning4.png"
									"pink/doodads_lightning5.png"
									"pink/doodads_lightning6.png"
									"pink/doodads_lightning7.png"
								]
								Size = [2, 1]
								AnimationInterval = 0.1
							}
						]
					}
					
					OperationalLighting
					{
						Layer = "lights_add"
						DamageLevels
						[
							{
								File = "pink/lights.png"
								Size = [2, 1]
							}
						]
					}
				}
				
				K_Dome_Emitter_Ext_Pink
				{
					Type = Graphics
					Location = [1, 0.5]
					OperationalToggle = IsOperational
					OperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								AnimationFiles
								[
									"pink/dome_emitter_fx1.png"
									"pink/dome_emitter_fx2.png"
									"pink/dome_emitter_fx3.png"
									"pink/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"pink/dome_emitter_fx1.png"
									"pink/dome_emitter_fx2.png"
									"pink/dome_emitter_fx3.png"
									"pink/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
							{
								AnimationFiles
								[
									"pink/dome_emitter_fx1.png"
									"pink/dome_emitter_fx2.png"
									"pink/dome_emitter_fx3.png"
									"pink/dome_emitter_fx4.png"
								]
								Size = [2, 1]
								//Z = 1
								AnimationInterval = 0.1
							}
						]
					}
					NonOperationalDoodad
					{
						Layer = "structure"
						Offset = [0, -1.1]
						DamageLevels
						[
							{
								File = "pink/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "pink/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
							{
								File = "pink/dome_emitter_off.png"
								NormalsFile = "dome_emitter_normals.png"
								// Z = 1
								Size = [2, 1]
							}
						]
					}
				}
			}
		}
		// -------------------------------------------------------------------------------------------------------------------------
		// GRAPHICS PINK END -------------------------------------------------------------------------------------------------------
		// -------------------------------------------------------------------------------------------------------------------------
		
		BatterySprites
		{
			Type = ResourceSprites
			Location = [1, 0.5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			ResourceLevels
			[
				{
					File = "batteries1.png"
					Size = [2, 1]
				}
				{
					File = "batteries2.png"
					Size = [2, 1]
				}
			]
		}
				
		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		ScorchedTrigger
		{
			Type = ToggleTrigger
			Toggle = ScorchedToggle
			TriggerWhenOn = false
		}

		ScorchedEffects
		{
			Type = TriggeredEffects
			Trigger = ScorchedTrigger
			Location = &../DestroyedEffects/Location
			MediaEffects = &/COMMON_EFFECTS/MedPartScorched
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [1, 0.5]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 0.5]
			Layer = "indicators"
			Indicators
			[
				// Scorched
				{
					Toggle = ScorchedToggle
					AtlasSprite = &/INDICATORS/Scorched
					HidesIndicators = [1,2,3]
				}

				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Resetting from overclock
				{
					Toggle = &~/Part/^/0/OVERCLOCK_OPERATIONAL
					AtlasSprite : /INDICATORS/OverclockReset
					{
						Size = [1, 1]
					}
					HidesIndicators = [3]
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 2]
			Offset = [0, -0.5]
		}

		HeatGenerationValue
		{
			Type = StaticValue
			Value = (&~/OVERCLOCK/HEAT_PER_SECOND)
		}
		HeatGenerationStatProvider
		{
			Type = StatProvider
			Stat = HeatGeneration
			OperationalToggle = OverclockModeToggle
			ValueFrom = HeatGenerationValue
		}
	}

	Stats
	{
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&../StatsByCategory/0/Stats/PowerUsageContinuous) + 0.5
		RecCrew = (&RecPower) * 4
		
		// Add HP and penetration resistance for when buffing Bubble Shields?
	}
	
	StatsByCategory
	[
		{
			NameKey = "StatCategories/ShieldTiny"
			Stats
			{
				ShieldHP = (&~/Part/Components/BatteryStorage/MaxResources) / (&~/Part/Components/ArcShield/ResourceDrainPerDamage)
				ShieldPenResist = &~/Part/Components/ArcShield/PenetrationResistance/0
				ShieldLength = 6.1	// 2 * Radius * Sen(rad(arc)/2)
				ShieldDist = (&~/Part/Components/ArcShield/Radius) - (&~/Part/Components/ArcShield/Location/1)
				PowerUsageContinuous = (&~/Part/Components/PowerDrain/FromQuantity/BaseValue) / (&~/Part/Components/PowerDrain/Interval) / 1000
			}
		}
	]
	
	SecondaryToolTip
	{
		TitleKey = "StatCategories/Overclocked"
		DescriptionKey = "Parts/KebechetTINYmodularShieldOverclockDesc"
		Stats
		{
			SHIELD_REGEN_INACTIVE = (&~/Part/Components/Overclock_BatteryProducer/ToQuantity) / (&~/Part/Components/Overclock_BatteryProducer/Interval) / (&~/Part/Components/ArcShield/ResourceDrainPerDamage)
			SHIELD_REGEN_ACTIVE = (&SHIELD_REGEN_INACTIVE) - (&PowerUsageContinuous) * 1000 / (&~/Part/Components/ArcShield/ResourceDrainPerDamage)
			ShieldRegen = [&../SHIELD_REGEN_ACTIVE, &../SHIELD_REGEN_INACTIVE]
			PowerUsageContinuous = (&~/Part/Components/PowerDrain/FromQuantity/BaseValue) * (&~/OVERCLOCK/POWER_DRAIN_FACTOR) / (&~/Part/Components/PowerDrain/Interval) / 1000
			HeatGeneration = (&~/OVERCLOCK/HEAT_PER_SECOND)
			HeatPerDamage = (&~/OVERCLOCK/HEAT_PER_DAMAGE)
			
		}
	}
}